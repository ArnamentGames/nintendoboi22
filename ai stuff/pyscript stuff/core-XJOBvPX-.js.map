{"version":3,"file":"core-XJOBvPX-.js","sources":["../node_modules/sticky-module/esm/index.js","../node_modules/@ungap/with-resolvers/index.js","../node_modules/basic-devtools/esm/index.js","../node_modules/@webreflection/fetch/esm/index.js","../node_modules/polyscript/esm/workers.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/json.js","../node_modules/proxy-target/esm/types.js","../node_modules/js-proxy/esm/heap.js","../node_modules/sabayon/src/shared.js","../node_modules/sabayon/src/main.js","../node_modules/coincident/src/shared.js","../node_modules/coincident/src/main.js","../node_modules/coincident/src/window/types.js","../node_modules/proxy-target/esm/traps.js","../node_modules/js-proxy/esm/traps.js","../node_modules/coincident/src/window/symbol.js","../node_modules/coincident/src/window/constants.js","../node_modules/gc-hook/esm/index.js","../node_modules/coincident/src/window/events.js","../node_modules/coincident/src/window/main.js","../node_modules/polyscript/esm/worker/xworker.js","../node_modules/polyscript/esm/interpreter/_io.js","../node_modules/polyscript/esm/interpreter/dummy.js","../node_modules/codedent/esm/index.js","../node_modules/plain-tag/esm/index.js","../node_modules/html-escaper/esm/index.js","../node_modules/polyscript/esm/utils.js","../node_modules/polyscript/esm/interpreter/_utils.js","../node_modules/@webreflection/idb-map/index.js","../node_modules/@webreflection/idb-map/sync.js","../node_modules/polyscript/esm/interpreter/_python.js","../node_modules/polyscript/esm/python/mip.js","../node_modules/polyscript/esm/3rd-party.js","../node_modules/polyscript/esm/interpreter/micropython.js","../node_modules/polyscript/esm/interpreter/pyodide.js","../node_modules/polyscript/esm/interpreter/ruby-wasm-wasi.js","../node_modules/polyscript/esm/interpreter/wasmoon.js","../node_modules/polyscript/esm/interpreter/webr.js","../node_modules/polyscript/esm/interpreters.js","../node_modules/polyscript/esm/loader.js","../node_modules/to-json-callback/esm/index.js","../node_modules/polyscript/esm/hooks.js","../node_modules/polyscript/esm/worker/hook.js","../node_modules/polyscript/esm/worker/class.js","../node_modules/polyscript/esm/errors.js","../node_modules/polyscript/esm/worker/url.js","../node_modules/polyscript/esm/script-handler.js","../node_modules/polyscript/esm/listeners.js","../node_modules/polyscript/esm/xworker.js","../node_modules/polyscript/esm/custom.js","../node_modules/polyscript/esm/index.js","../src/types.js","../src/all-done.js","../src/plugins.js","../src/exceptions.js","../src/fetch.js","../src/config.js","../src/sync.js","../src/plugins-helper.js","../node_modules/type-checked-collections/esm/index.js","../src/stdlib.js","../src/stdlib/pyscript.js","../src/hooks.js","../src/core.js"],"sourcesContent":["/**\n * Allow leaking a module globally to help avoid conflicting exports\n * if the module might have been re-bundled in other projects.\n * @template T\n * @param {string} name the module name to save or retrieve\n * @param {T} value the module as value to save if not known\n * @param {globalThis} [global=globalThis] the reference where modules are saved where `globalThis` is the default\n * @returns {[T, boolean]} the passed `value` or the previous one as first entry, a boolean indicating if it was known or not\n */\nconst stickyModule = (name, value, global = globalThis) => {\n  const symbol = Symbol.for(name);\n  const known = symbol in global;\n  return [\n    known ?\n      global[symbol] :\n      Object.defineProperty(global, symbol, { value })[symbol],\n    known\n  ];\n};\n\nexport default stickyModule;\n","Promise.withResolvers || (Promise.withResolvers = function withResolvers() {\n  var a, b, c = new this(function (resolve, reject) {\n    a = resolve;\n    b = reject;\n  });\n  return {resolve: a, reject: b, promise: c};\n});\n","/**\n * Given a CSS selector, returns the first matching node, if any.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element?} the found element, if any\n */\nconst $ = (css, root = document) => root.querySelector(css);\n\n/**\n * Given a CSS selector, returns a list of all matching nodes.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element[]} a list of found nodes\n */\nconst $$ = (css, root = document) => [...root.querySelectorAll(css)];\n\n/**\n * Given a XPath selector, returns a list of all matching nodes.\n * @param {string} path the XPath selector to evaluate\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Node[]} a list of found nodes (elements, attributes, text, comments)\n */\nconst $x = (path, root = document) => {\n  const expression = (new XPathEvaluator).createExpression(path);\n  const xpath = expression.evaluate(root, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);\n  const result = [];\n  for (let i = 0, {snapshotLength} = xpath; i < snapshotLength; i++)\n    result.push(xpath.snapshotItem(i));\n  return result;\n};\n\nexport {$, $$, $x};\n","// a bit terser code than I usually write but it's 10 LOC within 80 cols\n// if you are struggling to follow the code you can replace 1-char\n// references around with the following one, hoping that helps :-)\n\n// d => descriptors\n// k => key\n// p => promise\n// r => response\n\nconst d = Object.getOwnPropertyDescriptors(Response.prototype);\n\nconst isFunction = value => typeof value === 'function';\n\nconst bypass = (p, k, { get, value }) => get || !isFunction(value) ?\n                p.then(r => r[k]) :\n                (...args) => p.then(r => r[k](...args));\n\nconst direct = (p, value) => isFunction(value) ? value.bind(p) : value;\n\nconst handler = {\n    get: (p, k) => d.hasOwnProperty(k) ? bypass(p, k, d[k]) : direct(p, p[k])\n};\n\n/**\n * @param {RequestInfo | URL} input\n * @param  {...RequestInit} init\n * @returns {Promise<Response> & Response}\n */\nexport default (input, ...init) => new Proxy(fetch(input, ...init), handler);\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const workers = new Proxy(new Map, {\n  get(map, name) {\n    if (!map.has(name))\n      map.set(name, Promise.withResolvers());\n    return map.get(name);\n  },\n});\n\n// filter out forever pending Promises in Pyodide\n// @issue https://github.com/pyscript/pyscript/issues/2106\nconst ignore = new Set(['__dict__', 'constructor', 'get', 'has', 'includes', 'next', 'set', 'then']);\n\nexport const workersHandler = new Proxy(Object.freeze({}), {\n  // guard against forever pending Promises in Pyodide\n  // @issue https://github.com/pyscript/pyscript/issues/2106\n  get: (_, name) => (typeof name === 'string' && !ignore.has(name)) ?\n    workers[name].promise.then(w => w.sync) :\n    void 0,\n});\n/* c8 ignore stop */\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","/*! (c) Andrea Giammarchi - ISC */\n\nimport {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\nconst {parse: $parse, stringify: $stringify} = JSON;\nconst options = {json: true, lossy: true};\n\n/**\n * Revive a previously stringified structured clone.\n * @param {string} str previously stringified data as string.\n * @returns {any} whatever was previously stringified as clone.\n */\nexport const parse = str => deserialize($parse(str));\n\n/**\n * Represent a structured clone value as string.\n * @param {any} any some clone-able value to stringify.\n * @returns {string} the value stringified.\n */\nexport const stringify = any => $stringify(serialize(any, options));\n","export const ARRAY     = 'array';\nexport const BIGINT    = 'bigint';\nexport const BOOLEAN   = 'boolean';\nexport const FUNCTION  = 'function';\nexport const NULL      = 'null';\nexport const NUMBER    = 'number';\nexport const OBJECT    = 'object';\nexport const STRING    = 'string';\nexport const SYMBOL    = 'symbol';\nexport const UNDEFINED = 'undefined';\n","import { NUMBER } from 'proxy-target/types';\n\nlet uid = 0;\nconst ids = new Map;\nconst values = new Map;\n\n/**\n * Remove by id or value any previously stored reference.\n * @param {number | unknown} id the held value by id or the value itself.\n * @returns {boolean} `true` if the operation was successful, `false` otherwise.\n */\nexport const drop = id => {\n  const [a, b] = typeof id === NUMBER ? [values, ids] : [ids, values];\n  const had = a.has(id);\n  if (had) {\n    b.delete(a.get(id));\n    a.delete(id);\n  }\n  return had;\n};\n\n/**\n * Return the held value reference by its unique identifier.\n * @param {number} id the unique identifier for the value reference.\n * @returns {unknown} the related value / reference or undefined.\n */\nexport const get = id => values.get(id);\n\n/**\n * Create once a unique number id for a generic value reference.\n * @param {unknown} value a reference used to create a unique identifier.\n * @returns {number} a unique identifier for that reference.\n */\nexport const hold = value => {\n  if (!ids.has(value)) {\n    let id;\n    // a bit apocalyptic scenario but if this thread runs forever\n    // and the id does a whole int32 roundtrip we might have still\n    // some reference dangling around\n    while (/* c8 ignore next */ values.has(id = uid++));\n    ids.set(value, id);\n    values.set(id, value);\n  }\n  return ids.get(value);\n};\n","// (c) Andrea Giammarchi - MIT\n\nconst ACTION_INIT = 0;\nconst ACTION_NOTIFY = 1;\nconst ACTION_WAIT = 2;\nconst ACTION_SW = 3;\n\nconst { ArrayBuffer, Atomics: $Atomics, Promise } = globalThis;\nconst { isArray } = Array;\nconst { create, getPrototypeOf, values } = Object;\n\nconst TypedArray = getPrototypeOf(Int32Array);\nconst Atomics = create($Atomics);\n\nconst dispatch = ({ currentTarget, type, origin, lastEventId, source, ports }, data) =>\n  currentTarget.dispatchEvent(new MessageEvent(type, { data, origin, lastEventId, source, ports }));\n\nconst withResolvers = () => Promise.withResolvers();\n\nlet id = 0;\nconst views = new Map;\nconst extend = (Class, SharedArrayBuffer) => class extends Class {\n  constructor(value, ...rest) {\n    super(value, ...rest);\n    if (value instanceof SharedArrayBuffer)\n      views.set(this, [id++, 0, withResolvers()]);\n  }\n};\n\nconst ignoreList = new WeakSet;\n\n/**\n * @template {T}\n * @callback PassThrough\n * @param {T} value\n * @returns {T}\n */\n\n/** @type {PassThrough} */\nconst ignoreDirect = value => value;\n\n/** @type {PassThrough} */\nconst ignorePatch = value => {\n  ignoreList.add(value);\n  return value;\n};\n\nconst isChannel = (event, channel) => {\n  const { data } = event;\n  const yes = isArray(data) && (\n    data.at(0) === channel ||\n    (data.at(1) === ACTION_INIT && !channel)\n  );\n  if (yes) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n  return yes;\n};\n\nconst isObject = value => (\n  value !== null &&\n  typeof value === 'object' &&\n  !ignoreList.has(value)\n);\n\nconst transferred = new WeakMap;\nconst transferViews = (data, transfer, visited) => {\n  if (views.has(data))\n    transfer.set(data, views.get(data)[0]);\n  else if (!(data instanceof TypedArray || data instanceof ArrayBuffer)) {\n    for (const value of values(data)) {\n      if (isObject(value) && !visited.has(value)) {\n        visited.add(value);\n        transferViews(value, transfer, visited);\n      }\n    }\n  }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/waitAsync#browser_compatibility\nconst waitAsyncPatch = (...args) => ({\n  value: new Promise(resolve => {\n    // encodeURIComponent('onmessage=e=>postMessage(!Atomics.wait(...e.data))')\n    let w = new Worker('data:application/javascript,onmessage%3De%3D%3EpostMessage(!Atomics.wait(...e.data))');\n    w.onmessage = () => resolve('ok');\n    w.postMessage(args);\n  })\n});\n\nconst waitAsyncPoly = (view, index) => {\n  const value = views.get(view), [id, _, { promise }] = value;\n  value[1] = index;\n  return [id, promise];\n};\n\nconst actionNotify = (_view, _id, _index) => {\n  for (const [view, [id, index, { resolve }]] of views) {\n    if (_id === id && _index === index) {\n      for (let i = 0; i < _view.length; i++) view[i] = _view[i];\n      views.delete(view);\n      resolve('ok');\n      break;\n    }\n  }\n};\n\nconst actionWait = (event, transfer, data) => {\n  for (const [view, id] of transfer)\n    transferred.set(view, [id, event.currentTarget]);\n  dispatch(event, data);\n};\n\nconst postData = (CHANNEL, data) => {\n  const transfer = new Map;\n  if (isObject(data)) transferViews(data, transfer, new Set);\n  return transfer.size ? [CHANNEL, ACTION_WAIT, transfer, data] : data;\n};\n\nconst getData = view => transferred.get(view);\n\nexport {\n  ACTION_INIT, ACTION_NOTIFY, ACTION_WAIT, ACTION_SW,\n\n  ArrayBuffer, Atomics, TypedArray,\n\n  actionNotify, actionWait,\n  getData, postData,\n  ignoreDirect, ignorePatch,\n  waitAsyncPatch, waitAsyncPoly,\n\n  dispatch,\n  extend,\n  isChannel,\n  views,\n  withResolvers,\n};\n","// (c) Andrea Giammarchi - MIT\n\nimport {\n  ACTION_INIT, ACTION_NOTIFY, ACTION_WAIT, ACTION_SW,\n\n  ArrayBuffer, Atomics,\n\n  actionNotify, actionWait,\n  getData, postData,\n  ignoreDirect, ignorePatch,\n  waitAsyncPatch, waitAsyncPoly,\n\n  extend,\n  isChannel,\n  withResolvers,\n} from './shared.js';\n\nlet {\n  BigInt64Array,\n  Int32Array,\n  SharedArrayBuffer,\n  Worker,\n} = globalThis;\n\nlet ignore = ignoreDirect;\nlet polyfill = false;\n\nconst asModule = options => ({ ...options, type: 'module' });\n\ntry {\n  new SharedArrayBuffer(4);\n\n  Worker = class extends Worker {\n    constructor(url, options) {\n      super(url, asModule(options));\n    }\n  }\n\n  if (!Atomics.waitAsync)\n    Atomics.waitAsync = waitAsyncPatch;\n}\ncatch (_) {\n  const CHANNEL = crypto.randomUUID();\n\n  const sync = new Map;\n\n  const addListener = (self, type, handler, ...rest) => {\n    self.addEventListener(type, handler, ...rest);\n  };\n\n  const register = ({ serviceWorker: s }, sw, done) => {\n    let w, c = true;\n    addListener(s, 'message', event => {\n      if (isChannel(event, CHANNEL)) {\n        const [_, id, index] = event.data;\n        const uid = [id, index].join(',');\n        const done = view => {\n          sync.delete(uid);\n          w.postMessage([ CHANNEL, id, index, view ]);\n        };\n        const view = sync.get(uid);\n        if (view) done(view);\n        else {\n          const { promise, resolve } = withResolvers();\n          sync.set(uid, resolve);\n          promise.then(done);\n        }\n      }\n    });\n    // use previous registration, if any, before registering it\n    s.getRegistration(sw)\n      .then(r => (r ?? s.register(sw)))\n      .then(function ready(r) {\n        c = c && !!s.controller;\n        w = (r.installing || r.waiting || r.active);\n        if (w.state === 'activated') {\n          if (c) done();\n          else location.reload();\n        }\n        else\n          addListener(w, 'statechange', () => ready(r), { once: true });\n      });\n  };\n\n  ignore = ignorePatch;\n  polyfill = true;\n\n  Atomics.notify = (view, index) => {\n    const [id, worker] = getData(view);\n    const uid = [id, index].join(',');\n    const known = sync.get(uid);\n    if (known) known(view);\n    else sync.set(uid, view);\n    worker.postMessage([CHANNEL, ACTION_NOTIFY, view, id, index]);\n    return 0;\n  };\n\n  Atomics.waitAsync = (view, ...rest) => {\n    const [_, value] = waitAsyncPoly(view, ...rest);\n    return { value };\n  };\n\n  SharedArrayBuffer = class extends ArrayBuffer {}\n  BigInt64Array = extend(BigInt64Array, SharedArrayBuffer);\n  Int32Array = extend(Int32Array, SharedArrayBuffer);\n\n  let serviceWorker = null;\n  Worker = class extends Worker {\n    constructor(url, options) {\n      let sw = options?.serviceWorker || '';\n      if (sw) {\n        sw = new URL(sw, location.href).href;\n        options = { ...options, serviceWorker: sw };\n        if (!serviceWorker) {\n          const { promise, resolve } = withResolvers();\n          register(navigator, sw, resolve);\n          serviceWorker = promise;\n        }\n        serviceWorker.then(\n          () => super.postMessage([CHANNEL, ACTION_SW])\n        );\n      }\n      super(url, asModule(options));\n      super.postMessage([CHANNEL, ACTION_INIT, options]);\n      addListener(this, 'message', event => {\n        if (isChannel(event, CHANNEL)) {\n          const [_, ACTION, ...rest] = event.data;\n          switch (ACTION) {\n            case ACTION_NOTIFY: {\n              actionNotify(...rest);\n              break;\n            }\n            case ACTION_WAIT: {\n              actionWait(event, ...rest);\n              break;\n            }\n          }\n        }\n      });\n    }\n    postMessage(data, ...rest) {\n      return super.postMessage(postData(CHANNEL, data), ...rest);\n    }\n  }\n}\n\nexport {\n  /** @type {globalThis.Atomics} */ Atomics,\n  /** @type {globalThis.BigInt64Array} */ BigInt64Array,\n  /** @type {globalThis.Int32Array} */ Int32Array,\n  /** @type {globalThis.SharedArrayBuffer} */ SharedArrayBuffer,\n  /** @type {globalThis.Worker} */ Worker,\n  ignore,\n  polyfill,\n};\n","// (c) Andrea Giammarchi - MIT\n\nimport {\n  ACTION_INIT,\n  ACTION_NOTIFY,\n  ACTION_WAIT,\n  Atomics,\n  isChannel,\n  withResolvers,\n} from 'sabayon/shared';\n\nconst { BYTES_PER_ELEMENT: I32_BYTES } = Int32Array;\nconst { BYTES_PER_ELEMENT: UI16_BYTES } = Uint16Array;\n\nconst { notify } = Atomics;\n\nconst decoder = new TextDecoder('utf-16');\n\nconst buffers = new WeakSet;\n\nconst transfer = (...args) => (buffers.add(args), args);\n\nlet seppuku = '';\nconst actionLength = (stringify, transform) => async (callback, results, [name, id, sb, args, isSync]) => {\n  if (isSync) seppuku = name;\n  try {\n    const result = await callback(...args);\n    if (result !== void 0) {\n      const serialized = stringify(transform ? transform(result) : result);\n      results.set(id, serialized);\n      sb[1] = serialized.length;\n    }\n  }\n  finally {\n    if (isSync) seppuku = '';\n    sb[0] = 1;\n    notify(sb, 0);\n  }\n};\nconst actionFill = (results, [id, sb]) => {\n  const result = results.get(id);\n  results.delete(id);\n  for (let ui16a = new Uint16Array(sb.buffer), i = 0, { length } = result; i < length; i++)\n    ui16a[i] = result.charCodeAt(i);\n  notify(sb, 0);\n};\nconst actionWait = (waitLength, results, map, rest) => {\n  const [name] = rest;\n  const callback = map.get(name);\n  if (!callback) throw new Error(`Unknown proxy.${name}()`);\n  waitLength(callback, results, rest);\n};\n\nconst warn = (name, seppuku) => setTimeout(\n  console.warn,\n  3e3,\n  `💀🔒 - proxy.${name}() in proxy.${seppuku}()`\n);\n\nlet uid = 0;\nconst invoke = (\n  [\n    CHANNEL,\n    i32View,\n    ignore,\n    isSync,\n    parse,\n    polyfill,\n    postMessage,\n    transform,\n    waitAsync,\n  ],\n  name,\n) => (...args) => {\n  let deadlock = seppuku !== '', timer = 0;\n  // slow operations between main and worker should likely not\n  // be tracked as the dance there would never deadlock, it just\n  // eventually slow down and that's it\n  if (deadlock && seppuku[0] !== '=' && seppuku[0] !== '-')\n    timer = warn(name, seppuku);\n  const id = uid++;\n  const transfer = [];\n  if (buffers.has(args.at(-1) || transfer))\n    buffers.delete(transfer = args.pop());\n  const data = ignore(transform ? args.map(transform) : args);\n  let sb = i32View(I32_BYTES * 2);\n  postMessage([CHANNEL, ACTION_WAIT, name, id, sb, data, isSync], { transfer });\n  return waitAsync(sb, 0).value.then(() => {\n    if (deadlock) clearTimeout(timer);\n    const length = sb[1];\n    if (!length) return;\n    const bytes = UI16_BYTES * length;\n    sb = i32View(bytes + (bytes % I32_BYTES));\n    postMessage([CHANNEL, ACTION_NOTIFY, id, sb]);\n    return waitAsync(sb, 0).value.then(() =>{\n      const ui16a = new Uint16Array(sb.buffer);\n      const sub = polyfill ? ui16a.subarray(0, length) : ui16a.slice(0, length);\n      return parse(decoder.decode(sub));\n    });\n  });\n};\n\nconst createProxy = (details, map) => new Proxy(map, {\n  get: (map, name) => {\n    let cb;\n    // the curse of potentially awaiting proxies in the wild\n    // requires this ugly guard around `then`\n    if (name !== 'then') {\n      cb = map.get(name);\n      if (!cb) {\n        cb = invoke(details, name);\n        map.set(name, cb);\n      }\n    }\n    return cb;\n  },\n  set: (map, name, callback) => (\n    name !== 'then' &&\n    !!map.set(name, callback)\n  ),\n});\n\nexport {\n  ACTION_INIT,\n  ACTION_WAIT,\n  ACTION_NOTIFY,\n\n  actionLength,\n  actionFill,\n  actionWait,\n\n  createProxy,\n\n  isChannel,\n  transfer,\n\n  withResolvers,\n};\n","// (c) Andrea Giammarchi - MIT\n\nimport {\n  Atomics,\n  Int32Array,\n  SharedArrayBuffer,\n  Worker as $Worker,\n  ignore,\n  polyfill,\n} from 'sabayon/main';\n\nimport {\n  ACTION_INIT,\n  ACTION_WAIT,\n  ACTION_NOTIFY,\n\n  actionLength,\n  actionFill,\n  actionWait,\n\n  createProxy,\n\n  isChannel,\n  transfer,\n} from './shared.js';\n\n/**\n * @typedef {Object} MainOptions\n * @prop {(text: string, ...args:any) => any} [parse=JSON.parse]\n * @prop {(value: any, ...args:any) => string} [stringify=JSON.stringify]\n * @prop {(value: any) => any} [transform]\n */\n\n/**\n * @callback Coincident\n * @param {MainOptions} [options]\n * @returns {{Worker: import('./ts.js').CoincidentWorker, polyfill: boolean, transfer: (...args: Transferable[]) => Transferable[]}}\n */\n\nexport default /** @type {Coincident} */ ({\n  parse,\n  stringify,\n  transform,\n} = JSON) => {\n  const waitLength = actionLength(stringify, transform);\n\n  const CHANNEL = crypto.randomUUID();\n\n  class Worker extends $Worker {\n    constructor(url, options) {\n      const map = new Map;\n      const results = new Map;\n      super(url, options);\n      this.proxy = createProxy(\n        [\n          CHANNEL,\n          bytes => new Int32Array(new SharedArrayBuffer(bytes)),\n          ignore,\n          false,\n          parse,\n          polyfill,\n          (...args) => this.postMessage(...args),\n          transform,\n          Atomics.waitAsync,\n        ],\n        map,\n      );\n      this.postMessage(ignore([CHANNEL, ACTION_INIT, options]));\n      this.addEventListener('message', event => {\n        if (isChannel(event, CHANNEL)) {\n          const [_, ACTION, ...rest] = event.data;\n          switch (ACTION) {\n            case ACTION_WAIT: {\n              actionWait(waitLength, results, map, rest);\n              break;\n            }\n            case ACTION_NOTIFY: {\n              actionFill(results, rest);\n              break;\n            }\n          }\n        }\n      });\n    }\n  }\n\n  return {\n    Worker,\n    polyfill,\n    transfer,\n  };\n};\n","import {\n  ARRAY,\n  BIGINT,\n  BOOLEAN,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'js-proxy/types';\n\n// this literal allows mapping right away\n// string types into numeric values so that\n// the transported and transformed arrays\n// would use less bytes to satisfy te same\n// contract while exchanging information.\n// basically this is an home-made ENUM like\n// object literal ... that's it.\n// TBD: should this be part of js-proxy? it feels\n//      to me like it would rather belong in there.\nexport default Object.fromEntries([\n  ARRAY,\n  BIGINT,\n  BOOLEAN,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n].map((k, i) => [k, i]));\n","export const APPLY                        = 'apply';\nexport const CONSTRUCT                    = 'construct';\nexport const DEFINE_PROPERTY              = 'defineProperty';\nexport const DELETE_PROPERTY              = 'deleteProperty';\nexport const GET                          = 'get';\nexport const GET_OWN_PROPERTY_DESCRIPTOR  = 'getOwnPropertyDescriptor';\nexport const GET_PROTOTYPE_OF             = 'getPrototypeOf';\nexport const HAS                          = 'has';\nexport const IS_EXTENSIBLE                = 'isExtensible';\nexport const OWN_KEYS                     = 'ownKeys';\nexport const PREVENT_EXTENSION            = 'preventExtensions';\nexport const SET                          = 'set';\nexport const SET_PROTOTYPE_OF             = 'setPrototypeOf';\n","export * from 'proxy-target/traps';\nexport const DESTRUCT = 'destruct';\nexport const VALUE_OF = 'valueOf';\n","import { OWN_KEYS } from 'js-proxy/traps';\nimport { SYMBOL } from 'js-proxy/types';\n\nconst { [OWN_KEYS]: ownKeys } = Reflect;\n\nconst known = new Map(\n  ownKeys(Symbol)\n    .filter(s => typeof Symbol[s] === SYMBOL)\n    .map(s => [Symbol[s], s])\n);\n\nexport const fromSymbol = value => {\n  if (value.startsWith('.'))\n    return Symbol.for(value.slice(1));\n  for (const [symbol, name] of known) {\n    if (name === value)\n      return symbol;\n  }\n};\n\nexport const toSymbol = value => (\n  known.get(value) ||\n  `.${Symbol.keyFor(value) || ''}`\n);\n","// ⚠️ AUTOMATICALLY GENERATED - DO NOT CHANGE\nconst CHANNEL = 'b87ec809-9df6-4389-a29e-bc91090db4dc';\nexport const MAIN = '=' + CHANNEL;\nexport const WORKER = '-' + CHANNEL;\n","// (c) Andrea Giammarchi - ISC\n\nconst registry = new FinalizationRegistry(\n  ([onGarbageCollected, held, debug]) => {\n    if (debug) console.debug(`Held value ${String(held)} not relevant anymore`);\n    onGarbageCollected(held);\n  }\n);\n\nconst nullHandler = Object.create(null);\n\n/**\n * @template {unknown} H\n * @typedef {Object} GCHookOptions\n * @prop {boolean} [debug=false] if `true`, logs values once these can get collected.\n * @prop {ProxyHandler<object>} [handler] optional proxy handler to use instead of the default one.\n * @prop {H} [return=H] if specified, overrides the returned proxy with its value.\n * @prop {unknown} [token=H] it's the held value by default, but it can be any other token except the returned value itself.\n */\n\n/**\n * @template {unknown} H\n * @param {H} hold the reference to hold behind the scene and passed along the callback once it triggers.\n * @param {(held:H) => void} onGarbageCollected the callback that will receive the held value once its wrapper or indirect reference is no longer needed.\n * @param {GCHookOptions<H>} [options] an optional configuration object to change some default behavior.\n */\nexport const create = (\n  hold,\n  onGarbageCollected,\n  { debug, handler, return: r, token = hold } = nullHandler\n) => {\n  // if no reference to return is defined,\n  // create a proxy for the held one and register that instead.\n  /** @type {H} */\n  const target = r || new Proxy(hold, handler || nullHandler);\n  const args = [target, [onGarbageCollected, hold, !!debug]];\n  if (token !== false) args.push(token);\n  // register the target reference in a way that\n  // the `onGarbageCollected(held)` callback will eventually notify.\n  registry.register(...args);\n  return target;\n};\n\n/**\n * If previously registered as either `token` or `hold` value, allow explicit removal of the entry in the registry.\n * @param {unknown} token the token used during registration. If no `token` was passed, this can be the same `hold` reference.\n * @returns {boolean} `true` if successfully unregistered.\n */\nexport const drop = token => registry.unregister(token);\n","const { addEventListener } = EventTarget.prototype;\nconst eventsHandler = new WeakMap;\nReflect.defineProperty(EventTarget.prototype, 'addEventListener', {\n  value(type, listener, ...options) {\n    const invoke = options.at(0)?.invoke;\n    if (invoke) {\n      let map = eventsHandler.get(this);\n      if (!map) {\n        map = new Map;\n        eventsHandler.set(this, map);\n      }\n      map.set(type, [].concat(invoke));\n      delete options[0].invoke;\n    }\n    return addEventListener.call(this, type, listener, ...options);\n  },\n});\n\nexport default event => {\n  const { currentTarget, target, type } = event;\n  const methods = eventsHandler.get(currentTarget || target)?.get(type);\n  if (methods) for (const method of methods) event[method]();\n};\n","import { drop, get, hold } from 'js-proxy/heap';\nimport { TypedArray } from 'sabayon/shared';\n\nimport coincident from '../main.js';\nimport numeric from './types.js';\nimport { fromSymbol, toSymbol } from './symbol.js';\n\nimport {\n  APPLY,\n  DEFINE_PROPERTY,\n  GET_OWN_PROPERTY_DESCRIPTOR,\n  OWN_KEYS,\n  DESTRUCT,\n} from 'js-proxy/traps';\n\nimport {\n  ARRAY,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'js-proxy/types';\n\nimport { MAIN, WORKER } from './constants.js';\n\nimport { create } from 'gc-hook';\n\nimport handleEvent from './events.js';\n\nimport DEBUG from '../debug.js';\n\nconst { isArray } = Array;\n\nexport default /** @type {import('../main.js').Coincident} */ options => {\n  const exports = coincident(options);\n\n  const toEntry = value => {\n    const TYPE = typeof value;\n    switch (TYPE) {\n      case OBJECT: {\n        if (value === null) return [numeric[NULL], value];\n        if (value === globalThis) return [numeric[OBJECT], null];\n        if (isArray(value)) return [numeric[ARRAY], hold(value)];\n        return [numeric[OBJECT], value instanceof TypedArray ? value : hold(value)];\n      }\n      case FUNCTION: return [numeric[FUNCTION], hold(value)];\n      case SYMBOL: return [numeric[SYMBOL], toSymbol(value)];\n      default: return [numeric[TYPE], value];\n    }\n  };\n\n  class Worker extends exports.Worker {\n    constructor(url, options) {\n      const { proxy } = super(url, options);\n      const { [WORKER]: __worker__ } = proxy;\n\n      const proxies = new Map;\n      const onGC = ref => {\n        proxies.delete(ref);\n        __worker__(DESTRUCT, ref);\n      }\n\n      const fromEntry = ([numericTYPE, value]) => {\n        switch (numericTYPE) {\n          case numeric[OBJECT]: {\n            if (value === null) return globalThis;\n            if (typeof value === NUMBER) return get(value);\n            if (!(value instanceof TypedArray)) {\n              for (const key in value)\n                value[key] = fromEntry(value[key]);\n            }\n            return value;\n          };\n          case numeric[ARRAY]: {\n            if (typeof value === NUMBER) return get(value);\n            return value.map(fromEntry);\n          };\n          case numeric[FUNCTION]: {\n            switch (typeof value) {\n              case NUMBER: return get(value);\n              case STRING: {\n                let fn = proxies.get(value)?.deref();\n                if (!fn) {\n                  fn = create(value, onGC, {\n                    token: false,\n                    return: function (...args) {\n                      if (args.length && args[0] instanceof Event) handleEvent(args[0]);\n                      return __worker__(APPLY, value, toEntry(this), args.map(toEntry)).then(fromEntry);\n                    }\n                  });\n                  proxies.set(value, new WeakRef(fn));\n                }\n                return fn;\n              }\n            }\n          };\n          case numeric[SYMBOL]: return fromSymbol(value);\n          default: return value;\n        }\n      };\n\n      const asEntry = (method, target, args) => toEntry(method(target, ...args.map(fromEntry)));\n\n      proxy[MAIN] = (TRAP, ref, ...args) => {\n        if (TRAP === DESTRUCT) drop(ref);\n        else {\n          const method = Reflect[TRAP];\n          const target = ref == null ? globalThis : get(ref);\n          switch (TRAP) {\n            case DEFINE_PROPERTY: {\n              const [name, descriptor] = args.map(fromEntry);\n              return toEntry(method(target, name, descriptor));\n            }\n            case GET_OWN_PROPERTY_DESCRIPTOR: {\n              const descriptor = method(target, ...args.map(fromEntry));\n              if (descriptor) {\n                const { get, set, value } = descriptor;\n                if (get) descriptor.get = toEntry(get);\n                if (set) descriptor.set = toEntry(set);\n                if (value) descriptor.value = toEntry(value);\n              }\n              return [numeric[descriptor ? OBJECT : UNDEFINED], descriptor];\n            }\n            case OWN_KEYS: return [numeric[ARRAY], method(target).map(toEntry)];\n            default: return asEntry(method, target, args);\n          }\n        }\n      };\n\n      if (DEBUG) {\n        const debug = proxy[MAIN];\n        proxy[MAIN] = (TRAP, ...args) => {\n          const destructing = TRAP === DESTRUCT;\n          const method = destructing ? console.warn : console.log;\n          method('Main before', TRAP, ...args);\n          const result = debug(TRAP, ...args);\n          if (!destructing) method('Main after', TRAP, result);\n          return result;\n        };\n      }\n    }\n  }\n\n  return { ...exports, Worker };\n};\n","/* c8 ignore start */\nconst {url} = import.meta;\nconst re = /import\\((['\"])([^)]+?\\.js)\\1\\)/g;\nconst place = (_,q,f) => `import(${q}${new URL(f,url).href}${q})`;\nimport * as JSON from '@ungap/structured-clone/json';\nimport coincident from 'coincident/window/main';\nconst { Worker } = coincident(JSON);\nexport default (...args) => new Worker(URL.createObjectURL(new Blob([\"const e=\\\"object\\\"==typeof self?self:globalThis,t=t=>((t,n)=>{const r=(e,n)=>(t.set(n,e),e),s=o=>{if(t.has(o))return t.get(o);const[a,i]=n[o];switch(a){case 0:case-1:return r(i,o);case 1:{const e=r([],o);for(const t of i)e.push(s(t));return e}case 2:{const e=r({},o);for(const[t,n]of i)e[s(t)]=s(n);return e}case 3:return r(new Date(i),o);case 4:{const{source:e,flags:t}=i;return r(new RegExp(e,t),o)}case 5:{const e=r(new Map,o);for(const[t,n]of i)e.set(s(t),s(n));return e}case 6:{const e=r(new Set,o);for(const t of i)e.add(s(t));return e}case 7:{const{name:t,message:n}=i;return r(new e[t](n),o)}case 8:return r(BigInt(i),o);case\\\"BigInt\\\":return r(Object(BigInt(i)),o)}return r(new e[a](i),o)};return s})(new Map,t)(0),n=\\\"\\\",{toString:r}={},{keys:s}=Object,o=e=>{const t=typeof e;if(\\\"object\\\"!==t||!e)return[0,t];const s=r.call(e).slice(8,-1);switch(s){case\\\"Array\\\":return[1,n];case\\\"Object\\\":return[2,n];case\\\"Date\\\":return[3,n];case\\\"RegExp\\\":return[4,n];case\\\"Map\\\":return[5,n];case\\\"Set\\\":return[6,n]}return s.includes(\\\"Array\\\")?[1,s]:s.includes(\\\"Error\\\")?[7,s]:[2,s]},a=([e,t])=>0===e&&(\\\"function\\\"===t||\\\"symbol\\\"===t),i=(e,{json:t,lossy:n}={})=>{const r=[];return((e,t,n,r)=>{const i=(e,t)=>{const s=r.push(e)-1;return n.set(t,s),s},c=r=>{if(n.has(r))return n.get(r);let[l,u]=o(r);switch(l){case 0:{let t=r;switch(u){case\\\"bigint\\\":l=8,t=r.toString();break;case\\\"function\\\":case\\\"symbol\\\":if(e)throw new TypeError(\\\"unable to serialize \\\"+u);t=null;break;case\\\"undefined\\\":return i([-1],r)}return i([l,t],r)}case 1:{if(u)return i([u,[...r]],r);const e=[],t=i([l,e],r);for(const t of r)e.push(c(t));return t}case 2:{if(u)switch(u){case\\\"BigInt\\\":return i([u,r.toString()],r);case\\\"Boolean\\\":case\\\"Number\\\":case\\\"String\\\":return i([u,r.valueOf()],r)}if(t&&\\\"toJSON\\\"in r)return c(r.toJSON());const n=[],p=i([l,n],r);for(const t of s(r))!e&&a(o(r[t]))||n.push([c(t),c(r[t])]);return p}case 3:return i([l,r.toISOString()],r);case 4:{const{source:e,flags:t}=r;return i([l,{source:e,flags:t}],r)}case 5:{const t=[],n=i([l,t],r);for(const[n,s]of r)(e||!a(o(n))&&!a(o(s)))&&t.push([c(n),c(s)]);return n}case 6:{const t=[],n=i([l,t],r);for(const n of r)!e&&a(o(n))||t.push(c(n));return n}}const{message:p}=r;return i([l,{name:u,message:p}],r)};return c})(!(t||n),!!t,new Map,r)(e),r},{parse:c,stringify:l}=JSON,u={json:!0,lossy:!0};var p=Object.freeze({__proto__:null,parse:e=>t(c(e)),stringify:e=>l(i(e,u))});const f=\\\"array\\\",d=\\\"function\\\",h=\\\"null\\\",y=\\\"number\\\",g=\\\"object\\\",w=\\\"symbol\\\",m=\\\"undefined\\\",_=\\\"apply\\\",b=\\\"construct\\\",E=\\\"defineProperty\\\",v=\\\"deleteProperty\\\",T=\\\"get\\\",x=\\\"getOwnPropertyDescriptor\\\",k=\\\"getPrototypeOf\\\",S=\\\"has\\\",O=\\\"isExtensible\\\",A=\\\"ownKeys\\\",j=\\\"preventExtensions\\\",R=\\\"set\\\",P=\\\"setPrototypeOf\\\";var $=Object.freeze({__proto__:null,APPLY:_,CONSTRUCT:b,DEFINE_PROPERTY:E,DELETE_PROPERTY:v,GET:T,GET_OWN_PROPERTY_DESCRIPTOR:x,GET_PROTOTYPE_OF:k,HAS:S,IS_EXTENSIBLE:O,OWN_KEYS:A,PREVENT_EXTENSION:j,SET:R,SET_PROTOTYPE_OF:P});function I(){return this}const N=new FinalizationRegistry((([e,t,n])=>{n&&console.debug(`Held value ${String(t)} not relevant anymore`),e(t)})),M=Object.create(null),F=(e,t,{debug:n,handler:r,return:s,token:o=e}=M)=>{const a=s||new Proxy(e,r||M),i=[a,[t,e,!!n]];return!1!==o&&i.push(o),N.register(...i),a},{Object:H,Proxy:W,Reflect:D}=globalThis,{isArray:C}=Array,{ownKeys:L}=D,{create:B,hasOwn:q,values:U}=H,J=(e,t)=>t===f?e[0]:t===d?e():t===g?e.$:e,z=(e,t,n,r)=>{const s={type:{value:t}},o=q(e,\\\"valueOf\\\");for(const a of U($)){let i=r(e[a]||D[a]);if(o&&a===T){const{valueOf:r}=e,{value:s}=i;i={value(e,o,...a){return o===n?r.call(this,J(e,t)):s.call(this,e,o,...a)}}}s[a]=i}return B(e,s)},G=(e,t,n,r=e)=>{if(r===e)switch(typeof e){case g:case m:r||(r=!1);case d:break;default:r=!1,t===e&&(t=H(e))}const s=new W(t,n),{destruct:o}=n;return o?F(e,o,{token:r,return:s}):s},Y=e=>t=>{const n=typeof t;return n===g?t?e.get(t)?.[0]??(e=>C(e)?f:g)(t):h:n},K=e=>t=>{let n=typeof t;switch(n){case g:if(!t){n=h;break}case d:const r=e.get(t);r&&([n,t]=r)}return[n,t]},X=e=>((e=>{N.unregister(e)})(e),e);var V=e=>{const t=new WeakMap,n=Symbol(),r={},s=(e,n,r)=>(t.set(e,[n,r]),e),o={proxy:r,release:X,pair:K(t),typeOf:Y(t),isProxy:e=>t.has(e),valueOf:e=>e[n]??e.valueOf()};for(const t of L(e)){if(q(o,t))continue;const a=e[t];switch(t){case f:{const e=z(a,t,n,(e=>({value([t],...n){return e.call(this,t,...n)}})));r[t]=(t,...n)=>s(G(t,[t],e,...n),f,t);break}case d:{const e=z(a,t,n,(e=>({value(t,...n){return e.call(this,t(),...n)}})));r[t]=(t,...n)=>{return s(G(t,(r=t,I.bind(r)),e,...n),d,t);var r};break}case g:{const e=z(a,t,n,(e=>({value({$:t},...n){return e.call(this,t,...n)}})));r[t]=(t,...n)=>s(G(t,{$:t},e,...n),g,t);break}default:{const e=z(a,t,n,(e=>({value:e})));r[t]=(n,...r)=>s(G(n,n,e,...r),t,n);break}}}return o};let Z=0;const Q=new Map,ee=new Map,te=e=>ee.get(e),ne=e=>{if(!Q.has(e)){let t;for(;ee.has(t=Z++););Q.set(e,t),ee.set(t,e)}return Q.get(e)},{ArrayBuffer:re,Atomics:se,Promise:oe}=globalThis,{isArray:ae}=Array,{create:ie,getPrototypeOf:ce,values:le}=Object,ue=ce(Int32Array),pe=ie(se),fe=({currentTarget:e,type:t,origin:n,lastEventId:r,source:s,ports:o},a)=>e.dispatchEvent(new MessageEvent(t,{data:a,origin:n,lastEventId:r,source:s,ports:o})),de=()=>oe.withResolvers();let he=0;const ye=new Map,ge=(e,t)=>class extends e{constructor(e,...n){super(e,...n),e instanceof t&&ye.set(this,[he++,0,de()])}},we=new WeakSet,me=e=>(we.add(e),e),_e=(e,t)=>{const{data:n}=e,r=ae(n)&&(n.at(0)===t||0===n.at(1)&&!t);return r&&(e.stopImmediatePropagation(),e.preventDefault()),r},be=e=>null!==e&&\\\"object\\\"==typeof e&&!we.has(e),Ee=new WeakMap,ve=(e,t,n)=>{if(ye.has(e))t.set(e,ye.get(e)[0]);else if(!(e instanceof ue||e instanceof re))for(const r of le(e))be(r)&&!n.has(r)&&(n.add(r),ve(r,t,n))},Te=(...e)=>({value:new oe((t=>{let n=new Worker(\\\"data:application/javascript,onmessage%3De%3D%3EpostMessage(!Atomics.wait(...e.data))\\\");n.onmessage=()=>t(\\\"ok\\\"),n.postMessage(e)}))}),xe=(e,t)=>{const n=ye.get(e),[r,s,{promise:o}]=n;return n[1]=t,[r,o]};let{BigInt64Array:ke,Int32Array:Se,SharedArrayBuffer:Oe,addEventListener:Ae,postMessage:je}=globalThis,Re=!0,Pe=e=>e,$e=!1;const Ie=de();try{new Oe(4),pe.waitAsync||(pe.waitAsync=Te),Ie.resolve()}catch(e){const t=je,n=Ae,r=[];let s=\\\"\\\",o=\\\"\\\";Oe=class extends re{},ke=ge(ke,Oe),Se=ge(Se,Oe),Pe=me,$e=!0,pe.notify=(e,n)=>{const[r]=(e=>Ee.get(e))(e);return t([s,1,e,r,n]),0},pe.waitAsync=(...e)=>{const[t,n]=xe(...e);return{value:n}},pe.wait=(e,t,...n)=>{const[r]=xe(e,t,...n),a=new XMLHttpRequest;a.responseType=\\\"json\\\",a.open(\\\"POST\\\",`${o}?sabayon`,!1),a.setRequestHeader(\\\"Content-Type\\\",\\\"application/json\\\"),a.send(`[\\\"${s}\\\",${r},${t}]`);const{response:i}=a;ye.delete(e);for(let t=0;t<i.length;t++)e[t]=i[t];return\\\"ok\\\"},n(\\\"message\\\",(e=>{if(_e(e,s)){const[t,n,...r]=e.data;switch(n){case 0:s=t,o=r.at(0)?.serviceWorker||\\\"\\\",o||(pe.wait=null,Ie.resolve());break;case 1:((e,t,n)=>{for(const[r,[s,o,{resolve:a}]]of ye)if(t===s&&n===o){for(let t=0;t<e.length;t++)r[t]=e[t];ye.delete(r),a(\\\"ok\\\");break}})(...r);break;case 2:((e,t,n)=>{for(const[n,r]of t)Ee.set(n,[r,e.currentTarget]);fe(e,n)})(e,...r);break;case 3:Ie.resolve()}}else if(Re){const{currentTarget:t,type:n,origin:s,lastEventId:o,source:a,ports:i}=e;r.push([{currentTarget:t,type:n,origin:s,lastEventId:o,source:a,ports:i},e.data])}})),Ae=(e,...t)=>{if(n(e,...t),r.length)for(const e of r.splice(0))fe(...e)},je=(e,...n)=>t(((e,t)=>{const n=new Map;return be(t)&&ve(t,n,new Set),n.size?[e,2,n,t]:t})(s,e),...n)}await Ie.promise,Re=!1;const{BYTES_PER_ELEMENT:Ne}=Int32Array,{BYTES_PER_ELEMENT:Me}=Uint16Array,{notify:Fe}=pe,He=new TextDecoder(\\\"utf-16\\\"),We=new WeakSet,De=(...e)=>(We.add(e),e);let Ce=\\\"\\\";const Le=(e,t,n,r)=>{const[s]=r,o=n.get(s);if(!o)throw new Error(`Unknown proxy.${s}()`);e(o,t,r)};let Be=0;const qe=([e,t,n,r,s,o,a,i,c],l)=>(...u)=>{let p=\\\"\\\"!==Ce,f=0;p&&\\\"=\\\"!==Ce[0]&&\\\"-\\\"!==Ce[0]&&(f=((e,t)=>setTimeout(console.warn,3e3,`💀🔒 - proxy.${e}() in proxy.${t}()`))(l,Ce));const d=Be++,h=[];We.has(u.at(-1)||h)&&We.delete(h=u.pop());const y=n(i?u.map(i):u);let g=t(2*Ne);return a([e,2,l,d,g,y,r],{transfer:h}),c(g,0).value.then((()=>{p&&clearTimeout(f);const n=g[1];if(!n)return;const r=Me*n;return g=t(r+r%Ne),a([e,1,d,g]),c(g,0).value.then((()=>{const e=new Uint16Array(g.buffer),t=o?e.subarray(0,n):e.slice(0,n);return s(He.decode(t))}))}))},Ue=(e,t)=>new Proxy(t,{get:(t,n)=>{let r;return\\\"then\\\"!==n&&(r=t.get(n),r||(r=qe(e,n),t.set(n,r))),r},set:(e,t,n)=>\\\"then\\\"!==t&&!!e.set(t,n)}),{wait:Je,waitAsync:ze}=pe;var Ge=({parse:e,stringify:t,transform:n,interrupt:r}=JSON)=>{const s=((e,t)=>async(n,r,[s,o,a,i,c])=>{c&&(Ce=s);try{const s=await n(...i);if(void 0!==s){const n=e(t?t(s):s);r.set(o,n),a[1]=n.length}}finally{c&&(Ce=\\\"\\\"),a[0]=1,Fe(a,0)}})(t,n),o=de(),a=new Map,i=new Map;let c=\\\"\\\",l=Je;if(Je&&r){const{handler:e,timeout:t=42}=r;l=(n,r,s)=>{for(;\\\"timed-out\\\"===(s=Je(n,r,0,t));)e();return s}}return Ae(\\\"message\\\",(t=>{if(_e(t,c)){const[r,u,...p]=t.data;switch(u){case 0:{const t=!!Je;c=r,o.resolve({polyfill:$e,sync:t,transfer:De,proxy:Ue([c,e=>new Se(new Oe(e)),Pe,t,e,$e,je,n,t?(...e)=>({value:{then:t=>t(l(...e))}}):ze],a)});break}case 2:a.size?Le(s,i,a,p):setTimeout(Le,0,s,i,a,p);break;case 1:((e,[t,n])=>{const r=e.get(t);e.delete(t);for(let e=new Uint16Array(n.buffer),t=0,{length:s}=r;t<s;t++)e[t]=r.charCodeAt(t);Fe(n,0)})(i,p)}}})),o.promise},Ye=Object.fromEntries([f,\\\"bigint\\\",\\\"boolean\\\",d,h,y,g,\\\"string\\\",w,m].map(((e,t)=>[e,t])));const Ke=\\\"destruct\\\",{[A]:Xe}=Reflect,Ve=new Map(Xe(Symbol).filter((e=>typeof Symbol[e]===w)).map((e=>[Symbol[e],e]))),Ze=e=>Ve.get(e)||`.${Symbol.keyFor(e)||\\\"\\\"}`,Qe=\\\"b87ec809-9df6-4389-a29e-bc91090db4dc\\\",et=\\\"=\\\"+Qe,tt=\\\"-\\\"+Qe,{[_]:nt}=Reflect;const rt={object(...e){return this.string(function(e){for(var t=e[0],n=1,r=arguments.length;n<r;n++)t+=arguments[n]+e[n];return t}(...e))},string(e){for(const t of e.split(/[\\\\r\\\\n]+/))if(t.trim().length){/^(\\\\s+)/.test(t)&&(e=e.replace(new RegExp(\\\"^\\\"+RegExp.$1,\\\"gm\\\"),\\\"\\\"));break}return e}},st=new WeakMap,ot=e=>{const t=e||console,n={buffered:it,stderr:(t.stderr||console.error).bind(t),stdout:(t.stdout||console.log).bind(t)};return{stderr:(...e)=>n.stderr(...e),stdout:(...e)=>n.stdout(...e),async get(e){const t=await e;return st.set(t,n),t}}},at=new TextDecoder,it=(e,t=10)=>{const n=[];return r=>{if(r instanceof Uint8Array)for(const s of r)s===t?e(at.decode(new Uint8Array(n.splice(0)))):n.push(s);else e(r)}},ct=(e,...t)=>rt[typeof e](e,...t),{isArray:lt}=Array,{assign:ut,create:pt,defineProperties:ft,defineProperty:dt,entries:ht}=Object,{all:yt,resolve:gt}=new Proxy(Promise,{get:(e,t)=>e[t].bind(e)}),wt=(e,t=location.href)=>new URL(e,t.replace(/^blob:/,\\\"\\\")).href,mt=(e,t,n,r=!1,s=CustomEvent)=>{e.dispatchEvent(new s(`${t}:${n}`,{bubbles:!0,detail:{worker:r}}))},_t=e=>Function(`'use strict';return (${e})`)(),bt=e=>e.replace(/^(?:\\\\n|\\\\r\\\\n)/,\\\"\\\"),Et=Symbol.for(\\\"polyscript.js_modules\\\"),vt=new Map;dt(globalThis,Et,{value:vt}),new Proxy(vt,{get:(e,t)=>e.get(t),has:(e,t)=>e.has(t),ownKeys:e=>[...e.keys()]});const Tt=(e,t)=>!t.startsWith(\\\"_\\\"),xt=(e,t)=>new Proxy(e,{has:Tt,get:(e,n)=>e[t][n]}),kt=(e,t)=>import(e).then((e=>{vt.set(t,{...e})})),St=e=>new Promise(((t,n)=>{document.querySelector(`link[rel=\\\"stylesheet\\\"][href=\\\"${e}\\\"]`)?t():document.head.append(ut(document.createElement(\\\"link\\\"),{rel:\\\"stylesheet\\\",href:e,onload:t,onerror:n}))})),Ot=e=>/\\\\.css$/i.test(new URL(e).pathname),At=(e,t)=>e.has(t),jt=e=>[...e.keys()];var Rt=(e,t,n,r)=>{const s=globalThis[Et];if(n)for(let[e,t]of ht(n)){let n=s.get(t);n&&!lt(n)||(s.set(t,n||(n=[])),n.push(e))}return((e,t,n,r)=>new Proxy(e,{has:At,ownKeys:jt,get:(e,s)=>{let o=e.get(s);if(lt(o)){let a=o;o=null;for(let e of a)e=wt(e,r),Ot(e)?n.importCSS(e):(n.importJS(e,s),o=t[Et].get(s));e.set(s,o)}return o}}))(s,e,t,r)};const Pt=new Map,$t=e=>Pt.get(e),It=(e,t)=>{try{return Function(\\\"require\\\",t)($t)}catch(t){st.get(e).stderr(t)}};var Nt={type:\\\"dummy\\\",module:()=>\\\"data:application/javascript,\\\",engine:e=>ot().get(e),registerJSModule(e,t,n){Pt.set(t,n)},run:It,runAsync:It,runEvent:async(e,t,n)=>{try{await Function(\\\"require\\\",\\\"e\\\",`return ${t}(e)`)($t,n)}catch(t){st.get(e).stderr(t)}},transform:(e,t)=>t,writeFile(){}};const Mt=Object.getOwnPropertyDescriptors(Response.prototype),Ft=e=>\\\"function\\\"==typeof e,Ht={get:(e,t)=>Mt.hasOwnProperty(t)?((e,t,{get:n,value:r})=>n||!Ft(r)?e.then((e=>e[t])):(...n)=>e.then((e=>e[t](...n))))(e,t,Mt[t]):((e,t)=>Ft(t)?t.bind(e):t)(e,e[t])};var Wt=(e,...t)=>new Proxy(fetch(e,...t),Ht);Promise.withResolvers||(Promise.withResolvers=function(){var e,t,n=new this((function(n,r){e=n,t=r}));return{resolve:e,reject:t,promise:n}});const Dt=!globalThis.window,Ct=({FS:e,PATH:t,PATH_FS:n},r,s)=>{const o=n.resolve(r),a=t.dirname(o);return e.mkdirTree?e.mkdirTree(a):Bt(e,a),e.writeFile(o,new Uint8Array(s),{canOwn:!0})},Lt=e=>{const t=e.split(\\\"/\\\");return t.pop(),t.join(\\\"/\\\")},Bt=(e,t)=>{const n=[];for(const r of t.split(\\\"/\\\"))\\\".\\\"!==r&&\\\"..\\\"!==r&&(n.push(r),r&&e.mkdir(n.join(\\\"/\\\")))},qt=(e,t)=>{const n=[];for(const e of t.split(\\\"/\\\"))switch(e){case\\\"\\\":case\\\".\\\":break;case\\\"..\\\":n.pop();break;default:n.push(e)}return[e.cwd()].concat(n).join(\\\"/\\\").replace(/^\\\\/+/,\\\"/\\\")},Ut=e=>{const t=e.map((e=>e.trim().replace(/(^[/]*|[/]*$)/g,\\\"\\\"))).filter((e=>\\\"\\\"!==e&&\\\".\\\"!==e)).join(\\\"/\\\");return e[0].startsWith(\\\"/\\\")?`/${t}`:t},Jt=(e,t)=>Wt(wt(e,t)).arrayBuffer(),zt=(e,t,n,r)=>yt((e=>{for(const{files:t,to_file:n,from:r=\\\"\\\"}of e){if(void 0!==t&&void 0!==n)throw new Error(\\\"Cannot use 'to_file' and 'files' parameters together!\\\");if(void 0===t&&void 0===n&&r.endsWith(\\\"/\\\"))throw new Error(`Couldn't determine the filename from the path ${r}, please supply 'to_file' parameter.`)}return e.flatMap((({from:e=\\\"\\\",to_folder:t=\\\".\\\",to_file:n,files:r})=>{if(lt(r))return r.map((n=>({url:Ut([e,n]),path:Ut([t,n])})));const s=n||e.slice(1+e.lastIndexOf(\\\"/\\\"));return[{url:e,path:Ut([t,s])}]}))})(n).map((({url:n,path:s})=>Jt(n,r).then((n=>e.writeFile(t,s,n)))))),Gt=(e,t)=>t.endsWith(\\\"/\\\")?`${t}${e.split(\\\"/\\\").pop()}`:t,Yt=(e,t)=>e.replace(/\\\\{.+?\\\\}/g,(e=>{if(!t.has(e))throw new SyntaxError(`Invalid template: ${e}`);return t.get(e)})),Kt=(e,t,n,r)=>yt((e=>{const t=new Map,n=new Set,r=[];for(const[s,o]of ht(e))if(/^\\\\{.+\\\\}$/.test(s)){if(t.has(s))throw new SyntaxError(`Duplicated template: ${s}`);t.set(s,Yt(o,t))}else{const e=Yt(s,t),a=Gt(e,Yt(o||\\\"./\\\",t));if(n.has(a))throw new SyntaxError(`Duplicated destination: ${a}`);n.add(a),r.push({url:e,path:a})}return r})(n).map((({url:n,path:s})=>Jt(n,r).then((r=>e.writeFile(t,s,r,n)))))),Xt=({main:e,worker:t},n)=>{const r=[];if(t&&Dt)for(let[e,s]of ht(t))e=wt(e,n),r.push(kt(e,s));if(e&&!Dt)for(let[t,s]of ht(e))t=wt(t,n),Ot(t)?St(t):r.push(kt(t,s));return yt(r)},{assign:Vt}=Object,Zt=\\\"entries\\\",Qt=\\\"readonly\\\",en=\\\"readwrite\\\",tn={durability:\\\"default\\\",prefix:\\\"IDBMap\\\"},nn=({target:{result:e}})=>e;class rn extends EventTarget{#e;#t;#n;async#r(e,t){const n=(await this.#e).transaction(Zt,t,this.#t);return new Promise(((t,r)=>Vt(e(n.objectStore(Zt)),{onsuccess:t,onerror:r})))}constructor(e,{durability:t=tn.durability,prefix:n=tn.prefix}=tn){super(),this.#n=n,this.#t={durability:t},this.#e=new Promise(((t,n)=>{Vt(indexedDB.open(`${this.#n}/${e}`),{onupgradeneeded({target:{result:e,transaction:n}}){e.objectStoreNames.length||e.createObjectStore(Zt),n.oncomplete=()=>t(e)},onsuccess(e){t(nn(e))},onerror(e){n(e),this.dispatchEvent(e)}})})).then((e=>{const t=this.dispatchEvent.bind(this);for(const n in e)n.startsWith(\\\"on\\\")&&(e[n]=t);return e}))}dispatchEvent(e){const{type:t,message:n,isTrusted:r}=e;return super.dispatchEvent(r?Vt(new Event(t),{message:n}):e)}async close(){(await this.#e).close()}get size(){return this.#r((e=>e.count()),Qt).then(nn)}async clear(){await this.#r((e=>e.clear()),en)}async delete(e){await this.#r((t=>t.delete(e)),en)}async entries(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e).then((t=>[e,t])))))}async forEach(e,t=this){for(const[n,r]of await this.entries())await e.call(t,r,n,this)}async get(e){return await this.#r((t=>t.get(e)),Qt).then(nn)}async has(e){return void 0!==await this.#r((t=>t.getKey(e)),Qt).then(nn)}async keys(){return await this.#r((e=>e.getAllKeys()),Qt).then(nn)}async set(e,t){return await this.#r((n=>n.put(t,e)),en),this}async values(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e))))}get[Symbol.toStringTag](){return this.#n}}class sn extends Map{#s;#o;constructor(...e){super(),this.#s=new rn(...e),this.#o=this.#s.entries().then((e=>{for(const[t,n]of e)super.set(t,n)}))}async sync(){await this.#o}clear(){return this.#o=this.#o.then((()=>this.#s.clear())),super.clear()}delete(e){return this.#o=this.#o.then((()=>this.#s.delete(e))),super.delete(e)}set(e,t){return this.#o=this.#o.then((()=>this.#s.set(e,t))),super.set(e,t)}}const on=new WeakMap,an=(e,t,n)=>{\\\"polyscript\\\"===t&&(n.lazy_py_modules=async(...t)=>(await on.get(e)(t),t.map((t=>e.pyimport(t)))),n.storage=async e=>{const t=new sn(e);return await t.sync(),t},n.JSON=p),e.registerJsModule(t,n)},cn=(e,t)=>{if(e.endsWith(\\\"/*\\\")){if(/\\\\.(zip|whl|tgz|tar(?:\\\\.gz)?)$/.test(t))return RegExp.$1;throw new Error(`Unsupported archive ${t}`)}return\\\"\\\"},ln=(e,t,...n)=>{try{return e.runPython(ct(t),...n)}catch(t){st.get(e).stderr(t)}},un=async(e,t,...n)=>{try{return await e.runPythonAsync(ct(t),...n)}catch(t){st.get(e).stderr(t)}},pn=async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.globals.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){st.get(e).stderr(t)}};var fn=(new TextEncoder).encode('from uio import StringIO\\\\nimport sys\\\\n\\\\nclass Response:\\\\n    def __init__(self, f):\\\\n        self.raw = f\\\\n        self.encoding = \\\"utf-8\\\"\\\\n        self._cached = None\\\\n\\\\n    def close(self):\\\\n        if self.raw:\\\\n            self.raw.close()\\\\n            self.raw = None\\\\n        self._cached = None\\\\n\\\\n    @property\\\\n    def content(self):\\\\n        if self._cached is None:\\\\n            try:\\\\n                self._cached = self.raw.read()\\\\n            finally:\\\\n                self.raw.close()\\\\n                self.raw = None\\\\n        return self._cached\\\\n\\\\n    @property\\\\n    def text(self):\\\\n        return str(self.content, self.encoding)\\\\n\\\\n    def json(self):\\\\n        import ujson\\\\n\\\\n        return ujson.loads(self.content)\\\\n\\\\n\\\\n# TODO try to support streaming xhr requests, a-la pyodide-http\\\\nHEADERS_TO_IGNORE = (\\\"user-agent\\\",)\\\\n\\\\n\\\\ntry:\\\\n    import js\\\\nexcept Exception as err:\\\\n    raise OSError(\\\"This version of urequests can only be used in the browser\\\")\\\\n\\\\n# TODO try to support streaming xhr requests, a-la pyodide-http\\\\n\\\\nHEADERS_TO_IGNORE = (\\\"user-agent\\\",)\\\\n\\\\n\\\\ndef request(\\\\n    method,\\\\n    url,\\\\n    data=None,\\\\n    json=None,\\\\n    headers={},\\\\n    stream=None,\\\\n    auth=None,\\\\n    timeout=None,\\\\n    parse_headers=True,\\\\n):\\\\n    from js import XMLHttpRequest\\\\n\\\\n    xhr = XMLHttpRequest.new()\\\\n    xhr.withCredentials = False\\\\n\\\\n    if auth is not None:\\\\n        import ubinascii\\\\n\\\\n        username, password = auth\\\\n        xhr.open(method, url, False, username, password)\\\\n    else:\\\\n        xhr.open(method, url, False)\\\\n\\\\n    for name, value in headers.items():\\\\n        if name.lower() not in HEADERS_TO_IGNORE:\\\\n            xhr.setRequestHeader(name, value)\\\\n\\\\n    if timeout:\\\\n        xhr.timeout = int(timeout * 1000)\\\\n\\\\n    if json is not None:\\\\n        assert data is None\\\\n        import ujson\\\\n\\\\n        data = ujson.dumps(json)\\\\n        # s.write(b\\\"Content-Type: application/json\\\\\\\\r\\\\\\\\n\\\")\\\\n        xhr.setRequestHeader(\\\"Content-Type\\\", \\\"application/json\\\")\\\\n\\\\n    xhr.send(data)\\\\n\\\\n    # Emulates the construction process in the original urequests\\\\n    resp = Response(StringIO(xhr.responseText))\\\\n    resp.status_code = xhr.status\\\\n    resp.reason = xhr.statusText\\\\n    resp.headers = xhr.getAllResponseHeaders()\\\\n\\\\n    return resp\\\\n\\\\n\\\\n# Other methods - head, post, put, patch, delete - are not used by\\\\n# mip and therefore not included\\\\n\\\\n\\\\ndef get(url, **kw):\\\\n    return request(\\\"GET\\\", url, **kw)\\\\n\\\\n\\\\n# Content below this line is from the Micropython MIP package and is covered\\\\n# by the applicable MIT license:\\\\n# \\\\n# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\\\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \\\\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\\\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \\\\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \\\\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER \\\\n# DEALINGS IN THE SOFTWARE.\\\\n\\\\n# MicroPython package installer\\\\n# MIT license; Copyright (c) 2022 Jim Mussared\\\\n\\\\n\\\\n_PACKAGE_INDEX = const(\\\"https://micropython.org/pi/v2\\\")\\\\n_CHUNK_SIZE = 128\\\\n\\\\n\\\\n# This implements os.makedirs(os.dirname(path))\\\\ndef _ensure_path_exists(path):\\\\n    import os\\\\n\\\\n    split = path.split(\\\"/\\\")\\\\n\\\\n    # Handle paths starting with \\\"/\\\".\\\\n    if not split[0]:\\\\n        split.pop(0)\\\\n        split[0] = \\\"/\\\" + split[0]\\\\n\\\\n    prefix = \\\"\\\"\\\\n    for i in range(len(split) - 1):\\\\n        prefix += split[i]\\\\n        try:\\\\n            os.stat(prefix)\\\\n        except:\\\\n            os.mkdir(prefix)\\\\n        prefix += \\\"/\\\"\\\\n\\\\n\\\\n# Copy from src (stream) to dest (function-taking-bytes)\\\\ndef _chunk(src, dest):\\\\n    buf = memoryview(bytearray(_CHUNK_SIZE))\\\\n    while True:\\\\n        n = src.readinto(buf)\\\\n        if n == 0:\\\\n            break\\\\n        dest(buf if n == _CHUNK_SIZE else buf[:n])\\\\n\\\\n\\\\n# Check if the specified path exists and matches the hash.\\\\ndef _check_exists(path, short_hash):\\\\n    import os\\\\n\\\\n    try:\\\\n        import binascii\\\\n        import hashlib\\\\n\\\\n        with open(path, \\\"rb\\\") as f:\\\\n            hs256 = hashlib.sha256()\\\\n            _chunk(f, hs256.update)\\\\n            existing_hash = str(binascii.hexlify(hs256.digest())[: len(short_hash)], \\\"utf-8\\\")\\\\n            return existing_hash == short_hash\\\\n    except:\\\\n        return False\\\\n\\\\n\\\\ndef _rewrite_url(url, branch=None):\\\\n    if not branch:\\\\n        branch = \\\"HEAD\\\"\\\\n    if url.startswith(\\\"github:\\\"):\\\\n        url = url[7:].split(\\\"/\\\")\\\\n        url = (\\\\n            \\\"https://raw.githubusercontent.com/\\\"\\\\n            + url[0]\\\\n            + \\\"/\\\"\\\\n            + url[1]\\\\n            + \\\"/\\\"\\\\n            + branch\\\\n            + \\\"/\\\"\\\\n            + \\\"/\\\".join(url[2:])\\\\n        )\\\\n    return url\\\\n\\\\n\\\\ndef _download_file(url, dest):\\\\n    response = get(url)\\\\n    try:\\\\n        if response.status_code != 200:\\\\n            print(\\\"Error\\\", response.status_code, \\\"requesting\\\", url)\\\\n            return False\\\\n\\\\n        print(\\\"Copying:\\\", dest)\\\\n        _ensure_path_exists(dest)\\\\n        with open(dest, \\\"wb\\\") as f:\\\\n            _chunk(response.raw, f.write)\\\\n\\\\n        return True\\\\n    finally:\\\\n        response.close()\\\\n\\\\n\\\\ndef _install_json(package_json_url, index, target, version, mpy):\\\\n    response = get(_rewrite_url(package_json_url, version))\\\\n    try:\\\\n        if response.status_code != 200:\\\\n            print(\\\"Package not found:\\\", package_json_url)\\\\n            return False\\\\n\\\\n        package_json = response.json()\\\\n    finally:\\\\n        response.close()\\\\n    for target_path, short_hash in package_json.get(\\\"hashes\\\", ()):\\\\n        fs_target_path = target + \\\"/\\\" + target_path\\\\n        if _check_exists(fs_target_path, short_hash):\\\\n            print(\\\"Exists:\\\", fs_target_path)\\\\n        else:\\\\n            file_url = \\\"{}/file/{}/{}\\\".format(index, short_hash[:2], short_hash)\\\\n            if not _download_file(file_url, fs_target_path):\\\\n                print(\\\"File not found: {} {}\\\".format(target_path, short_hash))\\\\n                return False\\\\n    for target_path, url in package_json.get(\\\"urls\\\", ()):\\\\n        fs_target_path = target + \\\"/\\\" + target_path\\\\n        if not _download_file(_rewrite_url(url, version), fs_target_path):\\\\n            print(\\\"File not found: {} {}\\\".format(target_path, url))\\\\n            return False\\\\n    for dep, dep_version in package_json.get(\\\"deps\\\", ()):\\\\n        if not _install_package(dep, index, target, dep_version, mpy):\\\\n            return False\\\\n    return True\\\\n\\\\n\\\\ndef _install_package(package, index, target, version, mpy):\\\\n    if (\\\\n        package.startswith(\\\"http://\\\")\\\\n        or package.startswith(\\\"https://\\\")\\\\n        or package.startswith(\\\"github:\\\")\\\\n    ):\\\\n        if package.endswith(\\\".py\\\") or package.endswith(\\\".mpy\\\"):\\\\n            print(\\\"Downloading {} to {}\\\".format(package, target))\\\\n            return _download_file(\\\\n                _rewrite_url(package, version), target + \\\"/\\\" + package.rsplit(\\\"/\\\")[-1]\\\\n            )\\\\n        else:\\\\n            if not package.endswith(\\\".json\\\"):\\\\n                if not package.endswith(\\\"/\\\"):\\\\n                    package += \\\"/\\\"\\\\n                package += \\\"package.json\\\"\\\\n            print(\\\"Installing {} to {}\\\".format(package, target))\\\\n    else:\\\\n        if not version:\\\\n            version = \\\"latest\\\"\\\\n        print(\\\"Installing {} ({}) from {} to {}\\\".format(package, version, index, target))\\\\n\\\\n        mpy_version = (\\\\n            sys.implementation._mpy & 0xFF if mpy and hasattr(sys.implementation, \\\"_mpy\\\") else \\\"py\\\"\\\\n        )\\\\n\\\\n        # WARNING: mpy_version fails miserably with 1.22.0-380\\\\n        package = \\\"{}/package/{}/{}/{}.json\\\".format(index, \\\"py\\\", package, version)\\\\n\\\\n    return _install_json(package, index, target, version, mpy)\\\\n\\\\n\\\\ndef install(package, index=None, target=None, version=None, mpy=True):\\\\n    if not target:\\\\n        for p in sys.path:\\\\n            if p.endswith(\\\"/lib\\\"):\\\\n                target = p\\\\n                break\\\\n        else:\\\\n            print(\\\"Unable to find lib dir in sys.path\\\")\\\\n            return\\\\n\\\\n    if not index:\\\\n        index = _PACKAGE_INDEX\\\\n\\\\n    if _install_package(package, index.rstrip(\\\"/\\\"), target, version, mpy):\\\\n        print(\\\"Done\\\")\\\\n    else:\\\\n        print(\\\"Package may be partially installed\\\")\\\\n');const dn=async e=>(await import(\\\"./toml-DiUM0_qs.js\\\")).parse(e),hn=(e,t)=>{try{e.mkdir(t)}catch(e){}};var yn={type:\\\"micropython\\\",module:(e=\\\"1.24.0-preview-114\\\")=>`https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${e}/micropython.mjs`,async engine({loadMicroPython:e},t,n,r){const{stderr:s,stdout:o,get:a}=ot({stderr:it(console.error),stdout:it(console.log)});n=n.replace(/\\\\.m?js$/,\\\".wasm\\\");const i=await a(e({linebuffer:!1,stderr:s,stdout:o,url:n})),c=gn.bind(this,i,r);return on.set(i,c),t.files&&await Kt(this,i,t.files,r),t.fetch&&await zt(this,i,t.fetch,r),t.js_modules&&await Xt(t.js_modules,r),this.writeFile(i,\\\"./mip.py\\\",fn),t.packages&&await c(t.packages),i},registerJSModule:an,run:ln,runAsync:un,runEvent:pn,transform:(e,t)=>e.PyProxy.toJs(t),writeFile:(e,t,n,r)=>{const{FS:s,_module:{PATH:o,PATH_FS:a}}=e,i={FS:s,PATH:o,PATH_FS:a},c=cn(t,r);if(c){const r=t.slice(0,-1);switch(\\\"./\\\"!==r&&s.mkdir(r),c){case\\\"whl\\\":case\\\"zip\\\":{const e=new Blob([n],{type:\\\"application/zip\\\"});return import(\\\"./zip-gl8b5xR3.js\\\").then((async({BlobReader:t,Uint8ArrayWriter:n,ZipReader:a})=>{const i=new a(new t(e));for(const e of await i.getEntries()){const{directory:t,filename:a}=e,i=r+a;if(t)hn(s,i);else{hn(s,o.dirname(i));const t=await e.getData(new n);s.writeFile(i,t,{canOwn:!0})}}i.close()}))}case\\\"tgz\\\":case\\\"tar.gz\\\":{const t=\\\"./_.tar.gz\\\";return Ct(i,t,n),void e.runPython(`\\\\n                        import os, gzip, tarfile\\\\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\\\"${t}\\\", \\\"rb\\\")))\\\\n                        for f in tar:\\\\n                            name = f\\\"${r}{f.name}\\\"\\\\n                            if f.type == tarfile.DIRTYPE:\\\\n                                if f.name != \\\"./\\\":\\\\n                                    os.mkdir(name.strip(\\\"/\\\"))\\\\n                            else:\\\\n                                dir = os.path.dirname(name)\\\\n                                if not os.path.exists(dir):\\\\n                                    os.mkdir(dir)\\\\n                                source = tar.extractfile(f)\\\\n                                with open(name, \\\"wb\\\") as dest:\\\\n                                    dest.write(source.read())\\\\n                                    dest.close()\\\\n                        tar.close()\\\\n                        os.remove(\\\"${t}\\\")\\\\n                    `)}}}return Ct(i,t,n)}};async function gn(e,t,n){let r;for(const s of n)if(s.endsWith(\\\".whl\\\")){const n=wt(s,t),r=await Wt(n).arrayBuffer();await this.writeFile(e,\\\"./*\\\",r,n)}else r||(r=e.pyimport(\\\"mip\\\")),r.install(s)}const wn={dict_converter:Object.fromEntries};let mn=!1;const _n=e=>(...t)=>{try{return mn=!0,e(...t)}finally{mn=!1}};let bn=!1;const En=()=>{if(bn)return;bn=!0;const e=new WeakMap,t=e=>e.destroy(),n=n=>{for(let r=0;r<n.length;r++){const s=n[r];if(\\\"function\\\"==typeof s&&\\\"copy\\\"in s){mn=!1;let o=e.get(s)?.deref();if(!o)try{o=F(s.copy(),t),e.set(s,new WeakRef(o))}catch(e){console.error(e)}o&&(n[r]=o),mn=!0}}},{call:r}=Function,s=r.bind(r,r.apply);Object.defineProperties(Function.prototype,{apply:{value(e,t){return mn&&n(t),s(this,e,t)}},call:{value(e,...t){return mn&&n(t),s(this,e,t)}}})};var vn={type:\\\"pyodide\\\",module:(e=\\\"0.26.2\\\")=>`https://cdn.jsdelivr.net/pyodide/v${e}/full/pyodide.mjs`,async engine({loadPyodide:e},t,n,r){Dt||\\\"auto\\\"!==t.experimental_create_proxy||En();const{stderr:s,stdout:o,get:a}=ot(),i=n.slice(0,n.lastIndexOf(\\\"/\\\")),c=await a(e({stderr:s,stdout:o,indexURL:i})),l=xn.bind(c);return on.set(c,l),t.files&&await Kt(this,c,t.files,r),t.fetch&&await zt(this,c,t.fetch,r),t.js_modules&&await Xt(t.js_modules,r),t.packages&&await l(t.packages),c},registerJSModule:an,run:_n(ln),runAsync:_n(un),runEvent:_n(pn),transform:(e,t)=>Tn.call(e,t),writeFile:(e,t,n,r)=>{const s=cn(t,r);if(s)return e.unpackArchive(n,s,{extractDir:t.slice(0,-1)});const{FS:o,PATH:a,_module:{PATH_FS:i}}=e;return Ct({FS:o,PATH:a,PATH_FS:i},t,n)}};function Tn(e){const{ffi:{PyProxy:t}}=this;if(e&&\\\"object\\\"==typeof e){if(e instanceof t)return e.toJs(wn);if(e instanceof Map)return new Map([...e.entries()]);if(lt(e))return e.map(Tn,this)}return e}async function xn(e){await this.loadPackage(\\\"micropip\\\");const t=this.pyimport(\\\"micropip\\\");await t.install(e,{keep_going:!0}),t.destroy()}const kn=\\\"ruby-wasm-wasi\\\",Sn=kn.replace(/\\\\W+/g,\\\"_\\\");var On={type:kn,experimental:!0,module:(e=\\\"2.6.2\\\")=>`https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${e}/dist/browser/+esm`,async engine({DefaultRubyVM:e},t,n,r){n=n.replace(/\\\\/browser\\\\/\\\\+esm$/,\\\"/ruby.wasm\\\");const s=await Wt(n).arrayBuffer(),o=await WebAssembly.compile(s),{vm:a}=await e(o);return t.files&&await Kt(this,a,t.files,r),t.fetch&&await zt(this,a,t.fetch,r),t.js_modules&&await Xt(t.js_modules,r),a},registerJSModule(e,t,n){t=t.replace(/\\\\W+/g,\\\"__\\\");const r=`__module_${Sn}_${t}`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$${t}=JS.global[:${r}]`),delete globalThis[r]},run:(e,t,...n)=>e.eval(ct(t),...n),runAsync:(e,t,...n)=>e.evalAsync(ct(t),...n),async runEvent(e,t,n){if(/^xworker\\\\.(on\\\\w+)$/.test(t)){const{$1:t}=RegExp,r=`__module_${Sn}_event`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$xworker.call(\\\"${t}\\\",JS.global[:${r}])`),delete globalThis[r]}else{const r=this.run(e,`method(:${t})`);await r.call(t,e.wrap(n))}},transform:(e,t)=>t,writeFile:()=>{throw new Error(`writeFile is not supported in ${kn}`)}};var An={type:\\\"wasmoon\\\",module:(e=\\\"1.16.0\\\")=>`https://cdn.jsdelivr.net/npm/wasmoon@${e}/+esm`,async engine({LuaFactory:e,LuaLibraries:t},n,r,s){const{stderr:o,stdout:a,get:i}=ot(),c=await i((new e).createEngine());return c.global.getTable(t.Base,(e=>{c.global.setField(e,\\\"print\\\",a),c.global.setField(e,\\\"printErr\\\",o)})),n.files&&await Kt(this,c,n.files,s),n.fetch&&await zt(this,c,n.fetch,s),n.js_modules&&await Xt(n.js_modules,s),c},registerJSModule:(e,t,n)=>{e.global.set(t,n)},run:(e,t,...n)=>{try{return e.doStringSync(ct(t),...n)}catch(t){st.get(e).stderr(t)}},runAsync:async(e,t,...n)=>{try{return await e.doString(ct(t),...n)}catch(t){st.get(e).stderr(t)}},runEvent:async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.global.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){st.get(e).stderr(t)}},transform:(e,t)=>t,writeFile:({cmodule:{module:{FS:e}}},t,n)=>((e,t,n)=>(Bt(e,Lt(t)),t=qt(e,t),e.writeFile(t,new Uint8Array(n),{canOwn:!0})))(e,t,n)};const jn=new WeakMap,Rn=async(e,t)=>{const{shelter:n,destroy:r,io:s}=jn.get(e),{output:o,result:a}=await n.captureR(ct(t));for(const{type:e,data:t}of o)s[e](t);return F(a,r,{token:!1})};var Pn={type:\\\"webr\\\",experimental:!0,module:(e=\\\"0.4.0\\\")=>`https://cdn.jsdelivr.net/npm/webr@${e}/dist/webr.mjs`,async engine(e,t,n,r){const{get:s}=ot(),o=new e.WebR;await s(o.init().then((()=>o)));const a=await new o.Shelter;return jn.set(o,{module:e,shelter:a,destroy:a.destroy.bind(a),io:st.get(o)}),t.files&&await Kt(this,o,t.files,r),t.fetch&&await zt(this,o,t.fetch,r),t.js_modules&&await Xt(t.js_modules,r),o},registerJSModule(e,t){console.warn(`Experimental interpreter: module ${t} is not supported (yet)`)},run:Rn,runAsync:Rn,async runEvent(e,t,n){await e.evalRVoid(`${t}(event)`,{env:{event:{type:[n.type]}}})},transform:(e,t)=>(console.log(\\\"transforming\\\",t),t),writeFile:()=>{}};const $n=new Map,In=new Map,Nn=new Proxy(new Map,{get(e,t){if(!e.has(t)){const[n,...r]=t.split(\\\"@\\\"),s=$n.get(n),o=/^(?:\\\\.?\\\\.?\\\\/|https?:\\\\/\\\\/)/i.test(r)?r.join(\\\"@\\\"):s.module(...r);e.set(t,{url:o,module:import(o),engine:s.engine.bind(s)})}const{url:n,module:r,engine:s}=e.get(t);return(e,o)=>r.then((r=>(In.set(t,e),s(r,e,n,o))))}}),Mn=e=>{for(const t of[].concat(e.type))$n.set(t,e)};for(const e of[Nt,yn,vn,On,An,Pn])Mn(e);const{parse:Fn}=JSON,Hn=e=>{try{return Fn(e)}catch(t){return dn(e)}},Wn=(e,t,n,r={})=>{if(t){const[e,s]=((e,t=\\\"./config.txt\\\")=>{let n=typeof e;return\\\"string\\\"===n&&/\\\\.(json|toml|txt)$/.test(e)?n=RegExp.$1:e=t,[wt(e),n]})(t,n);\\\"json\\\"===s?r=Wt(e).json():\\\"toml\\\"===s?r=Wt(e).text().then(dn):\\\"string\\\"===s?r=Hn(t):\\\"object\\\"===s&&t?r=t:\\\"txt\\\"===s&&\\\"string\\\"==typeof r&&(r=Hn(r)),t=e}return gt(r).then((n=>Nn[e](n,t)))},Dn=\\\"BeforeRun\\\",Cn=\\\"AfterRun\\\",Ln=[`code${Dn}`,`code${Dn}Async`,`code${Cn}`,`code${Cn}Async`],Bn=[\\\"onWorker\\\",\\\"onReady\\\",`on${Dn}`,`on${Dn}Async`,`on${Cn}`,`on${Cn}Async`];function qn(e,t){const{run:n,runAsync:r}=$n.get(this.type);return{...e,run:n.bind(this,t),runAsync:r.bind(this,t)}}const Un=(e,t,n,r,s,o)=>{if(s||o){const a=qn.bind(e,t),i=r?\\\"runAsync\\\":\\\"run\\\",c=e[i];e[i]=r?async function(e,t,...r){s&&await s.call(this,a(e),n);const i=await c.call(this,e,t,...r);return o&&await o.call(this,a(e),n),i}:function(e,t,...r){s&&s.call(this,a(e),n);const i=c.call(this,e,t,...r);return o&&o.call(this,a(e),n),i}}};let Jn,zn,Gn;const Yn=(e,t)=>{addEventListener(e,t||(async t=>{try{await Jn,zn(`xworker.on${e}`,t)}catch(e){postMessage(e)}}),!!t&&{once:!0})},{parse:Kn,stringify:Xn}=p,{proxy:Vn,sync:Zn,polyfill:Qn,window:er,isWindowProxy:tr}=await(async e=>{const t=await Ge(e),n=e?.transform||(e=>e),{[et]:r}=t.proxy,s=new Map,o=(e,t)=>{let n=s.get(e)?.deref();return n||s.set(e,new WeakRef(n=t(e))),n},a=([e,t])=>{switch(e){case Ye[g]:return null==t?globalThis:typeof t===y?o(t,p.object):t;case Ye[f]:return typeof t===y?o(t,p.array):t;case Ye[d]:return typeof t===y?o(t,p.function):te(parseInt(t));case Ye[w]:return(e=>{if(e.startsWith(\\\".\\\"))return Symbol.for(e.slice(1));for(const[t,n]of Ve)if(n===e)return t})(t);default:return t}},i=e=>{let[t,r]=m(e);switch(t){case g:if(r==globalThis||null==r)r=null;else if(typeof r===g&&!(r instanceof ue)){r=n(r);for(const e in r)r[e]=i(r[e])}return[Ye[g],r];case f:return[Ye[f],typeof r===y?r:n(r).map(i)];case d:return[Ye[d],typeof r===d?String(ne(n(r))):r];case w:return[Ye[w],Ze(e)];default:return[Ye[t],r]}},c=(...e)=>a(r(...e)),l={[E]:(e,t,n)=>c(E,e,i(t),i(n)),[v]:(e,t)=>c(v,e,i(t)),[T]:(e,t)=>c(T,e,i(t)),[k]:e=>c(k,e),[x]:(e,t)=>{const n=c(x,e,i(t));if(n){const{get:e,set:t,value:r}=n;e&&(n.get=a(e)),t&&(n.set=a(t)),r&&(n.value=a(r))}return n},[S]:(e,t)=>c(S,e,i(t)),[O]:e=>c(O,e),[A]:e=>c(A,e).map(a),[j]:e=>c(j,e),[R]:(e,t,n)=>c(R,e,i(t),i(n)),[P]:(e,t)=>c(P,e,i(t)),[Ke](e){s.delete(e),r(Ke,e)}},u={object:l,array:l,function:{...l,[_]:(e,...t)=>c(_,e,...t.map(i)),[b]:(e,...t)=>c(b,e,...t.map(i))}},{proxy:p,isProxy:h,pair:m}=V(u),$=p.object(null);return t.proxy[tt]=(e,t,...n)=>{const r=parseInt(t);switch(e){case _:{const[e,t]=n;return i(nt(te(r),a(e),t.map(a)))}case Ke:(e=>{const[t,n]=typeof e===y?[ee,Q]:[Q,ee],r=t.has(e);r&&(n.delete(t.get(e)),t.delete(e))})(r)}},{...t,window:$,isWindowProxy:h}})({parse:Kn,stringify:Xn,transform:e=>Gn?Gn(e):e}),nr={polyfill:Qn,sync:Vn,window:Zn?er:null,isWindowProxy:tr,onmessage:console.info,onerror:console.error,onmessageerror:console.warn,postMessage:postMessage.bind(self)};Yn(\\\"message\\\",(({data:{options:e,config:t,configURL:n,code:r,hooks:s}})=>{Jn=(async()=>{try{const{id:o,tag:a,type:i,custom:c,version:l,config:u,async:p}=e,f=((e,t=\\\"\\\")=>`${e}@${t}`.replace(/@$/,\\\"\\\"))(i,l),d=await Wn(f,t,n,u),{js_modules:h}=In.get(f),y=h?.main,g=pt($n.get(i)),w=((e,t,n,r)=>({type:t,config:n,interpreter:r,io:st.get(r),run:(t,...n)=>e.run(r,t,...n),runAsync:(t,...n)=>e.runAsync(r,t,...n),runEvent:(...t)=>e.runEvent(r,...t)}))(g,c||i,u||{},d);let m=\\\"run\\\";if(p&&(m+=\\\"Async\\\"),s){let e,t,n=\\\"\\\",r=\\\"\\\";for(const e of Ln){const t=s[e];if(t){const s=e.endsWith(\\\"Async\\\");(s&&p||!s&&!p)&&(e.startsWith(\\\"codeBefore\\\")?n=t:r=t)}}(n||r)&&((e,t,n,r)=>{const s=e[t].bind(e);e[t]=\\\"run\\\"===t?(e,t,...o)=>{n&&s(e,n,...o);const a=s(e,bt(t),...o);return r&&s(e,r,...o),a}:async(e,t,...o)=>{n&&await s(e,n,...o);const a=await s(e,bt(t),...o);return r&&await s(e,r,...o),a}})(g,m,n,r);for(const n of Bn.slice(2)){const r=s[n];if(r){const s=n.endsWith(\\\"Async\\\");if(s&&p||!s&&!p){const s=_t(r);n.startsWith(\\\"onBefore\\\")?e=s:t=s}}}Un(g,w,nr,p,e,t)}let _,b,E,v=null,T=\\\"\\\";Zn&&(({CustomEvent:_,document:b}=er),v=o&&b.getElementById(o)||null,E=e=>mt(v,c||i,e,!0,_));const x=Rt(er,Vn,y,t);if(((e,t,n,r)=>{if(\\\"pyodide\\\"===e)return;const s=\\\"polyscript.js_modules\\\";for(const e of Reflect.ownKeys(r))t.registerJSModule(n,`${s}.${e}`,xt(r,e));t.registerJSModule(n,s,r)})(i,g,d,x),g.registerJSModule(d,\\\"polyscript\\\",{xworker:nr,currentScript:v,config:w.config,js_modules:x,get target(){return!T&&v&&(\\\"SCRIPT\\\"===a?v.after(ut(b.createElement(`script-${c||i}`),{id:T=`${o}-target`})):(T=o,v.replaceChildren(),v.style.display=\\\"block\\\")),T}}),zn=g.runEvent.bind(g,d),Gn=g.transform.bind(g,d),v&&E(\\\"ready\\\"),s?.onReady&&_t(s?.onReady).call(g,qn.call(g,w,d),nr),await g[m](d,r),[\\\"micropython\\\",\\\"pyodide\\\"].includes(g.type)){const e=\\\"polyscript\\\",t=`__${e}_workers__`,n=\\\"__export__\\\";d.runPython([`import js as ${t}`,`${t}.${t} = \\\"${n}\\\" in locals() and ${n} or []`,`del ${t}`].join(\\\"\\\\n\\\"));const r=[...globalThis[t]];delete globalThis[t],r.length&&d.runPython([`from ${e} import xworker as ${t}`,...r.map((e=>`${t}.sync.${e} = ${e}`)),`del ${t}`].join(\\\"\\\\n\\\"))}return v&&E(\\\"done\\\"),postMessage(\\\"polyscript:done\\\"),d}catch(e){postMessage(e)}})(),Yn(\\\"error\\\"),Yn(\\\"message\\\"),Yn(\\\"messageerror\\\")}));\\n\".replace(re,place)],{type:'application/javascript'})), ...args)\n/* c8 ignore stop */\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const io = new WeakMap();\nexport const stdio = (init) => {\n    const context = init || console;\n    const localIO = {\n        // allow plugins or other io manipulating logic to reuse\n        // the buffered utility exposed in here (see py-editor)\n        buffered,\n        stderr: (context.stderr || console.error).bind(context),\n        stdout: (context.stdout || console.log).bind(context),\n    };\n    return {\n        stderr: (...args) => localIO.stderr(...args),\n        stdout: (...args) => localIO.stdout(...args),\n        async get(engine) {\n            const interpreter = await engine;\n            io.set(interpreter, localIO);\n            return interpreter;\n        },\n    };\n};\n\nconst decoder = new TextDecoder();\nexport const buffered = (callback, EOL = 10) => {\n    const buffer = [];\n    return (maybeUI8) => {\n        if (maybeUI8 instanceof Uint8Array) {\n            for (const c of maybeUI8) {\n                if (c === EOL)\n                    callback(decoder.decode(new Uint8Array(buffer.splice(0))));\n                else\n                    buffer.push(c);\n            }\n        }\n        // if io.stderr(error) is passed instead\n        // or any io.stdout(\"thing\") this should\n        // still work as expected\n        else {\n            callback(maybeUI8);\n        }\n    };\n};\n/* c8 ignore stop */\n","import { io, stdio } from './_io.js';\n\nconst registry = new Map;\n\nconst type = 'dummy';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst require = name => registry.get(name);\n\nconst run = (interpreter, code) => {\n    try {\n        return Function('require', code)(require);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport default {\n    type,\n    module: () => 'data:application/javascript,',\n    engine: module => stdio().get(module),\n    registerJSModule(_, name, value) {\n        registry.set(name, value);\n    },\n    run,\n    runAsync: run,\n    runEvent: async (interpreter, code, event) => {\n        try {\n            await Function('require', 'e', `return ${code}(e)`)(require, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile() {},\n};\n","import content from 'plain-tag';\n\nconst dedent = {\n  object(...args) {\n    return this.string(content(...args));\n  },\n  string(content) {\n    for (const line of content.split(/[\\r\\n]+/)) {\n      // skip initial empty lines\n      if (line.trim().length) {\n        // trap indentation at the very first line of code\n        if (/^(\\s+)/.test(line))\n          content = content.replace(new RegExp('^' + RegExp.$1, 'gm'), '');\n        // no indentation? all good: get out of here!\n        break;\n      }\n    }\n    return content;\n  }\n};\n\n/**\n * Usable both as template literal tag or just as callback for strings, removes all spaces found\n * at the very first line of code encountered while sanitizing, keeping everything else around.\n * @param {string | TemplateStringsArray} tpl either code as string or as template, when used as tag\n * @param  {...any} values the template interpolations, when used as tag\n * @returns {string} code without undesired indentation\n */\nconst codedent = (tpl, ...values) => dedent[typeof tpl](tpl, ...values);\n\nexport default codedent;\n","export default function (t) {\n  for (var s = t[0], i = 1, l = arguments.length; i < l; i++)\n    s += arguments[i] + t[i];\n  return s;\n};\n","/**\n * Copyright (C) 2017-present by Andrea Giammarchi - @WebReflection\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst {replace} = '';\n\n// escape\nconst es = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\nconst ca = /[&<>'\"]/g;\n\nconst esca = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;'\n};\nconst pe = m => esca[m];\n\n/**\n * Safely escape HTML entities such as `&`, `<`, `>`, `\"`, and `'`.\n * @param {string} es the input to safely escape\n * @returns {string} the escaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const escape = es => replace.call(es, ca, pe);\n\n\n// unescape\nconst unes = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"'\n};\nconst cape = m => unes[m];\n\n/**\n * Safely unescape previously escaped entities such as `&`, `<`, `>`, `\"`,\n * and `'`.\n * @param {string} un a previously escaped string\n * @returns {string} the unescaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const unescape = un => replace.call(un, es, cape);\n","import $dedent from 'codedent';\nimport { unescape as $unescape } from 'html-escaper';\nimport { io } from './interpreter/_io.js';\n\n/** @type {(tpl: string | TemplateStringsArray, ...values:any[]) => string} */\nconst dedent = $dedent;\n\n/** @type {(value:string) => string} */\nconst unescape = $unescape;\n\nconst { isArray } = Array;\n\nconst { assign, create, defineProperties, defineProperty, entries } = Object;\n\nconst { all, resolve } = new Proxy(Promise, {\n    get: ($, name) => $[name].bind($),\n});\n\nconst absoluteURL = (path, base = location.href) =>\n    new URL(path, base.replace(/^blob:/, '')).href;\n\n/* c8 ignore start */\nlet id = 0;\nconst nodeInfo = (node, type) => ({\n    id: node.id || (node.id = `${type}-w${id++}`),\n    tag: node.tagName\n});\n\n/**\n * Notify the main thread about element \"readiness\".\n * @param {HTMLScriptElement | HTMLElement} target the script or custom-type element\n * @param {string} type the custom/type as event prefix\n * @param {string} what the kind of event to dispatch, i.e. `ready` or `done`\n * @param {boolean} [worker = false] `true` if dispatched form a worker, `false` by default if in main\n * @param {globalThis.CustomEvent} [CustomEvent = globalThis.CustomEvent] the `CustomEvent` to use\n */\nconst dispatch = (target, type, what, worker = false, CE = CustomEvent) => {\n    target.dispatchEvent(\n        new CE(`${type}:${what}`, {\n            bubbles: true,\n            detail: { worker },\n        })\n    );\n};\n\nexport const createFunction = value => Function(`'use strict';return (${value})`)();\n\nexport const createResolved = (module, type, config, interpreter) => ({\n    type,\n    config,\n    interpreter,\n    io: io.get(interpreter),\n    run: (code, ...args) => module.run(interpreter, code, ...args),\n    runAsync: (code, ...args) => module.runAsync(interpreter, code, ...args),\n    runEvent: (...args) => module.runEvent(interpreter, ...args),\n});\n\nconst dropLine0 = code => code.replace(/^(?:\\n|\\r\\n)/, '');\n\nexport const createOverload = (module, name, before, after) => {\n    const method = module[name].bind(module);\n    module[name] = name === 'run' ?\n        // patch the sync method\n        (interpreter, code, ...args) => {\n            if (before) method(interpreter, before, ...args);\n            const result = method(interpreter, dropLine0(code), ...args);\n            if (after) method(interpreter, after, ...args);\n            return result;\n        } :\n        // patch the async one\n        async (interpreter, code, ...args) => {\n            if (before) await method(interpreter, before, ...args);\n            const result = await method(interpreter, dropLine0(code), ...args);\n            if (after) await method(interpreter, after, ...args);\n            return result;\n        };\n};\n\nexport const js_modules = Symbol.for('polyscript.js_modules');\n\nconst jsModules = new Map;\ndefineProperty(globalThis, js_modules, { value: jsModules });\n\nexport const JSModules = new Proxy(jsModules, {\n    get: (map, name) => map.get(name),\n    has: (map, name) => map.has(name),\n    ownKeys: map => [...map.keys()],\n});\n\nconst has = (_, field) => !field.startsWith('_');\n\nconst proxy = (modules, name) => new Proxy(\n    modules,\n    { has, get: (modules, field) => modules[name][field] }\n);\n\nexport const registerJSModules = (type, module, interpreter, modules) => {\n    // Pyodide resolves JS modules magically\n    if (type === 'pyodide') return;\n\n    // other runtimes need this pretty ugly dance (it works though)\n    const jsModules = 'polyscript.js_modules';\n    for (const name of Reflect.ownKeys(modules))\n        module.registerJSModule(interpreter, `${jsModules}.${name}`, proxy(modules, name));\n    module.registerJSModule(interpreter, jsModules, modules);\n};\n\nexport const importJS = (source, name) => import(source).then(esm => {\n    jsModules.set(name, { ...esm });\n});\n\nexport const importCSS = href => new Promise((onload, onerror) => {\n    if (document.querySelector(`link[rel=\"stylesheet\"][href=\"${href}\"]`)) {\n        onload();\n    }\n    else {\n        document.head.append(\n            assign(\n                document.createElement('link'),\n                { rel: 'stylesheet', href, onload, onerror },\n            )\n        );\n    }\n});\n\nexport const isCSS = source => /\\.css$/i.test(new URL(source).pathname);\n/* c8 ignore stop */\n\nexport {\n    dedent, unescape,\n    dispatch,\n    isArray,\n    assign,\n    create,\n    defineProperties,\n    defineProperty,\n    entries,\n    all,\n    resolve,\n    absoluteURL,\n    nodeInfo,\n};\n","import '@ungap/with-resolvers';\nimport fetch from '@webreflection/fetch';\n\nimport { absoluteURL, all, entries, importCSS, importJS, isArray, isCSS } from '../utils.js';\n\nexport const RUNNING_IN_WORKER = !globalThis.window;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n\n// This should be the only helper needed for all Emscripten based FS exports\nexport const writeFile = ({ FS, PATH, PATH_FS }, path, buffer) => {\n    const absPath = PATH_FS.resolve(path);\n    const dirPath = PATH.dirname(absPath);\n    if (FS.mkdirTree) FS.mkdirTree(dirPath);\n    else mkdirTree(FS, dirPath);\n    return FS.writeFile(absPath, new Uint8Array(buffer), {\n        canOwn: true,\n    });\n};\n\n// This is instead a fallback for Lua or others\nexport const writeFileShim = (FS, path, buffer) => {\n    mkdirTree(FS, dirname(path));\n    path = resolve(FS, path);\n    return FS.writeFile(path, new Uint8Array(buffer), { canOwn: true });\n};\n\nconst dirname = (path) => {\n    const tree = path.split('/');\n    tree.pop();\n    return tree.join('/');\n};\n\nconst mkdirTree = (FS, path) => {\n    const current = [];\n    for (const branch of path.split('/')) {\n        if (branch === '.' || branch === '..') continue;\n        current.push(branch);\n        if (branch) FS.mkdir(current.join('/'));\n    }\n};\n\nconst resolve = (FS, path) => {\n    const tree = [];\n    for (const branch of path.split('/')) {\n        switch (branch) {\n            case '':\n                break;\n            case '.':\n                break;\n            case '..':\n                tree.pop();\n                break;\n            default:\n                tree.push(branch);\n        }\n    }\n    return [FS.cwd()].concat(tree).join('/').replace(/^\\/+/, '/');\n};\n\nconst calculateFetchPaths = (config_fetch) => {\n    for (const { files, to_file, from = '' } of config_fetch) {\n        if (files !== undefined && to_file !== undefined)\n            throw new Error(\n                'Cannot use \\'to_file\\' and \\'files\\' parameters together!',\n            );\n        if (files === undefined && to_file === undefined && from.endsWith('/'))\n            throw new Error(\n                `Couldn't determine the filename from the path ${from}, please supply 'to_file' parameter.`,\n            );\n    }\n    return config_fetch.flatMap(\n        ({ from = '', to_folder = '.', to_file, files }) => {\n            if (isArray(files))\n                return files.map((file) => ({\n                    url: joinPaths([from, file]),\n                    path: joinPaths([to_folder, file]),\n                }));\n            const filename = to_file || from.slice(1 + from.lastIndexOf('/'));\n            return [{ url: from, path: joinPaths([to_folder, filename]) }];\n        },\n    );\n};\n\nconst joinPaths = (parts) => {\n    const res = parts\n        .map((part) => part.trim().replace(/(^[/]*|[/]*$)/g, ''))\n        .filter((p) => p !== '' && p !== '.')\n        .join('/');\n\n    return parts[0].startsWith('/') ? `/${res}` : res;\n};\n\nconst fetchBuffer = (url, baseURL) =>\n    fetch(absoluteURL(url, baseURL)).arrayBuffer();\n\nexport const fetchPaths = (module, interpreter, config_fetch, baseURL) =>\n    all(\n        calculateFetchPaths(config_fetch).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(interpreter, path, buffer)),\n        ),\n    );\n\n    const fillName = (source, dest) => dest.endsWith('/') ?\n                        `${dest}${source.split('/').pop()}` : dest;\n\nconst parseTemplate = (src, map) => src.replace(\n  /\\{.+?\\}/g,\n  k => {\n    if (!map.has(k))\n      throw new SyntaxError(`Invalid template: ${k}`);\n    return map.get(k);\n  }\n);\n\nconst calculateFilesPaths = files => {\n  const map = new Map;\n  const targets = new Set;\n  const sourceDest = [];\n  for (const [source, dest] of entries(files)) {\n    if (/^\\{.+\\}$/.test(source)) {\n      if (map.has(source))\n        throw new SyntaxError(`Duplicated template: ${source}`);\n      map.set(source, parseTemplate(dest, map));\n    }\n    else {\n      const url = parseTemplate(source, map);\n      const path = fillName(url, parseTemplate(dest || './', map));\n      if (targets.has(path))\n        throw new SyntaxError(`Duplicated destination: ${path}`);\n      targets.add(path);\n      sourceDest.push({ url, path });\n    }\n  }\n  return sourceDest;\n};\n\nexport const fetchFiles = (module, interpreter, config_files, baseURL) =>\n    all(\n        calculateFilesPaths(config_files).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(\n                    interpreter,\n                    path,\n                    buffer,\n                    url,\n                )),\n        ),\n    );\n\nexport const fetchJSModules = ({ main, worker }, baseURL) => {\n    const promises = [];\n    if (worker && RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(worker)) {\n            source = absoluteURL(source, baseURL);\n            promises.push(importJS(source, name));\n        }\n    }\n    if (main && !RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(main)) {\n            source = absoluteURL(source, baseURL);\n            if (isCSS(source)) importCSS(source);\n            else promises.push(importJS(source, name));\n        }\n    }\n    return all(promises);\n};\n/* c8 ignore stop */\n","const { assign } = Object;\n\nconst STORAGE = 'entries';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\n/**\n * @typedef {Object} IDBMapOptions\n * @prop {'strict' | 'relaxed' | 'default'} [durability]\n * @prop {string} [prefix]\n */\n\n/** @typedef {[IDBValidKey, unknown]} IDBMapEntry */\n\n/** @type {IDBMapOptions} */\nconst defaultOptions = { durability: 'default', prefix: 'IDBMap' };\n\n/**\n * @template T\n * @param {{ target: IDBRequest<T> }} event\n * @returns {T}\n */\nconst result = ({ target: { result } }) => result;\n\nexport default class IDBMap extends EventTarget {\n  // Privates\n  /** @type {Promise<IDBDatabase>} */ #db;\n  /** @type {IDBMapOptions} */ #options;\n  /** @type {string} */ #prefix;\n\n  /**\n   * @template T\n   * @param {(store: IDBObjectStore) => IDBRequest<T>} what\n   * @param {'readonly' | 'readwrite'} how\n   * @returns {Promise<T>}\n   */\n  async #transaction(what, how) {\n    const db = await this.#db;\n    const t = db.transaction(STORAGE, how, this.#options);\n    return new Promise((onsuccess, onerror) => assign(\n      what(t.objectStore(STORAGE)),\n      {\n        onsuccess,\n        onerror,\n      }\n    ));\n  }\n\n  /**\n   * @param {string} name\n   * @param {IDBMapOptions} options\n   */\n  constructor(\n    name,\n    {\n      durability = defaultOptions.durability,\n      prefix = defaultOptions.prefix,\n    } = defaultOptions\n  ) {\n    super();\n    this.#prefix = prefix;\n    this.#options = { durability };\n    this.#db = new Promise((resolve, reject) => {\n      assign(\n        indexedDB.open(`${this.#prefix}/${name}`),\n        {\n          onupgradeneeded({ target: { result, transaction } }) {\n            if (!result.objectStoreNames.length)\n              result.createObjectStore(STORAGE);\n            transaction.oncomplete = () => resolve(result);\n          },\n          onsuccess(event) {\n            resolve(result(event));\n          },\n          onerror(event) {\n            reject(event);\n            this.dispatchEvent(event);\n          },\n        },\n      );\n    }).then(result => {\n      const boundDispatch = this.dispatchEvent.bind(this);\n      for (const key in result) {\n        if (key.startsWith('on'))\n          result[key] = boundDispatch;\n      }\n      return result;\n    });\n  }\n\n  // EventTarget Forwards\n  /**\n   * @param {Event} event\n   * @returns \n   */\n  dispatchEvent(event) {\n    const { type, message, isTrusted } = event;\n    return super.dispatchEvent(\n      // avoid re-dispatching of the same event\n      isTrusted ?\n        assign(new Event(type), { message }) :\n        event\n    );\n  }\n\n  // IDBDatabase Forwards\n  async close() {\n    (await this.#db).close();\n  }\n\n  // Map async API\n  get size() {\n    return this.#transaction(\n      store => store.count(),\n      READONLY,\n    ).then(result);\n  }\n\n  async clear() {\n    await this.#transaction(\n      store => store.clear(),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async delete(key) {\n    await this.#transaction(\n      store => store.delete(key),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @returns {Promise<IDBMapEntry[]>}\n   */\n  async entries() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key).then(value => [key, value])));\n  }\n\n  /**\n   * @param {(unknown, IDBValidKey, IDBMap) => void} callback\n   * @param {unknown} [context]\n   */\n  async forEach(callback, context = this) {\n    for (const [key, value] of await this.entries())\n      await callback.call(context, value, key, this);\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @returns {Promise<unknown | undefined>}\n   */\n  async get(key) {\n    const value = await this.#transaction(\n      store => store.get(key),\n      READONLY,\n    ).then(result);\n    return value;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async has(key) {\n    const k = await this.#transaction(\n      store => store.getKey(key),\n      READONLY,\n    ).then(result);\n    return k !== void 0;\n  }\n\n  async keys() {\n    const keys = await this.#transaction(\n      store => store.getAllKeys(),\n      READONLY,\n    ).then(result);\n    return keys;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @param {unknown} value\n   */\n  async set(key, value) {\n    await this.#transaction(\n      store => store.put(value, key),\n      READWRITE,\n    );\n    return this;\n  }\n\n  async values() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key)));\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.#prefix;\n  }\n}\n","import IDBMap from './index.js';\n\nexport default class IDBMapSync extends Map {\n  #map;\n  #queue;\n  constructor(...args) {\n    super();\n    this.#map = new IDBMap(...args);\n    this.#queue = this.#map.entries().then(entries => {\n      for (const [key, value] of entries)\n        super.set(key, value);\n    });\n  }\n  async sync() {\n    await this.#queue;\n  }\n  clear() {\n    this.#queue = this.#queue.then(() => this.#map.clear());\n    return super.clear();\n  }\n  delete(key) {\n    this.#queue = this.#queue.then(() => this.#map.delete(key));\n    return super.delete(key);\n  }\n  set(key, value) {\n    this.#queue = this.#queue.then(() => this.#map.set(key, value));\n    return super.set(key, value);\n  }\n}\n","import * as JSON from '@ungap/structured-clone/json';\nimport IDBMapSync from '@webreflection/idb-map/sync';\nimport { dedent } from '../utils.js';\nimport { io } from './_io.js';\n\nexport const loader = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const registerJSModule = (interpreter, name, value) => {\n    if (name === 'polyscript') {\n        value.lazy_py_modules = async (...packages) => {\n            await loader.get(interpreter)(packages);\n            return packages.map(name => interpreter.pyimport(name));\n        };\n        value.storage = async (name) => {\n            const storage = new IDBMapSync(name);\n            await storage.sync();\n            return storage;\n        };\n        value.JSON = JSON;\n    }\n    interpreter.registerJsModule(name, value);\n};\n\nexport const getFormat = (path, url) => {\n    if (path.endsWith('/*')) {\n        if (/\\.(zip|whl|tgz|tar(?:\\.gz)?)$/.test(url))\n            return RegExp.$1;\n        throw new Error(`Unsupported archive ${url}`);\n    }\n    return '';\n};\n\nexport const run = (interpreter, code, ...args) => {\n    try {\n        return interpreter.runPython(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runAsync = async (interpreter, code, ...args) => {\n    try {\n        return await interpreter.runPythonAsync(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runEvent = async (interpreter, code, event) => {\n    // allows method(event) as well as namespace.method(event)\n    // it does not allow fancy brackets names for now\n    const [name, ...keys] = code.split('.');\n    let target = interpreter.globals.get(name);\n    let context;\n    for (const key of keys) [context, target] = [target, target[key]];\n    try {\n        await target.call(context, event);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n/* c8 ignore stop */\n","// ⚠️ DO NOT MODIFY - SOURCE FILE: \"../../python/mip.py\"\nexport default new TextEncoder().encode(\"from uio import StringIO\\nimport sys\\n\\nclass Response:\\n    def __init__(self, f):\\n        self.raw = f\\n        self.encoding = \\\"utf-8\\\"\\n        self._cached = None\\n\\n    def close(self):\\n        if self.raw:\\n            self.raw.close()\\n            self.raw = None\\n        self._cached = None\\n\\n    @property\\n    def content(self):\\n        if self._cached is None:\\n            try:\\n                self._cached = self.raw.read()\\n            finally:\\n                self.raw.close()\\n                self.raw = None\\n        return self._cached\\n\\n    @property\\n    def text(self):\\n        return str(self.content, self.encoding)\\n\\n    def json(self):\\n        import ujson\\n\\n        return ujson.loads(self.content)\\n\\n\\n# TODO try to support streaming xhr requests, a-la pyodide-http\\nHEADERS_TO_IGNORE = (\\\"user-agent\\\",)\\n\\n\\ntry:\\n    import js\\nexcept Exception as err:\\n    raise OSError(\\\"This version of urequests can only be used in the browser\\\")\\n\\n# TODO try to support streaming xhr requests, a-la pyodide-http\\n\\nHEADERS_TO_IGNORE = (\\\"user-agent\\\",)\\n\\n\\ndef request(\\n    method,\\n    url,\\n    data=None,\\n    json=None,\\n    headers={},\\n    stream=None,\\n    auth=None,\\n    timeout=None,\\n    parse_headers=True,\\n):\\n    from js import XMLHttpRequest\\n\\n    xhr = XMLHttpRequest.new()\\n    xhr.withCredentials = False\\n\\n    if auth is not None:\\n        import ubinascii\\n\\n        username, password = auth\\n        xhr.open(method, url, False, username, password)\\n    else:\\n        xhr.open(method, url, False)\\n\\n    for name, value in headers.items():\\n        if name.lower() not in HEADERS_TO_IGNORE:\\n            xhr.setRequestHeader(name, value)\\n\\n    if timeout:\\n        xhr.timeout = int(timeout * 1000)\\n\\n    if json is not None:\\n        assert data is None\\n        import ujson\\n\\n        data = ujson.dumps(json)\\n        # s.write(b\\\"Content-Type: application/json\\\\r\\\\n\\\")\\n        xhr.setRequestHeader(\\\"Content-Type\\\", \\\"application/json\\\")\\n\\n    xhr.send(data)\\n\\n    # Emulates the construction process in the original urequests\\n    resp = Response(StringIO(xhr.responseText))\\n    resp.status_code = xhr.status\\n    resp.reason = xhr.statusText\\n    resp.headers = xhr.getAllResponseHeaders()\\n\\n    return resp\\n\\n\\n# Other methods - head, post, put, patch, delete - are not used by\\n# mip and therefore not included\\n\\n\\ndef get(url, **kw):\\n    return request(\\\"GET\\\", url, **kw)\\n\\n\\n# Content below this line is from the Micropython MIP package and is covered\\n# by the applicable MIT license:\\n# \\n# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER \\n# DEALINGS IN THE SOFTWARE.\\n\\n# MicroPython package installer\\n# MIT license; Copyright (c) 2022 Jim Mussared\\n\\n\\n_PACKAGE_INDEX = const(\\\"https://micropython.org/pi/v2\\\")\\n_CHUNK_SIZE = 128\\n\\n\\n# This implements os.makedirs(os.dirname(path))\\ndef _ensure_path_exists(path):\\n    import os\\n\\n    split = path.split(\\\"/\\\")\\n\\n    # Handle paths starting with \\\"/\\\".\\n    if not split[0]:\\n        split.pop(0)\\n        split[0] = \\\"/\\\" + split[0]\\n\\n    prefix = \\\"\\\"\\n    for i in range(len(split) - 1):\\n        prefix += split[i]\\n        try:\\n            os.stat(prefix)\\n        except:\\n            os.mkdir(prefix)\\n        prefix += \\\"/\\\"\\n\\n\\n# Copy from src (stream) to dest (function-taking-bytes)\\ndef _chunk(src, dest):\\n    buf = memoryview(bytearray(_CHUNK_SIZE))\\n    while True:\\n        n = src.readinto(buf)\\n        if n == 0:\\n            break\\n        dest(buf if n == _CHUNK_SIZE else buf[:n])\\n\\n\\n# Check if the specified path exists and matches the hash.\\ndef _check_exists(path, short_hash):\\n    import os\\n\\n    try:\\n        import binascii\\n        import hashlib\\n\\n        with open(path, \\\"rb\\\") as f:\\n            hs256 = hashlib.sha256()\\n            _chunk(f, hs256.update)\\n            existing_hash = str(binascii.hexlify(hs256.digest())[: len(short_hash)], \\\"utf-8\\\")\\n            return existing_hash == short_hash\\n    except:\\n        return False\\n\\n\\ndef _rewrite_url(url, branch=None):\\n    if not branch:\\n        branch = \\\"HEAD\\\"\\n    if url.startswith(\\\"github:\\\"):\\n        url = url[7:].split(\\\"/\\\")\\n        url = (\\n            \\\"https://raw.githubusercontent.com/\\\"\\n            + url[0]\\n            + \\\"/\\\"\\n            + url[1]\\n            + \\\"/\\\"\\n            + branch\\n            + \\\"/\\\"\\n            + \\\"/\\\".join(url[2:])\\n        )\\n    return url\\n\\n\\ndef _download_file(url, dest):\\n    response = get(url)\\n    try:\\n        if response.status_code != 200:\\n            print(\\\"Error\\\", response.status_code, \\\"requesting\\\", url)\\n            return False\\n\\n        print(\\\"Copying:\\\", dest)\\n        _ensure_path_exists(dest)\\n        with open(dest, \\\"wb\\\") as f:\\n            _chunk(response.raw, f.write)\\n\\n        return True\\n    finally:\\n        response.close()\\n\\n\\ndef _install_json(package_json_url, index, target, version, mpy):\\n    response = get(_rewrite_url(package_json_url, version))\\n    try:\\n        if response.status_code != 200:\\n            print(\\\"Package not found:\\\", package_json_url)\\n            return False\\n\\n        package_json = response.json()\\n    finally:\\n        response.close()\\n    for target_path, short_hash in package_json.get(\\\"hashes\\\", ()):\\n        fs_target_path = target + \\\"/\\\" + target_path\\n        if _check_exists(fs_target_path, short_hash):\\n            print(\\\"Exists:\\\", fs_target_path)\\n        else:\\n            file_url = \\\"{}/file/{}/{}\\\".format(index, short_hash[:2], short_hash)\\n            if not _download_file(file_url, fs_target_path):\\n                print(\\\"File not found: {} {}\\\".format(target_path, short_hash))\\n                return False\\n    for target_path, url in package_json.get(\\\"urls\\\", ()):\\n        fs_target_path = target + \\\"/\\\" + target_path\\n        if not _download_file(_rewrite_url(url, version), fs_target_path):\\n            print(\\\"File not found: {} {}\\\".format(target_path, url))\\n            return False\\n    for dep, dep_version in package_json.get(\\\"deps\\\", ()):\\n        if not _install_package(dep, index, target, dep_version, mpy):\\n            return False\\n    return True\\n\\n\\ndef _install_package(package, index, target, version, mpy):\\n    if (\\n        package.startswith(\\\"http://\\\")\\n        or package.startswith(\\\"https://\\\")\\n        or package.startswith(\\\"github:\\\")\\n    ):\\n        if package.endswith(\\\".py\\\") or package.endswith(\\\".mpy\\\"):\\n            print(\\\"Downloading {} to {}\\\".format(package, target))\\n            return _download_file(\\n                _rewrite_url(package, version), target + \\\"/\\\" + package.rsplit(\\\"/\\\")[-1]\\n            )\\n        else:\\n            if not package.endswith(\\\".json\\\"):\\n                if not package.endswith(\\\"/\\\"):\\n                    package += \\\"/\\\"\\n                package += \\\"package.json\\\"\\n            print(\\\"Installing {} to {}\\\".format(package, target))\\n    else:\\n        if not version:\\n            version = \\\"latest\\\"\\n        print(\\\"Installing {} ({}) from {} to {}\\\".format(package, version, index, target))\\n\\n        mpy_version = (\\n            sys.implementation._mpy & 0xFF if mpy and hasattr(sys.implementation, \\\"_mpy\\\") else \\\"py\\\"\\n        )\\n\\n        # WARNING: mpy_version fails miserably with 1.22.0-380\\n        package = \\\"{}/package/{}/{}/{}.json\\\".format(index, \\\"py\\\", package, version)\\n\\n    return _install_json(package, index, target, version, mpy)\\n\\n\\ndef install(package, index=None, target=None, version=None, mpy=True):\\n    if not target:\\n        for p in sys.path:\\n            if p.endswith(\\\"/lib\\\"):\\n                target = p\\n                break\\n        else:\\n            print(\\\"Unable to find lib dir in sys.path\\\")\\n            return\\n\\n    if not index:\\n        index = _PACKAGE_INDEX\\n\\n    if _install_package(package, index.rstrip(\\\"/\\\"), target, version, mpy):\\n        print(\\\"Done\\\")\\n    else:\\n        print(\\\"Package may be partially installed\\\")\\n\");","/* c8 ignore start */\n\n// toml\nexport const toml = async (text) => (\n  await import(/* webpackIgnore: true */'./3rd-party/toml.js')\n).parse(text);\n\n// zip\nexport const zip = () => import(/* webpackIgnore: true */'./3rd-party/zip.js');\n\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\n\nimport { fetchFiles, fetchJSModules, fetchPaths, writeFile } from './_utils.js';\nimport { getFormat, loader, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio, buffered } from './_io.js';\nimport { absoluteURL } from '../utils.js';\nimport mip from '../python/mip.js';\nimport { zip } from '../3rd-party.js';\n\nconst type = 'micropython';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst mkdir = (FS, path) => {\n    try {\n        FS.mkdir(path);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        // ignore as there's no path.exists here\n    }\n};\n\nexport default {\n    type,\n    module: (version = '1.24.0-preview-114') =>\n        `https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${version}/micropython.mjs`,\n    async engine({ loadMicroPython }, config, url, baseURL) {\n        const { stderr, stdout, get } = stdio({\n            stderr: buffered(console.error),\n            stdout: buffered(console.log),\n        });\n        url = url.replace(/\\.m?js$/, '.wasm');\n        const interpreter = await get(loadMicroPython({ linebuffer: false, stderr, stdout, url }));\n        const py_imports = importPackages.bind(this, interpreter, baseURL);\n        loader.set(interpreter, py_imports);\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n\n        // Install Micropython Package\n        this.writeFile(interpreter, './mip.py', mip);\n        if (config.packages) await py_imports(config.packages);\n        return interpreter;\n    },\n    registerJSModule,\n    run,\n    runAsync,\n    runEvent,\n    transform: (interpreter, value) => interpreter.PyProxy.toJs(value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const { FS, _module: { PATH, PATH_FS } } = interpreter;\n        const fs = { FS, PATH, PATH_FS };\n        const format = getFormat(path, url);\n        if (format) {\n            const extractDir = path.slice(0, -1);\n            if (extractDir !== './') FS.mkdir(extractDir);\n            switch (format) {\n                case 'whl':\n                case 'zip': {\n                    const blob = new Blob([buffer], { type: 'application/zip' });\n                    return zip().then(async ({ BlobReader, Uint8ArrayWriter, ZipReader }) => {\n                        const zipFileReader = new BlobReader(blob);\n                        const zipReader = new ZipReader(zipFileReader);\n                        for (const entry of await zipReader.getEntries()) {\n                            const { directory, filename } = entry;\n                            const name = extractDir + filename;\n                            if (directory) mkdir(FS, name);\n                            else {\n                                mkdir(FS, PATH.dirname(name));\n                                const buffer = await entry.getData(new Uint8ArrayWriter);\n                                FS.writeFile(name, buffer, {\n                                    canOwn: true,\n                                });\n                            }\n                        }\n                        zipReader.close();\n                    });\n                }\n                case 'tgz':\n                case 'tar.gz': {\n                    const TMP = './_.tar.gz';\n                    writeFile(fs, TMP, buffer);\n                    interpreter.runPython(`\n                        import os, gzip, tarfile\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\"${TMP}\", \"rb\")))\n                        for f in tar:\n                            name = f\"${extractDir}{f.name}\"\n                            if f.type == tarfile.DIRTYPE:\n                                if f.name != \"./\":\n                                    os.mkdir(name.strip(\"/\"))\n                            else:\n                                dir = os.path.dirname(name)\n                                if not os.path.exists(dir):\n                                    os.mkdir(dir)\n                                source = tar.extractfile(f)\n                                with open(name, \"wb\") as dest:\n                                    dest.write(source.read())\n                                    dest.close()\n                        tar.close()\n                        os.remove(\"${TMP}\")\n                    `);\n                    return;\n                }\n            }\n        }\n        return writeFile(fs, path, buffer);\n    },\n};\n\nasync function importPackages(interpreter, baseURL, packages) {\n    let mip;\n    for (const mpyPackage of packages) {\n        if (mpyPackage.endsWith('.whl')) {\n            const url = absoluteURL(mpyPackage, baseURL);\n            const buffer = await fetch(url).arrayBuffer();\n            await this.writeFile(interpreter, './*', buffer, url);\n        }\n        else {\n            if (!mip) mip = interpreter.pyimport('mip');\n            mip.install(mpyPackage);\n        }\n    }\n}\n/* c8 ignore stop */\n","import { create } from 'gc-hook';\n\nimport { RUNNING_IN_WORKER, fetchFiles, fetchJSModules, fetchPaths, writeFile } from './_utils.js';\nimport { getFormat, loader, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio } from './_io.js';\nimport { isArray } from '../utils.js';\n\nconst type = 'pyodide';\nconst toJsOptions = { dict_converter: Object.fromEntries };\n\n/* c8 ignore start */\nlet overrideFunction = false;\nconst overrideMethod = method => (...args) => {\n    try {\n        overrideFunction = true;\n        return method(...args);\n    }\n    finally {\n        overrideFunction = false;\n    }\n};\n\nlet overridden = false;\nconst applyOverride = () => {\n    if (overridden) return;\n    overridden = true;\n\n    const proxies = new WeakMap;\n    const onGC = value => value.destroy();\n    const patchArgs = args => {\n        for (let i = 0; i < args.length; i++) {\n            const value = args[i];\n            if (\n                typeof value === 'function' &&\n                'copy' in value\n            ) {\n                // avoid seppuku / Harakiri + speed up\n                overrideFunction = false;\n                // reuse copied value if known already\n                let proxy = proxies.get(value)?.deref();\n                if (!proxy) {\n                    try {\n                        // observe the copy and return a Proxy reference\n                        proxy = create(value.copy(), onGC);\n                        proxies.set(value, new WeakRef(proxy));\n                    }\n                    catch (error) {\n                        console.error(error);\n                    }\n                }\n                if (proxy) args[i] = proxy;\n                overrideFunction = true;\n            }\n        }\n    };\n\n    // trap apply to make call possible after the patch\n    const { call } = Function;\n    const apply = call.bind(call, call.apply);\n    // the patch\n    Object.defineProperties(Function.prototype, {\n        apply: {\n            value(context, args) {\n                if (overrideFunction) patchArgs(args);\n                return apply(this, context, args);\n            }\n        },\n        call: {\n            value(context, ...args) {\n                if (overrideFunction) patchArgs(args);\n                return apply(this, context, args);\n            }\n        }\n    });\n};\n/* c8 ignore stop */\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '0.26.2') =>\n        `https://cdn.jsdelivr.net/pyodide/v${version}/full/pyodide.mjs`,\n    async engine({ loadPyodide }, config, url, baseURL) {\n        // apply override ASAP then load foreign code\n        if (!RUNNING_IN_WORKER && config.experimental_create_proxy === 'auto')\n            applyOverride();\n        const { stderr, stdout, get } = stdio();\n        const indexURL = url.slice(0, url.lastIndexOf('/'));\n        const interpreter = await get(\n            loadPyodide({ stderr, stdout, indexURL }),\n        );\n        const py_imports = importPackages.bind(interpreter);\n        loader.set(interpreter, py_imports);\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        if (config.packages) await py_imports(config.packages);\n        return interpreter;\n    },\n    registerJSModule,\n    run: overrideMethod(run),\n    runAsync: overrideMethod(runAsync),\n    runEvent: overrideMethod(runEvent),\n    transform: (interpreter, value) => transform.call(interpreter, value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const format = getFormat(path, url);\n        if (format) {\n            return interpreter.unpackArchive(buffer, format, {\n                extractDir: path.slice(0, -1)\n            });\n        }\n        const { FS, PATH, _module: { PATH_FS } } = interpreter;\n        return writeFile({ FS, PATH, PATH_FS }, path, buffer);\n    },\n};\n\nfunction transform(value) {\n    const { ffi: { PyProxy } } = this;\n    if (value && typeof value === 'object') {\n        if (value instanceof PyProxy) return value.toJs(toJsOptions);\n        // I believe this case is for LiteralMap which is not a PyProxy\n        // and yet it needs to be re-converted to something useful.\n        if (value instanceof Map) return new Map([...value.entries()]);\n        if (isArray(value)) return value.map(transform, this);\n    }\n    return value;\n}\n\n// exposed utility to import packages via polyscript.lazy_py_modules\nasync function importPackages(packages) {\n    await this.loadPackage('micropip');\n    const micropip = this.pyimport('micropip');\n    await micropip.install(packages, { keep_going: true });\n    micropip.destroy();\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\n\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\n\nconst type = 'ruby-wasm-wasi';\nconst jsType = type.replace(/\\W+/g, '_');\n\n// MISSING:\n//  * there is no VFS apparently or I couldn't reach any\n//  * I've no idea how to override the stderr and stdout\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    experimental: true,\n    module: (version = '2.6.2') =>\n        `https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${version}/dist/browser/+esm`,\n    async engine({ DefaultRubyVM }, config, url, baseURL) {\n        url = url.replace(/\\/browser\\/\\+esm$/, '/ruby.wasm');\n        const buffer = await fetch(url).arrayBuffer();\n        const module = await WebAssembly.compile(buffer);\n        const { vm: interpreter } = await DefaultRubyVM(module);\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(interpreter, name, value) {\n        name = name.replace(/\\W+/g, '__');\n        const id = `__module_${jsType}_${name}`;\n        globalThis[id] = value;\n        this.run(interpreter, `require \"js\";$${name}=JS.global[:${id}]`);\n        delete globalThis[id];\n    },\n    run: (interpreter, code, ...args) => interpreter.eval(dedent(code), ...args),\n    runAsync: (interpreter, code, ...args) => interpreter.evalAsync(dedent(code), ...args),\n    async runEvent(interpreter, code, event) {\n        // patch common xworker.onmessage/onerror cases\n        if (/^xworker\\.(on\\w+)$/.test(code)) {\n            const { $1: name } = RegExp;\n            const id = `__module_${jsType}_event`;\n            globalThis[id] = event;\n            this.run(\n                interpreter,\n                `require \"js\";$xworker.call(\"${name}\",JS.global[:${id}])`,\n            );\n            delete globalThis[id];\n        } else {\n            // Experimental: allows only events by fully qualified method name\n            const method = this.run(interpreter, `method(:${code})`);\n            await method.call(code, interpreter.wrap(event));\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: () => {\n        throw new Error(`writeFile is not supported in ${type}`);\n    },\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths, writeFileShim } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'wasmoon';\n\n// MISSING:\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '1.16.0') =>\n        `https://cdn.jsdelivr.net/npm/wasmoon@${version}/+esm`,\n    async engine({ LuaFactory, LuaLibraries }, config, _, baseURL) {\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(new LuaFactory().createEngine());\n        interpreter.global.getTable(LuaLibraries.Base, (index) => {\n            interpreter.global.setField(index, 'print', stdout);\n            interpreter.global.setField(index, 'printErr', stderr);\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields\n    registerJSModule: (interpreter, name, value) => {\n        interpreter.global.set(name, value);\n    },\n    run: (interpreter, code, ...args) => {\n        try {\n            return interpreter.doStringSync(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runAsync: async (interpreter, code, ...args) => {\n        try {\n            return await interpreter.doString(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runEvent: async (interpreter, code, event) => {\n        // allows method(event) as well as namespace.method(event)\n        // it does not allow fancy brackets names for now\n        const [name, ...keys] = code.split('.');\n        let target = interpreter.global.get(name);\n        let context;\n        for (const key of keys) [context, target] = [target, target[key]];\n        try {\n            await target.call(context, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: (\n        {\n            cmodule: {\n                module: { FS },\n            },\n        },\n        path,\n        buffer,\n    ) => writeFileShim(FS, path, buffer),\n};\n/* c8 ignore stop */\n","import { create } from 'gc-hook';\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'webr';\nconst r = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst run = async (interpreter, code) => {\n  const { shelter, destroy, io } = r.get(interpreter);\n  const { output, result } = await shelter.captureR(dedent(code));\n  for (const { type, data } of output) io[type](data);\n  // this is a double proxy but it's OK as the consumer\n  // of the result here needs to invoke explicitly a conversion\n  // or trust the `(await p.toJs()).values` returns what's expected.\n  return create(result, destroy, { token: false });\n};\n\nexport default {\n    type,\n    experimental: true,\n    module: (version = '0.4.0') =>\n        `https://cdn.jsdelivr.net/npm/webr@${version}/dist/webr.mjs`,\n    async engine(module, config, _, baseURL) {\n        const { get } = stdio();\n        const interpreter = new module.WebR();\n        await get(interpreter.init().then(() => interpreter));\n        const shelter = await new interpreter.Shelter();\n        r.set(interpreter, {\n          module,\n          shelter,\n          destroy: shelter.destroy.bind(shelter),\n          io: io.get(interpreter),\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(_, name) {\n        console.warn(`Experimental interpreter: module ${name} is not supported (yet)`);\n        // TODO: as complex JS objects / modules are not allowed\n        // it's not clear how we can bind anything or import a module\n        // in a context that doesn't understand methods from JS\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n    },\n    run,\n    runAsync: run,\n    async runEvent(interpreter, code, event) {\n        // TODO: WebR cannot convert exoteric objects or any literal\n        // to an easy to reason about data/frame ... that conversion\n        // is reserved for the future:\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n        await interpreter.evalRVoid(`${code}(event)`, {\n          env: { event: { type: [ event.type ] } }\n        });\n    },\n    transform: (_, value) => {\n        console.log('transforming', value);\n        return value;\n    },\n    writeFile: () => {\n        // MAYBE ???\n    },\n};\n/* c8 ignore stop */\n","// ⚠️ Part of this file is automatically generated\n//    The :RUNTIMES comment is a delimiter and no code should be written/changed after\n//    See rollup/build_interpreters.cjs to know more\n\n/** @type {Map<string, object>} */\nexport const registry = new Map();\n\n/** @type {Map<string, object>} */\nexport const configs = new Map();\n\n/** @type {string[]} */\nexport const selectors = [];\n\n/** @type {string[]} */\nexport const prefixes = [];\n\n/* c8 ignore start */\nexport const interpreter = new Proxy(new Map(), {\n    get(map, id) {\n        if (!map.has(id)) {\n            const [type, ...rest] = id.split('@');\n            const interpreter = registry.get(type);\n            const url = /^(?:\\.?\\.?\\/|https?:\\/\\/)/i.test(rest) \n                ? rest.join('@')\n                : interpreter.module(...rest);\n            map.set(id, {\n                url,\n                module: import(/* webpackIgnore: true */url),\n                engine: interpreter.engine.bind(interpreter),\n            });\n        }\n        const { url, module, engine } = map.get(id);\n        return (config, baseURL) =>\n            module.then((module) => {\n                configs.set(id, config);\n                return engine(module, config, url, baseURL);\n            });\n    },\n});\n/* c8 ignore stop */\n\nconst register = (interpreter) => {\n    for (const type of [].concat(interpreter.type)) {\n        registry.set(type, interpreter);\n        selectors.push(`script[type=\"${type}\"]`);\n        prefixes.push(`${type}-`);\n    }\n};\n\n//:RUNTIMES\nimport dummy from './interpreter/dummy.js';\nimport micropython from './interpreter/micropython.js';\nimport pyodide from './interpreter/pyodide.js';\nimport ruby_wasm_wasi from './interpreter/ruby-wasm-wasi.js';\nimport wasmoon from './interpreter/wasmoon.js';\nimport webr from './interpreter/webr.js';\nfor (const interpreter of [dummy, micropython, pyodide, ruby_wasm_wasi, wasmoon, webr])\n    register(interpreter);\n","import fetch from '@webreflection/fetch';\n\nimport { interpreter } from './interpreters.js';\nimport { absoluteURL, resolve } from './utils.js';\nimport { toml } from './3rd-party.js';\n\nconst { parse } = JSON;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const getConfigURLAndType = (config, configURL = './config.txt') => {\n    let type = typeof config;\n    if (type === 'string' && /\\.(json|toml|txt)$/.test(config))\n        type = RegExp.$1;\n    else\n        config = configURL;\n    return [absoluteURL(config), type];\n};\n\nconst parseString = config => {\n    try {\n        return parse(config);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        return toml(config);\n    }\n};\n/* c8 ignore stop */\n\n/**\n * Parse a generic config if it came from an attribute either as URL\n * or as a serialized string. In XWorker case, accepts a pre-defined\n * options to use as it is to avoid needing at all a fetch operation.\n * In latter case, config will be suffixed as `config.txt`.\n * @param {string} id the interpreter name @ version identifier\n * @param {string | object} config optional config file to parse\n * @param {string} [configURL] optional config URL if config is not string\n * @param {object} [options] optional options used to bootstrap XWorker\n * @returns\n */\nexport const getRuntime = (id, config, configURL, options = {}) => {\n    if (config) {\n        // REQUIRES INTEGRATION TEST\n        /* c8 ignore start */\n        const [absolute, type] = getConfigURLAndType(config, configURL);\n        if (type === 'json') {\n            options = fetch(absolute).json();\n        } else if (type === 'toml') {\n            options = fetch(absolute).text().then(toml);\n        } else if (type === 'string') {\n            options = parseString(config);\n        } else if (type === 'object' && config) {\n            options = config;\n        } else if (type === 'txt' && typeof options === 'string') {\n            options = parseString(options);\n        }\n        config = absolute;\n        /* c8 ignore stop */\n    }\n    return resolve(options).then(options => interpreter[id](options, config));\n};\n\n/**\n * @param {string} type the interpreter type\n * @param {string} [version] the optional interpreter version\n * @returns\n */\nexport const getRuntimeID = (type, version = '') =>\n    `${type}@${version}`.replace(/@$/, '');\n","export default function (callback = this) {\n  return String(callback).replace(\n    /^(async\\s*)?(\\bfunction\\b)?(.*?)\\(/,\n    (_, isAsync, fn, name) => (\n      name && !fn ?\n        `${isAsync || \"\"}function ${name}(` :\n        _\n    ),\n  );\n};\n","import { registry } from './interpreters.js';\n\nconst beforeRun = 'BeforeRun';\nconst afterRun = 'AfterRun';\n\nexport const code = [\n    `code${beforeRun}`,\n    `code${beforeRun}Async`,\n    `code${afterRun}`,\n    `code${afterRun}Async`,\n];\n\nexport const js = [\n    'onWorker',\n    'onReady',\n    `on${beforeRun}`,\n    `on${beforeRun}Async`,\n    `on${afterRun}`,\n    `on${afterRun}Async`,\n];\n\n/* c8 ignore start */\n// create a copy of the resolved wrapper with the original\n// run and runAsync so that, if used within onBeforeRun/Async\n// or onAfterRun/Async polluted entries won't matter and just\n// the native utilities will be available without seppuku.\n// The same applies if called within `onReady` worker hook.\nexport function patch(resolved, interpreter) {\n    const { run, runAsync } = registry.get(this.type);\n    return {\n        ...resolved,\n        run: run.bind(this, interpreter),\n        runAsync: runAsync.bind(this, interpreter)\n    };\n}\n\n/**\n * Created the wrapper to pass along hooked callbacks.\n * @param {object} module the details module\n * @param {object} ref the node or reference to pass as second argument\n * @param {boolean} isAsync if run should be async\n * @param {function?} before callback to run before\n * @param {function?} after callback to run after\n * @returns {object}\n */\nexport const polluteJS = (module, resolved, ref, isAsync, before, after) => {\n    if (before || after) {\n        const patched = patch.bind(module, resolved);\n        const name = isAsync ? 'runAsync' : 'run';\n        const method = module[name];\n        module[name] = isAsync ?\n            async function (interpreter, code, ...args) {\n                if (before) await before.call(this, patched(interpreter), ref);\n                const result = await method.call(\n                    this,\n                    interpreter,\n                    code,\n                    ...args\n                );\n                if (after) await after.call(this, patched(interpreter), ref);\n                return result;\n            } :\n            function (interpreter, code, ...args) {\n                if (before) before.call(this, patched(interpreter), ref);\n                const result = method.call(this, interpreter, code, ...args);\n                if (after) after.call(this, patched(interpreter), ref);\n                return result;\n            }\n        ;\n    }\n};\n/* c8 ignore stop */\n","import toJSONCallback from 'to-json-callback';\n\nimport { dedent } from '../utils.js';\nimport { js as jsHooks, code as codeHooks } from '../hooks.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default class Hook {\n    constructor(interpreter, hooks = {}) {\n        const { main, worker } = hooks;\n        this.interpreter = interpreter;\n        this.onWorker = main?.onWorker;\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1))\n            this[key] = worker?.[key];\n        for (const key of codeHooks)\n            this[key] = worker?.[key];\n    }\n    toJSON() {\n        const hooks = {};\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1)) {\n            if (this[key]) hooks[key] = toJSONCallback(this[key]);\n        }\n        // code related: exclude `onReady` callback\n        for (const key of codeHooks) {\n            if (this[key]) hooks[key] = dedent(this[key]());\n        }\n        return hooks;\n    }\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport xworker from './xworker.js';\nimport { getConfigURLAndType } from '../loader.js';\nimport { assign, create, defineProperties, importCSS, importJS } from '../utils.js';\nimport Hook from './hook.js';\n\n/**\n * @typedef {Object} WorkerOptions custom configuration\n * @prop {string} type the interpreter type to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string | object} [config] the optional config to use within such interpreter\n * @prop {string} [configURL] the optional configURL used to resolve config entries\n * @prop {string} [serviceWorker] the optional Service Worker for SharedArrayBuffer fallback\n * @prop {string} [service_worker] alias for `serviceWorker`\n */\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default (...args) =>\n    /**\n     * A XWorker is a Worker facade able to bootstrap a channel with any desired interpreter.\n     * @param {string} url the remote file to evaluate on bootstrap\n     * @param {WorkerOptions} [options] optional arguments to define the interpreter to use\n     * @returns {Worker}\n     */\n    function XWorker(url, options) {\n        if (args.length) {\n            const [type, version] = args;\n            options = assign({}, options || { type, version });\n            if (!options.type) options.type = type;\n        }\n\n        // provide a base url to fetch or load config files from a Worker\n        // because there's no location at all in the Worker as it's embedded.\n        // fallback to a generic, ignored, config.txt file to still provide a URL.\n        const [ config ] = getConfigURLAndType(options.config, options.configURL);\n\n        const serviceWorker = options?.serviceWorker || options?.service_worker;\n        const worker = xworker({ serviceWorker });\n        const { postMessage } = worker;\n        const isHook = this instanceof Hook;\n\n        const sync = assign(\n            worker.proxy,\n            { importJS, importCSS },\n        );\n\n        const resolver = Promise.withResolvers();\n\n        let bootstrap = fetch(url)\n            .text()\n            .then(code => {\n                const hooks = isHook ? this.toJSON() : void 0;\n                postMessage.call(worker, { options, config, code, hooks });\n            })\n            .then(() => {\n                // boost postMessage performance\n                bootstrap = { then: fn => fn() };\n            });\n\n        defineProperties(worker, {\n            sync: { value: sync },\n            ready: { value: resolver.promise },\n            postMessage: {\n                value: (data, ...rest) => bootstrap.then(\n                    () => postMessage.call(worker, data, ...rest),\n                ),\n            },\n            onerror: {\n                writable: true,\n                configurable: true,\n                value: console.error\n            }\n        });\n\n        worker.addEventListener('message', event => {\n            const { data } = event;\n            const isError = data instanceof Error;\n            if (isError || data === 'polyscript:done') {\n                event.stopImmediatePropagation();\n                if (isError) {\n                    resolver.reject(data);\n                    worker.onerror(create(event, {\n                        type: { value: 'error' },\n                        error: { value: data }\n                    }));\n                }\n                else resolver.resolve(worker);\n            }\n        });\n\n        if (isHook) this.onWorker?.(this.interpreter, worker);\n\n        return worker;\n    };\n\n/* c8 ignore stop */","export const INVALID_CONTENT = 'Invalid content';\nexport const INVALID_SRC_ATTR = 'Invalid worker attribute';\nexport const INVALID_WORKER_ATTR = 'Invalid worker attribute';\n","import { INVALID_CONTENT, INVALID_SRC_ATTR, INVALID_WORKER_ATTR } from '../errors.js';\n\nimport { dedent, unescape } from '../utils.js';\n\nconst hasCommentsOnly = text => !text\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n    .replace(/^\\s*(?:\\/\\/|#).*/gm, '')\n    .trim()\n;\n\n/* c8 ignore start */ // tested via integration\nexport default element => {\n  const { src, worker } = element.attributes;\n  if (worker) {\n      let { value } = worker;\n      // throw on worker values as ambiguous\n      // @see https://github.com/pyscript/polyscript/issues/43\n      if (value) throw new SyntaxError(INVALID_WORKER_ATTR);\n      value = src?.value;\n      if (!value) {\n          // throw on empty src attributes\n          if (src) throw new SyntaxError(INVALID_SRC_ATTR);\n          if (!element.childElementCount)\n              value = element.textContent;\n          else {\n              const { innerHTML, localName, type } = element;\n              const name = type || localName.replace(/-script$/, '');\n              value = unescape(innerHTML);\n              console.warn(\n                  `Deprecated: use <script type=\"${name}\"> for an always safe content parsing:\\n`,\n                  value,\n              );\n          }\n\n          const url = URL.createObjectURL(new Blob([dedent(value)], { type: 'text/plain' }));\n          // TODO: should we really clean up this? debugging non-existent resources\n          //       at distance might be very problematic if the url is revoked.\n          // setTimeout(URL.revokeObjectURL, 5000, url);\n          return url;\n      }\n      return value;\n  }\n  // validate ambiguous cases with src and not empty/commented content\n  if (src && !hasCommentsOnly(element.textContent))\n    throw new SyntaxError(INVALID_CONTENT);\n};\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport { $ } from 'basic-devtools';\n\nimport { workers, workersHandler } from './workers.js';\nimport $xworker from './worker/class.js';\nimport workerURL from './worker/url.js';\nimport { getRuntime, getRuntimeID } from './loader.js';\nimport { registry } from './interpreters.js';\nimport { JSModules, all, dispatch, resolve, defineProperty, nodeInfo, registerJSModules } from './utils.js';\n\nconst getRoot = (script) => {\n    let parent = script;\n    while (parent.parentNode) parent = parent.parentNode;\n    return parent;\n};\n\nexport const queryTarget = (script, idOrSelector) => {\n    const root = getRoot(script);\n    return root.getElementById(idOrSelector) || $(idOrSelector, root);\n};\n\nconst targets = new WeakMap();\nconst targetDescriptor = {\n    get() {\n        let target = targets.get(this);\n        if (!target) {\n            target = document.createElement(`${this.type}-script`);\n            targets.set(this, target);\n            handle(this);\n        }\n        return target;\n    },\n    set(target) {\n        if (typeof target === 'string')\n            targets.set(this, queryTarget(this, target));\n        else {\n            targets.set(this, target);\n            handle(this);\n        }\n    },\n};\n\nconst handled = new WeakMap();\n\nexport const interpreters = new Map();\n\nconst execute = async (currentScript, source, XWorker, isAsync) => {\n    const { type } = currentScript;\n    const module = registry.get(type);\n    /* c8 ignore start */\n    if (module.experimental)\n        console.warn(`The ${type} interpreter is experimental`);\n    const [interpreter, content] = await all([\n        handled.get(currentScript).interpreter,\n        source,\n    ]);\n    try {\n        // temporarily override inherited document.currentScript in a non writable way\n        // but it deletes it right after to preserve native behavior (as it's sync: no trouble)\n        defineProperty(document, 'currentScript', {\n            configurable: true,\n            get: () => currentScript,\n        });\n        registerJSModules(type, module, interpreter, JSModules);\n        module.registerJSModule(interpreter, 'polyscript', {\n            XWorker,\n            currentScript,\n            js_modules: JSModules,\n            workers: workersHandler,\n        });\n        dispatch(currentScript, type, 'ready');\n        const result = module[isAsync ? 'runAsync' : 'run'](interpreter, content);\n        const done = dispatch.bind(null, currentScript, type, 'done');\n        if (isAsync) result.then(done);\n        else done();\n        return result;\n    } finally {\n        delete document.currentScript;\n    }\n    /* c8 ignore stop */\n};\n\nconst getValue = (ref, prefix) => {\n    const value = ref?.value;\n    return value ? prefix + value : '';\n};\n\nexport const getDetails = (type, id, name, version, config, configURL, runtime = type) => {\n    if (!interpreters.has(id)) {\n        const details = {\n            interpreter: getRuntime(name, config, configURL),\n            queue: resolve(),\n            XWorker: $xworker(type, version),\n        };\n        interpreters.set(id, details);\n        // enable sane defaults when single interpreter *of kind* is used in the page\n        // this allows `xxx-*` attributes to refer to such interpreter without `env` around\n        /* c8 ignore start *//* this is tested very well in PyScript */\n        if (!interpreters.has(type)) interpreters.set(type, details);\n        if (!interpreters.has(runtime)) interpreters.set(runtime, details);\n        /* c8 ignore stopt */\n    }\n    return interpreters.get(id);\n};\n\n/**\n * @param {HTMLScriptElement} script a special type of <script>\n */\nexport const handle = async (script) => {\n    // known node, move its companion target after\n    // vDOM or other use cases where the script is a tracked element\n    if (handled.has(script)) {\n        const { target } = script;\n        if (target) {\n            // if the script is in the head just append target to the body\n            if (script.closest('head')) document.body.append(target);\n            // in any other case preserve the script position\n            else script.after(target);\n        }\n    }\n    // new script to handle ... allow newly created scripts to work\n    // just exactly like any other script would\n    else {\n        // allow a shared config among scripts, beside interpreter,\n        // and/or source code with different config or interpreter\n        const {\n            attributes: {\n                async: isAsync,\n                config,\n                env,\n                name: wn,\n                target,\n                version,\n                ['service-worker']: sw,\n            },\n            src,\n            type,\n        } = script;\n\n        const versionValue = version?.value;\n        const name = getRuntimeID(type, versionValue);\n        let configValue = getValue(config, '|');\n        const id = getValue(env, '') || `${name}${configValue}`;\n        configValue = configValue.slice(1);\n\n        /* c8 ignore start */\n        const url = workerURL(script);\n        if (url) {\n            const XWorker = $xworker(type, versionValue);\n            const xworker = new XWorker(url, {\n                ...nodeInfo(script, type),\n                async: !!isAsync,\n                config: configValue,\n                serviceWorker: sw?.value,\n            });\n            handled.set(\n                defineProperty(script, 'xworker', { value: xworker }),\n                { xworker },\n            );\n            const workerName = wn?.value;\n            if (workerName) workers[workerName].resolve(xworker.ready);\n            return;\n        }\n        /* c8 ignore stop */\n\n        const targetValue = getValue(target, '');\n        const details = getDetails(type, id, name, versionValue, configValue);\n\n        handled.set(\n            defineProperty(script, 'target', targetDescriptor),\n            details,\n        );\n\n        if (targetValue) targets.set(script, queryTarget(script, targetValue));\n\n        // start fetching external resources ASAP\n        const source = src ? fetch(src).text() : script.textContent;\n        details.queue = details.queue.then(() =>\n            execute(script, source, details.XWorker, !!isAsync),\n        );\n    }\n};\n","import { $x } from 'basic-devtools';\n\nimport { interpreters } from './script-handler.js';\nimport { all, create } from './utils.js';\nimport { registry, prefixes } from './interpreters.js';\n\n/* c8 ignore start */\nexport const env = new Proxy(create(null), {\n    get: (_, name) => new Promise(queueMicrotask).then(\n        () => awaitInterpreter(name)\n    ),\n});\n\n// attributes are tested via integration / e2e\n// ensure both interpreter and its queue are awaited then returns the interpreter\nconst awaitInterpreter = async (key) => {\n    if (interpreters.has(key)) {\n        const { interpreter, queue } = interpreters.get(key);\n        return (await all([interpreter, queue]))[0];\n    }\n\n    const available = interpreters.size\n        ? `Available interpreters are: ${[...interpreters.keys()]\n              .map((r) => `\"${r}\"`)\n              .join(', ')}.`\n        : 'There are no interpreters in this page.';\n\n    throw new Error(`The interpreter \"${key}\" was not found. ${available}`);\n};\n\nexport const listener = async (event) => {\n    const { type, currentTarget } = event;\n    if (!prefixes.length) return;\n    for (let { name, value, ownerElement: el } of $x(\n        `./@*[${prefixes.map((p) => `name()=\"${p}${type}\"`).join(' or ')}]`,\n        currentTarget,\n    )) {\n        name = name.slice(0, -(type.length + 1));\n        const interpreter = await awaitInterpreter(\n            el.getAttribute(`${name}-env`) || name,\n        );\n        const handler = registry.get(name);\n        handler.runEvent(interpreter, value, event);\n    }\n};\n\n/**\n * Look for known prefixes and add related listeners.\n * @param {Document | Element} root\n */\nexport const addAllListeners = (root) => {\n    if (!prefixes.length) return;\n    for (let { name, ownerElement: el } of $x(\n        `.//@*[${prefixes\n            .map((p) => `starts-with(name(),\"${p}\")`)\n            .join(' or ')}]`,\n        root,\n    )) {\n        const i = name.lastIndexOf('-');\n        const type = name.slice(i + 1);\n        if (type !== 'env') {\n            el.addEventListener(type, listener);\n            // automatically disable form controls that are not disabled already\n            if ('disabled' in el && !el.disabled) {\n                el.disabled = true;\n                // set these to enable once the interpreter is known (registered + loaded)\n                env[name.slice(0, i)].then(() => {\n                    el.disabled = false;\n                });\n            }\n        }\n    }\n};\n/* c8 ignore stop */\n","import xworker from './worker/class.js';\nimport Hook from './worker/hook.js';\n\nconst XWorker = xworker();\n\nexport { Hook, XWorker };\n","import '@ungap/with-resolvers';\nimport { $$ } from 'basic-devtools';\n\nimport { JSModules, assign, create, createOverload, createResolved, dedent, defineProperty, nodeInfo, registerJSModules } from './utils.js';\nimport { getDetails } from './script-handler.js';\nimport { registry as defaultRegistry, prefixes, configs } from './interpreters.js';\nimport { getRuntimeID } from './loader.js';\nimport { addAllListeners } from './listeners.js';\nimport { Hook, XWorker as XW } from './xworker.js';\nimport { workers, workersHandler } from './workers.js';\nimport { polluteJS, js as jsHooks, code as codeHooks } from './hooks.js';\nimport workerURL from './worker/url.js';\n\nexport const CUSTOM_SELECTORS = [];\n\nexport const customObserver = new Map();\n\n/**\n * @typedef {Object} Runtime custom configuration\n * @prop {object} interpreter the bootstrapped interpreter\n * @prop {(url:string, options?: object) => Worker} XWorker an XWorker constructor that defaults to same interpreter on the Worker.\n * @prop {object} config a cloned config used to bootstrap the interpreter\n * @prop {(code:string) => any} run an utility to run code within the interpreter\n * @prop {(code:string) => Promise<any>} runAsync an utility to run code asynchronously within the interpreter\n * @prop {(path:string, data:ArrayBuffer) => void} writeFile an utility to write a file in the virtual FS, if available\n */\n\nconst types = new Map();\nconst waitList = new Map();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n/**\n * @param {Element} node any DOM element registered via define.\n */\nexport const handleCustomType = async (node) => {\n    for (const selector of CUSTOM_SELECTORS) {\n        if (node.matches(selector)) {\n            const type = types.get(selector);\n            const details = registry.get(type);\n            const { resolve } = waitList.get(type);\n            const { options, known } = details;\n\n            if (known.has(node)) return;\n            known.add(node);\n\n            for (const [selector, callback] of customObserver) {\n                if (node.matches(selector)) await callback(node);\n            }\n\n            const {\n                interpreter: runtime,\n                configURL,\n                config,\n                version,\n                env,\n                onerror,\n                hooks,\n            } = options;\n\n            let error;\n            try {\n                const worker = workerURL(node);\n                if (worker) {\n                    const xworker = XW.call(new Hook(null, hooks), worker, {\n                        ...nodeInfo(node, type),\n                        version,\n                        configURL,\n                        type: runtime,\n                        custom: type,\n                        config: node.getAttribute('config') || config || {},\n                        async: node.hasAttribute('async'),\n                        serviceWorker: node.getAttribute('service-worker'),\n                    });\n                    defineProperty(node, 'xworker', { value: xworker });\n                    resolve({ type, xworker });\n                    const workerName = node.getAttribute('name');\n                    if (workerName) workers[workerName].resolve(xworker.ready);\n                    return;\n                }\n            }\n            // let the custom type handle errors via its `io`\n            catch (workerError) {\n                error = workerError;\n            }\n\n            const name = getRuntimeID(runtime, version);\n            const id = env || `${name}${config ? `|${config}` : ''}`;\n            const { interpreter: engine, XWorker: Worker } = getDetails(\n                type,\n                id,\n                name,\n                version,\n                config,\n                configURL,\n                runtime\n            );\n\n            const interpreter = await engine;\n\n            const module = create(defaultRegistry.get(runtime));\n\n            const hook = new Hook(interpreter, hooks);\n\n            const XWorker = function XWorker(...args) {\n                return Worker.apply(hook, args);\n            };\n\n            const resolved = {\n                ...createResolved(\n                    module,\n                    type,\n                    structuredClone(configs.get(name)),\n                    interpreter,\n                ),\n                XWorker,\n            };\n\n            registerJSModules(runtime, module, interpreter, JSModules);\n            module.registerJSModule(interpreter, 'polyscript', {\n                XWorker,\n                config: resolved.config,\n                currentScript: type.startsWith('_') ? null : node,\n                js_modules: JSModules,\n                workers: workersHandler,\n            });\n\n            // patch methods accordingly to hooks (and only if needed)\n            for (const suffix of ['Run', 'RunAsync']) {\n                let before = '';\n                let after = '';\n\n                for (const key of codeHooks) {\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('codeBefore'))\n                            before = dedent(value());\n                        else\n                            after = dedent(value());\n                    }\n                }\n\n                if (before || after) {\n                    createOverload(\n                        module,\n                        `r${suffix.slice(1)}`,\n                        before,\n                        after,\n                    );\n                }\n\n                let beforeCB, afterCB;\n                // ignore onReady and onWorker\n                for (let i = 2; i < jsHooks.length; i++) {\n                    const key = jsHooks[i];\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('onBefore'))\n                            beforeCB = value;\n                        else\n                            afterCB = value;\n                    }\n                }\n                polluteJS(module, resolved, node, suffix.endsWith('Async'), beforeCB, afterCB);\n            }\n\n            details.queue = details.queue.then(() => {\n                resolve(resolved);\n                if (error) onerror?.(error, node);\n                return hooks?.main?.onReady?.(resolved, node);\n            });\n        }\n    }\n};\n\n/**\n * @type {Map<string, {options:object, known:WeakSet<Element>}>}\n */\nconst registry = new Map();\n\n/**\n * @typedef {Object} CustomOptions custom configuration\n * @prop {'pyodide' | 'micropython' | 'ruby-wasm-wasi' | 'wasmoon'} interpreter the interpreter to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string} [config] the optional config to use within such interpreter\n */\n\nlet dontBotherCount = 0;\n\n/**\n * Allows custom types and components on the page to receive interpreters to execute any code\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @param {CustomOptions} options the custom type configuration\n */\nexport const define = (type, options) => {\n    // allow no-type to be bootstrapped out of the box\n    let dontBother = type == null;\n\n    if (dontBother)\n        type = `_ps${dontBotherCount++}`;\n    else if (defaultRegistry.has(type) || registry.has(type))\n        throw new Error(`<script type=\"${type}\"> already registered`);\n\n    if (!defaultRegistry.has(options?.interpreter))\n        throw new Error('Unspecified interpreter');\n\n    // allows reaching out the interpreter helpers on events\n    defaultRegistry.set(type, defaultRegistry.get(options.interpreter));\n\n    // allows selector -> registry by type\n    const selectors = [`script[type=\"${type}\"]`];\n\n    // ensure a Promise can resolve once a custom type has been bootstrapped\n    whenDefined(type);\n\n    if (dontBother) {\n        // add a script then cleanup everything once that's ready\n        const { hooks } = options;\n        const onReady = hooks?.main?.onReady;\n        options = {\n            ...options,\n            hooks: {\n                ...hooks,\n                main: {\n                    ...hooks?.main,\n                    onReady(resolved, node) {\n                        CUSTOM_SELECTORS.splice(CUSTOM_SELECTORS.indexOf(type), 1);\n                        defaultRegistry.delete(type);\n                        registry.delete(type);\n                        waitList.delete(type);\n                        node.remove();\n                        onReady?.(resolved);\n                    }\n                }\n            },\n        };\n        document.head.append(\n            assign(document.createElement('script'), { type })\n        );\n    }\n    else {\n        selectors.push(`${type}-script`);\n        prefixes.push(`${type}-`);\n    }\n\n    for (const selector of selectors) types.set(selector, type);\n    CUSTOM_SELECTORS.push(...selectors);\n\n    // ensure always same env for this custom type\n    registry.set(type, {\n        options: assign({ env: type }, options),\n        known: new WeakSet(),\n        queue: Promise.resolve(),\n    });\n\n    if (!dontBother) addAllListeners(document);\n    $$(selectors.join(',')).forEach(handleCustomType);\n};\n\n/**\n * Resolves whenever a defined custom type is bootstrapped on the page\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @returns {Promise<object>}\n */\nexport const whenDefined = (type) => {\n    if (!waitList.has(type)) waitList.set(type, Promise.withResolvers());\n    return waitList.get(type).promise;\n};\n/* c8 ignore stop */\n","/** @typedef {(type: string, options: import(\"./custom.js\").CustomOptions) => void} CustomOptions */\n\nimport stickyModule from 'sticky-module';\nimport { $$ } from 'basic-devtools';\n\nimport { handle } from './script-handler.js';\nimport { assign } from './utils.js';\nimport { selectors, prefixes } from './interpreters.js';\nimport { listener, addAllListeners } from './listeners.js';\n\nimport {\n    CUSTOM_SELECTORS,\n    handleCustomType,\n    customObserver as $customObserver,\n    define as $define,\n    whenDefined as $whenDefined\n} from './custom.js';\n\nimport { env as $env } from './listeners.js';\nimport { Hook as $Hook, XWorker as $XWorker } from './xworker.js';\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        customObserver,\n        define,\n        whenDefined,\n        env,\n        Hook,\n        XWorker\n    },\n    alreadyLive\n] = stickyModule(\n    'polyscript',\n    {\n        customObserver: $customObserver,\n        define: $define,\n        whenDefined: $whenDefined,\n        env: $env,\n        Hook: $Hook,\n        XWorker: $XWorker\n    }\n);\n\nexport {\n    customObserver,\n    define,\n    whenDefined,\n    env,\n    Hook,\n    XWorker\n};\n\nexport * from './errors.js';\n\n\nif (!alreadyLive) {\n    const mo = new MutationObserver((records) => {\n        const selector = selectors.join(',');\n        for (const { type, target, attributeName, addedNodes } of records) {\n            // attributes are tested via integration / e2e\n            /* c8 ignore start */\n            if (type === 'attributes') {\n                const i = attributeName.lastIndexOf('-') + 1;\n                if (i) {\n                    const prefix = attributeName.slice(0, i);\n                    for (const p of prefixes) {\n                        if (prefix === p) {\n                            const type = attributeName.slice(i);\n                            if (type !== 'env') {\n                                const method = target.hasAttribute(attributeName)\n                                    ? 'add'\n                                    : 'remove';\n                                target[`${method}EventListener`](type, listener);\n                            }\n                            break;\n                        }\n                    }\n                }\n                continue;\n            }\n            for (const node of addedNodes) {\n                if (node.nodeType === 1) {\n                    addAllListeners(node);\n                    if (selector && node.matches(selector)) handle(node);\n                    else bootstrap(selector, node, true);\n                }\n            }\n            /* c8 ignore stop */\n        }\n    });\n\n    /* c8 ignore start */\n    const bootstrap = (selector, node, shouldHandle) => {\n        if (selector) $$(selector, node).forEach(handle);\n        selector = CUSTOM_SELECTORS.join(',');\n        if (selector) {\n            if (shouldHandle) handleCustomType(node);\n            $$(selector, node).forEach(handleCustomType);\n        }\n    };\n    /* c8 ignore stop */\n\n    const observe = (root) => {\n        mo.observe(root, { childList: true, subtree: true, attributes: true });\n        return root;\n    };\n\n    const { attachShadow } = Element.prototype;\n    assign(Element.prototype, {\n        attachShadow(init) {\n            return observe(attachShadow.call(this, init));\n        },\n    });\n\n    // give 3rd party a chance to apply changes before this happens\n    queueMicrotask(() => {\n        addAllListeners(observe(document));\n        bootstrap(selectors.join(','), document, false);\n    });\n\n}\n","export default new Map([\n    [\"py\", \"pyodide\"],\n    [\"mpy\", \"micropython\"],\n]);\n","import TYPES from \"./types.js\";\n\nconst waitForIt = [];\n\nfor (const [TYPE] of TYPES) {\n    const selectors = [`script[type=\"${TYPE}\"]`, `${TYPE}-script`];\n    for (const element of document.querySelectorAll(selectors.join(\",\"))) {\n        const { promise, resolve } = Promise.withResolvers();\n        waitForIt.push(promise);\n        element.addEventListener(`${TYPE}:done`, resolve, { once: true });\n    }\n}\n\n// wait for all the things then cleanup\nPromise.all(waitForIt).then(() => {\n    dispatchEvent(new Event(\"py:all-done\"));\n});\n","// ⚠️ This file is an artifact: DO NOT MODIFY\nexport default {\n    [\"deprecations-manager\"]: () => import(/* webpackIgnore: true */ \"./plugins/deprecations-manager.js\"),\n    error: () => import(/* webpackIgnore: true */ \"./plugins/error.js\"),\n    [\"py-editor\"]: () => import(/* webpackIgnore: true */ \"./plugins/py-editor.js\"),\n    [\"py-terminal\"]: () => import(/* webpackIgnore: true */ \"./plugins/py-terminal.js\"),\n};\n","import { assign } from \"polyscript/exports\";\n\nconst CLOSEBUTTON =\n    \"<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='currentColor' width='12px'><path d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/></svg>\";\n\n/**\n * These error codes are used to identify the type of error that occurred.\n * @see https://pyscript.github.io/docs/latest/reference/exceptions.html?highlight=errors\n */\nexport const ErrorCode = {\n    GENERIC: \"PY0000\", // Use this only for development then change to a more specific error code\n    CONFLICTING_CODE: \"PY0409\",\n    BAD_CONFIG: \"PY1000\",\n    MICROPIP_INSTALL_ERROR: \"PY1001\",\n    BAD_PLUGIN_FILE_EXTENSION: \"PY2000\",\n    NO_DEFAULT_EXPORT: \"PY2001\",\n    TOP_LEVEL_AWAIT: \"PY9000\",\n    // Currently these are created depending on error code received from fetching\n    FETCH_ERROR: \"PY0001\",\n    FETCH_NAME_ERROR: \"PY0002\",\n    FETCH_UNAUTHORIZED_ERROR: \"PY0401\",\n    FETCH_FORBIDDEN_ERROR: \"PY0403\",\n    FETCH_NOT_FOUND_ERROR: \"PY0404\",\n    FETCH_SERVER_ERROR: \"PY0500\",\n    FETCH_UNAVAILABLE_ERROR: \"PY0503\",\n};\n\n/**\n * Keys of the ErrorCode object\n * @typedef {keyof ErrorCode} ErrorCodes\n * */\n\nexport class UserError extends Error {\n    /**\n     * @param {ErrorCodes} errorCode\n     * @param {string} message\n     * @param {string} messageType\n     * */\n    constructor(errorCode, message = \"\", messageType = \"text\") {\n        super(`(${errorCode}): ${message}`);\n        this.errorCode = errorCode;\n        this.messageType = messageType;\n        this.name = \"UserError\";\n    }\n}\n\nexport class FetchError extends UserError {\n    /**\n     * @param {ErrorCodes} errorCode\n     * @param {string} message\n     * */\n    constructor(errorCode, message) {\n        super(errorCode, message);\n        this.name = \"FetchError\";\n    }\n}\n\nexport class InstallError extends UserError {\n    /**\n     * @param {ErrorCodes} errorCode\n     * @param {string} message\n     * */\n    constructor(errorCode, message) {\n        super(errorCode, message);\n        this.name = \"InstallError\";\n    }\n}\n\n/**\n * Internal function for creating alert banners on the page\n * @param {string} message The message to be displayed to the user\n * @param {string} level The alert level of the message. Can be any string; 'error' or 'warning' cause matching messages to be emitted to the console\n * @param {string} [messageType=\"text\"] If set to \"html\", the message content will be assigned to the banner's innerHTML directly, instead of its textContent\n * @param {any} [logMessage=true] An additional flag for whether the message should be sent to the console log.\n */\nexport function _createAlertBanner(\n    message,\n    level,\n    messageType = \"text\",\n    logMessage = true,\n) {\n    switch (`log-${level}-${logMessage}`) {\n        case \"log-error-true\":\n            console.error(message);\n            break;\n        case \"log-warning-true\":\n            console.warn(message);\n            break;\n    }\n\n    const content = messageType === \"html\" ? \"innerHTML\" : \"textContent\";\n    const banner = assign(document.createElement(\"div\"), {\n        className: `alert-banner py-${level}`,\n        [content]: message,\n    });\n\n    if (level === \"warning\") {\n        const closeButton = assign(document.createElement(\"button\"), {\n            id: \"alert-close-button\",\n            innerHTML: CLOSEBUTTON,\n        });\n\n        banner.appendChild(closeButton).addEventListener(\"click\", () => {\n            banner.remove();\n        });\n    }\n\n    document.body.prepend(banner);\n}\n","import { FetchError, ErrorCode } from \"./exceptions.js\";\n\n/**\n * @param {Response} response\n * @returns\n */\nexport const getText = (response) => response.text();\n\n/**\n * This is a fetch wrapper that handles any non 200 responses and throws a\n * FetchError with the right ErrorCode. This is useful because our FetchError\n * will automatically create an alert banner.\n *\n * @param {string} url - URL to fetch\n * @param {Request} [options] - options to pass to fetch\n * @returns {Promise<Response>}\n */\nexport async function robustFetch(url, options) {\n    let response;\n\n    // Note: We need to wrap fetch into a try/catch block because fetch\n    // throws a TypeError if the URL is invalid such as http://blah.blah\n    try {\n        response = await fetch(url, options);\n    } catch (err) {\n        const error = err;\n        let errMsg;\n        if (url.startsWith(\"http\")) {\n            errMsg =\n                `Fetching from URL ${url} failed with error ` +\n                `'${error.message}'. Are your filename and path correct?`;\n        } else {\n            errMsg = `Polyscript: Access to local files\n        (using [[fetch]] configurations in &lt;py-config&gt;)\n        is not available when directly opening a HTML file;\n        you must use a webserver to serve the additional files.\n        See <a style=\"text-decoration: underline;\" href=\"https://github.com/pyscript/pyscript/issues/257#issuecomment-1119595062\">this reference</a>\n        on starting a simple webserver with Python.\n            `;\n        }\n        throw new FetchError(ErrorCode.FETCH_ERROR, errMsg);\n    }\n\n    // Note that response.ok is true for 200-299 responses\n    if (!response.ok) {\n        const errorMsg = `Fetching from URL ${url} failed with error ${response.status} (${response.statusText}). Are your filename and path correct?`;\n        switch (response.status) {\n            case 404:\n                throw new FetchError(ErrorCode.FETCH_NOT_FOUND_ERROR, errorMsg);\n            case 401:\n                throw new FetchError(\n                    ErrorCode.FETCH_UNAUTHORIZED_ERROR,\n                    errorMsg,\n                );\n            case 403:\n                throw new FetchError(ErrorCode.FETCH_FORBIDDEN_ERROR, errorMsg);\n            case 500:\n                throw new FetchError(ErrorCode.FETCH_SERVER_ERROR, errorMsg);\n            case 503:\n                throw new FetchError(\n                    ErrorCode.FETCH_UNAVAILABLE_ERROR,\n                    errorMsg,\n                );\n            default:\n                throw new FetchError(ErrorCode.FETCH_ERROR, errorMsg);\n        }\n    }\n    return response;\n}\n","/**\n * This file parses a generic <py-config> or config attribute\n * to use as base config for all py-script elements, importing\n * also a queue of plugins *before* the interpreter (if any) resolves.\n */\nimport { $$ } from \"basic-devtools\";\n\nimport TYPES from \"./types.js\";\nimport allPlugins from \"./plugins.js\";\nimport { robustFetch as fetch, getText } from \"./fetch.js\";\nimport { ErrorCode } from \"./exceptions.js\";\n\nconst { BAD_CONFIG, CONFLICTING_CODE } = ErrorCode;\n\nconst badURL = (url, expected = \"\") => {\n    let message = `(${BAD_CONFIG}): Invalid URL: ${url}`;\n    if (expected) message += `\\nexpected ${expected} content`;\n    throw new Error(message);\n};\n\n/**\n * Given a string, returns its trimmed content as text,\n * fetching it from a file if the content is a URL.\n * @param {string} config either JSON, TOML, or a file to fetch\n * @param {string?} type the optional type to enforce\n * @returns {{json: boolean, toml: boolean, text: string}}\n */\nconst configDetails = async (config, type) => {\n    let text = config?.trim();\n    // we only support an object as root config\n    let url = \"\",\n        toml = false,\n        json = /^{/.test(text) && /}$/.test(text);\n    // handle files by extension (relaxing urls parts after)\n    if (!json && /\\.(\\w+)(?:\\?\\S*)?$/.test(text)) {\n        const ext = RegExp.$1;\n        if (ext === \"json\" && type !== \"toml\") json = true;\n        else if (ext === \"toml\" && type !== \"json\") toml = true;\n        else badURL(text, type);\n        url = text;\n        text = (await fetch(url).then(getText)).trim();\n    }\n    return { json, toml: toml || (!json && !!text), text, url };\n};\n\nconst conflictError = (reason) => new Error(`(${CONFLICTING_CODE}): ${reason}`);\n\nconst relative_url = (url, base = location.href) => new URL(url, base).href;\n\nconst syntaxError = (type, url, { message }) => {\n    let str = `(${BAD_CONFIG}): Invalid ${type}`;\n    if (url) str += ` @ ${url}`;\n    return new SyntaxError(`${str}\\n${message}`);\n};\n\nconst configs = new Map();\n\nfor (const [TYPE] of TYPES) {\n    /** @type {Promise<[...any]>} A Promise wrapping any plugins which should be loaded. */\n    let plugins;\n\n    /** @type {any} The PyScript configuration parsed from the JSON or TOML object*. May be any of the return types of JSON.parse() or toml-j0.4's parse() ( {number | string | boolean | null | object | Array} ) */\n    let parsed;\n\n    /** @type {Error | undefined} The error thrown when parsing the PyScript config, if any.*/\n    let error;\n\n    /** @type {string | undefined} The `configURL` field to normalize all config operations as opposite of guessing it once resolved */\n    let configURL;\n\n    let config,\n        type,\n        pyElement,\n        pyConfigs = $$(`${TYPE}-config`),\n        attrConfigs = $$(\n            [\n                `script[type=\"${TYPE}\"][config]:not([worker])`,\n                `${TYPE}-script[config]:not([worker])`,\n            ].join(\",\"),\n        );\n\n    // throw an error if there are multiple <py-config> or <mpy-config>\n    if (pyConfigs.length > 1) {\n        error = conflictError(`Too many ${TYPE}-config`);\n    } else {\n        // throw an error if there are <x-config> and config=\"x\" attributes\n        if (pyConfigs.length && attrConfigs.length) {\n            error = conflictError(\n                `Ambiguous ${TYPE}-config VS config attribute`,\n            );\n        } else if (pyConfigs.length) {\n            [pyElement] = pyConfigs;\n            config = pyElement.getAttribute(\"src\") || pyElement.textContent;\n            type = pyElement.getAttribute(\"type\");\n        } else if (attrConfigs.length) {\n            [pyElement, ...attrConfigs] = attrConfigs;\n            config = pyElement.getAttribute(\"config\");\n            // throw an error if dirrent scripts use different configs\n            if (\n                attrConfigs.some((el) => el.getAttribute(\"config\") !== config)\n            ) {\n                error = conflictError(\n                    \"Unable to use different configs on main\",\n                );\n            }\n        }\n    }\n\n    // catch possible fetch errors\n    if (!error && config) {\n        try {\n            const { json, toml, text, url } = await configDetails(config, type);\n            if (url) configURL = relative_url(url);\n            config = text;\n            if (json || type === \"json\") {\n                try {\n                    parsed = JSON.parse(text);\n                } catch (e) {\n                    error = syntaxError(\"JSON\", url, e);\n                }\n            } else if (toml || type === \"toml\") {\n                try {\n                    const { parse } = await import(\n                        /* webpackIgnore: true */ \"./3rd-party/toml.js\"\n                    );\n                    parsed = parse(text);\n                } catch (e) {\n                    error = syntaxError(\"TOML\", url, e);\n                }\n            }\n        } catch (e) {\n            error = e;\n        }\n    }\n\n    // parse all plugins and optionally ignore only\n    // those flagged as \"undesired\" via `!` prefix\n    const toBeAwaited = [];\n    for (const [key, value] of Object.entries(allPlugins)) {\n        if (error) {\n            if (key === \"error\") {\n                // show on page the config is broken, meaning that\n                // it was not possible to disable error plugin neither\n                // as that part wasn't correctly parsed anyway\n                value().then(({ notify }) => notify(error.message));\n            }\n        } else if (!parsed?.plugins?.includes(`!${key}`)) {\n            toBeAwaited.push(value().then(({ default: p }) => p));\n        }\n    }\n\n    // assign plugins as Promise.all only if needed\n    plugins = Promise.all(toBeAwaited);\n\n    configs.set(TYPE, { config: parsed, configURL, plugins, error });\n}\n\nexport { configs, relative_url };\n","export default {\n    // allow pyterminal checks to bootstrap\n    is_pyterminal: () => false,\n\n    /**\n     * 'Sleep' for the given number of seconds. Used to implement Python's time.sleep in Worker threads.\n     * @param {number} seconds The number of seconds to sleep.\n     */\n    sleep(seconds) {\n        return new Promise(($) => setTimeout($, seconds * 1000));\n    },\n};\n","import { defineProperty } from \"polyscript/exports\";\n\n// helper for all script[type=\"py\"] out there\nconst before = (script) => {\n    defineProperty(document, \"currentScript\", {\n        configurable: true,\n        get: () => script,\n    });\n};\n\nconst after = () => {\n    delete document.currentScript;\n};\n\n// common life-cycle handlers for any node\nexport default async (main, wrap, element, hook) => {\n    const isAsync = hook.endsWith(\"Async\");\n    const isBefore = hook.startsWith(\"onBefore\");\n    // make it possible to reach the current target node via Python\n    // or clean up for other scripts executing around this one\n    (isBefore ? before : after)(element);\n    for (const fn of main(hook)) {\n        if (isAsync) await fn(wrap, element);\n        else fn(wrap, element);\n    }\n};\n","const any = () => true;\nconst error = message => {\n  throw new TypeError(message);\n};\n\nconst validator = (type, Class) => {\n  const checks = [];\n  if (type) {\n    for (const t of type.split(/\\s*\\|\\s*/)) {\n      if (t === 'object')\n        checks.push(v => v !== null && typeof v === t);\n      else if (t === 'null')\n        checks.push(v => v === null);\n      else\n        checks.push(v => typeof v === t);\n    }\n  }\n  if (Class) {\n    for (const C of [].concat(Class))\n      checks.push(o => o instanceof C);\n  }\n  switch (checks.length) {\n    case 0: return any;\n    case 1: return checks[0];\n    default: return v => checks.some(f => f(v));\n  }\n};\n\nconst failure = (type, Class, kind, onerror = error) => value => {\n  const message = [`Invalid ${typeof value} ${kind}: expected `];\n  if (type) {\n    message.push(type);\n    if (Class) message.push(' or ');\n  }\n  if (Class) {\n    message.push('an instanceof ');\n    message.push([].concat(Class).map(({name}) => name).join(' | '));\n  }\n  onerror(message.join(''), value);\n};\n\nconst checkFail = (options, kind = 'value') => {\n  const type = options?.typeof;\n  const Class = options?.instanceof;\n  return [\n    validator(type, Class),\n    failure(type, Class, kind, options?.onerror)\n  ];\n};\n\nconst createSet = Set => options => {\n  const [check, fail] = checkFail(options);\n  return class TypedSet extends Set {\n    add(value) {\n      return check(value) ? super.add(value) : fail(value);\n    }\n  };\n};\n\nexport const typedSet = createSet(Set);\nexport const typedWeakSet = createSet(WeakSet);\n\nconst createMap = Map => ([keyOptions, valueOptions]) => {\n  const [checkKey, failKey] = checkFail(keyOptions, 'key');\n  const [checkValue, failValue] = checkFail(valueOptions);\n  return class TypedMap extends Map {\n    set(key, value) {\n      if (!checkKey(key)) failKey(key);\n      if (!checkValue(value)) failValue(value);\n      return super.set(key, value);\n    }\n  };\n};\n\nexport const typedMap = createMap(Map);\nexport const typedWeakMap = createMap(WeakMap);\n","/**\n * Create through Python the pyscript module through\n * the artifact generated at build time.\n * This the returned value is a string that must be used\n * either before a worker execute code or when the module\n * is registered on the main thread.\n */\n\nimport pyscript from \"./stdlib/pyscript.js\";\n\nclass Ignore extends Array {\n    #add = false;\n    #paths;\n    #array;\n    constructor(array, ...paths) {\n        super();\n        this.#array = array;\n        this.#paths = paths;\n    }\n    push(...values) {\n        if (this.#add) super.push(...values);\n        return this.#array.push(...values);\n    }\n    path(path) {\n        for (const _path of this.#paths) {\n            // bails out at the first `true` value\n            if ((this.#add = path.startsWith(_path))) break;\n        }\n    }\n}\n\nconst { entries } = Object;\n\nconst python = [\n    \"import os as _os\",\n    \"from pathlib import Path as _Path\",\n    \"_path = None\",\n];\n\nconst ignore = new Ignore(python, \"-\");\n\nconst write = (base, literal) => {\n    for (const [key, value] of entries(literal)) {\n        ignore.path(`${base}/${key}`);\n        ignore.push(`_path = _Path(\"${base}/${key}\")`);\n        if (typeof value === \"string\") {\n            const code = JSON.stringify(value);\n            ignore.push(`_path.write_text(${code},encoding=\"utf-8\")`);\n        } else {\n            // @see https://github.com/pyscript/pyscript/pull/1813#issuecomment-1781502909\n            ignore.push(`if not _os.path.exists(\"${base}/${key}\"):`);\n            ignore.push(\"    _path.mkdir(parents=True, exist_ok=True)\");\n            write(`${base}/${key}`, value);\n        }\n    }\n};\n\nwrite(\".\", pyscript);\n\n// in order to fix js.document in the Worker case\n// we need to bootstrap pyscript module ASAP\npython.push(\"import pyscript as _pyscript\");\n\npython.push(\n    ...[\"_Path\", \"_path\", \"_os\", \"_pyscript\"].map((ref) => `del ${ref}`),\n);\npython.push(\"\\n\");\n\nexport const stdlib = python.join(\"\\n\");\nexport const optional = ignore.join(\"\\n\");\n","// ⚠️ This file is an artifact: DO NOT MODIFY\nexport default {\n  \"pyscript\": {\n    \"__init__.py\": \"# Some notes about the naming conventions and the relationship between various\\n# similar-but-different names.\\n#\\n# import pyscript\\n#     this package contains the main user-facing API offered by pyscript. All\\n#     the names which are supposed be used by end users should be made\\n#     available in pyscript/__init__.py (i.e., this file)\\n#\\n# import _pyscript\\n#     this is an internal module implemented in JS. It is used internally by\\n#     the pyscript package, end users should not use it directly. For its\\n#     implementation, grep for `interpreter.registerJsModule(\\\"_pyscript\\\",\\n#     ...)` in core.js\\n#\\n# import js\\n#     this is the JS globalThis, as exported by pyodide and/or micropython's\\n#     FFIs. As such, it contains different things in the main thread or in a\\n#     worker.\\n#\\n# import pyscript.magic_js\\n#     this submodule abstracts away some of the differences between the main\\n#     thread and the worker. In particular, it defines `window` and `document`\\n#     in such a way that these names work in both cases: in the main thread,\\n#     they are the \\\"real\\\" objects, in the worker they are proxies which work\\n#     thanks to coincident.\\n#\\n# from pyscript import window, document\\n#     these are just the window and document objects as defined by\\n#     pyscript.magic_js. This is the blessed way to access them from pyscript,\\n#     as it works transparently in both the main thread and worker cases.\\n\\nfrom polyscript import lazy_py_modules as py_import\\nfrom pyscript.display import HTML, display\\nfrom pyscript.fetch import fetch\\nfrom pyscript.magic_js import (\\n    RUNNING_IN_WORKER,\\n    PyWorker,\\n    config,\\n    current_target,\\n    document,\\n    js_import,\\n    js_modules,\\n    sync,\\n    window,\\n)\\nfrom pyscript.storage import Storage, storage\\nfrom pyscript.websocket import WebSocket\\n\\nif not RUNNING_IN_WORKER:\\n    from pyscript.workers import create_named_worker, workers\\n\\ntry:\\n    from pyscript.event_handling import when\\nexcept:\\n    # TODO: should we remove this? Or at the very least, we should capture\\n    # the traceback otherwise it's very hard to debug\\n    from pyscript.util import NotSupported\\n\\n    when = NotSupported(\\n        \\\"pyscript.when\\\", \\\"pyscript.when currently not available with this interpreter\\\"\\n    )\\n\",\n    \"display.py\": \"import base64\\nimport html\\nimport io\\nimport re\\n\\nfrom pyscript.magic_js import current_target, document, window\\n\\n_MIME_METHODS = {\\n    \\\"savefig\\\": \\\"image/png\\\",\\n    \\\"_repr_javascript_\\\": \\\"application/javascript\\\",\\n    \\\"_repr_json_\\\": \\\"application/json\\\",\\n    \\\"_repr_latex\\\": \\\"text/latex\\\",\\n    \\\"_repr_png_\\\": \\\"image/png\\\",\\n    \\\"_repr_jpeg_\\\": \\\"image/jpeg\\\",\\n    \\\"_repr_pdf_\\\": \\\"application/pdf\\\",\\n    \\\"_repr_svg_\\\": \\\"image/svg+xml\\\",\\n    \\\"_repr_markdown_\\\": \\\"text/markdown\\\",\\n    \\\"_repr_html_\\\": \\\"text/html\\\",\\n    \\\"__repr__\\\": \\\"text/plain\\\",\\n}\\n\\n\\ndef _render_image(mime, value, meta):\\n    # If the image value is using bytes we should convert it to base64\\n    # otherwise it will return raw bytes and the browser will not be able to\\n    # render it.\\n    if isinstance(value, bytes):\\n        value = base64.b64encode(value).decode(\\\"utf-8\\\")\\n\\n    # This is the pattern of base64 strings\\n    base64_pattern = re.compile(\\n        r\\\"^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$\\\"\\n    )\\n    # If value doesn't match the base64 pattern we should encode it to base64\\n    if len(value) > 0 and not base64_pattern.match(value):\\n        value = base64.b64encode(value.encode(\\\"utf-8\\\")).decode(\\\"utf-8\\\")\\n\\n    data = f\\\"data:{mime};charset=utf-8;base64,{value}\\\"\\n    attrs = \\\" \\\".join(['{k}=\\\"{v}\\\"' for k, v in meta.items()])\\n    return f'<img src=\\\"{data}\\\" {attrs}></img>'\\n\\n\\ndef _identity(value, meta):\\n    return value\\n\\n\\n_MIME_RENDERERS = {\\n    \\\"text/plain\\\": html.escape,\\n    \\\"text/html\\\": _identity,\\n    \\\"image/png\\\": lambda value, meta: _render_image(\\\"image/png\\\", value, meta),\\n    \\\"image/jpeg\\\": lambda value, meta: _render_image(\\\"image/jpeg\\\", value, meta),\\n    \\\"image/svg+xml\\\": _identity,\\n    \\\"application/json\\\": _identity,\\n    \\\"application/javascript\\\": lambda value, meta: f\\\"<script>{value}<\\\\\\\\/script>\\\",\\n}\\n\\n\\nclass HTML:\\n    \\\"\\\"\\\"\\n    Wrap a string so that display() can render it as plain HTML\\n    \\\"\\\"\\\"\\n\\n    def __init__(self, html):\\n        self._html = html\\n\\n    def _repr_html_(self):\\n        return self._html\\n\\n\\ndef _eval_formatter(obj, print_method):\\n    \\\"\\\"\\\"\\n    Evaluates a formatter method.\\n    \\\"\\\"\\\"\\n    if print_method == \\\"__repr__\\\":\\n        return repr(obj)\\n    elif hasattr(obj, print_method):\\n        if print_method == \\\"savefig\\\":\\n            buf = io.BytesIO()\\n            obj.savefig(buf, format=\\\"png\\\")\\n            buf.seek(0)\\n            return base64.b64encode(buf.read()).decode(\\\"utf-8\\\")\\n        return getattr(obj, print_method)()\\n    elif print_method == \\\"_repr_mimebundle_\\\":\\n        return {}, {}\\n    return None\\n\\n\\ndef _format_mime(obj):\\n    \\\"\\\"\\\"\\n    Formats object using _repr_x_ methods.\\n    \\\"\\\"\\\"\\n    if isinstance(obj, str):\\n        return html.escape(obj), \\\"text/plain\\\"\\n\\n    mimebundle = _eval_formatter(obj, \\\"_repr_mimebundle_\\\")\\n    if isinstance(mimebundle, tuple):\\n        format_dict, _ = mimebundle\\n    else:\\n        format_dict = mimebundle\\n\\n    output, not_available = None, []\\n    for method, mime_type in _MIME_METHODS.items():\\n        if mime_type in format_dict:\\n            output = format_dict[mime_type]\\n        else:\\n            output = _eval_formatter(obj, method)\\n\\n        if output is None:\\n            continue\\n        elif mime_type not in _MIME_RENDERERS:\\n            not_available.append(mime_type)\\n            continue\\n        break\\n    if output is None:\\n        if not_available:\\n            window.console.warn(\\n                f\\\"Rendered object requested unavailable MIME renderers: {not_available}\\\"\\n            )\\n        output = repr(output)\\n        mime_type = \\\"text/plain\\\"\\n    elif isinstance(output, tuple):\\n        output, meta = output\\n    else:\\n        meta = {}\\n    return _MIME_RENDERERS[mime_type](output, meta), mime_type\\n\\n\\ndef _write(element, value, append=False):\\n    html, mime_type = _format_mime(value)\\n    if html == \\\"\\\\\\\\n\\\":\\n        return\\n\\n    if append:\\n        out_element = document.createElement(\\\"div\\\")\\n        element.append(out_element)\\n    else:\\n        out_element = element.lastElementChild\\n        if out_element is None:\\n            out_element = element\\n\\n    if mime_type in (\\\"application/javascript\\\", \\\"text/html\\\"):\\n        script_element = document.createRange().createContextualFragment(html)\\n        out_element.append(script_element)\\n    else:\\n        out_element.innerHTML = html\\n\\n\\ndef display(*values, target=None, append=True):\\n    if target is None:\\n        target = current_target()\\n    elif not isinstance(target, str):\\n        raise TypeError(f\\\"target must be str or None, not {target.__class__.__name__}\\\")\\n    elif target == \\\"\\\":\\n        raise ValueError(\\\"Cannot have an empty target\\\")\\n    elif target.startswith(\\\"#\\\"):\\n        # note: here target is str and not None!\\n        # align with @when behavior\\n        target = target[1:]\\n\\n    element = document.getElementById(target)\\n\\n    # If target cannot be found on the page, a ValueError is raised\\n    if element is None:\\n        raise ValueError(\\n            f\\\"Invalid selector with id={target}. Cannot be found in the page.\\\"\\n        )\\n\\n    # if element is a <script type=\\\"py\\\">, it has a 'target' attribute which\\n    # points to the visual element holding the displayed values. In that case,\\n    # use that.\\n    if element.tagName == \\\"SCRIPT\\\" and hasattr(element, \\\"target\\\"):\\n        element = element.target\\n\\n    for v in values:\\n        if not append:\\n            element.replaceChildren()\\n        _write(element, v, append=append)\\n\",\n    \"event_handling.py\": \"import inspect\\n\\ntry:\\n    from pyodide.ffi.wrappers import add_event_listener\\n\\nexcept ImportError:\\n\\n    def add_event_listener(el, event_type, func):\\n        el.addEventListener(event_type, func)\\n\\n\\nfrom pyscript.magic_js import document\\n\\n\\ndef when(event_type=None, selector=None):\\n    \\\"\\\"\\\"\\n    Decorates a function and passes py-* events to the decorated function\\n    The events might or not be an argument of the decorated function\\n    \\\"\\\"\\\"\\n\\n    def decorator(func):\\n\\n        from pyscript.web import Element, ElementCollection\\n\\n        if isinstance(selector, str):\\n            elements = document.querySelectorAll(selector)\\n        # TODO: This is a hack that will be removed when pyscript becomes a package\\n        #       and we can better manage the imports without circular dependencies\\n        elif isinstance(selector, Element):\\n            elements = [selector._dom_element]\\n        elif isinstance(selector, ElementCollection):\\n            elements = [el._dom_element for el in selector]\\n        else:\\n            if isinstance(selector, list):\\n                elements = selector\\n            else:\\n                elements = [selector]\\n\\n        try:\\n            sig = inspect.signature(func)\\n            # Function doesn't receive events\\n            if not sig.parameters:\\n\\n                def wrapper(*args, **kwargs):\\n                    func()\\n\\n            else:\\n                wrapper = func\\n\\n        except AttributeError:\\n            # TODO: this is very ugly hack to get micropython working because inspect.signature\\n            #       doesn't exist, but we need to actually properly replace inspect.signature.\\n            #       It may be actually better to not try any magic for now and raise the error\\n            def wrapper(*args, **kwargs):\\n                try:\\n                    return func(*args, **kwargs)\\n                except TypeError as e:\\n                    if \\\"takes\\\" in str(e) and \\\"positional arguments\\\" in str(e):\\n                        return func()\\n\\n                    raise\\n\\n        for el in elements:\\n            add_event_listener(el, event_type, wrapper)\\n\\n        return func\\n\\n    return decorator\\n\",\n    \"fetch.py\": \"import json\\n\\nimport js\\nfrom pyscript.util import as_bytearray\\n\\n\\n### wrap the response to grant Pythonic results\\nclass _Response:\\n    def __init__(self, response):\\n        self._response = response\\n\\n    # grant access to response.ok and other fields\\n    def __getattr__(self, attr):\\n        return getattr(self._response, attr)\\n\\n    # exposed methods with Pythonic results\\n    async def arrayBuffer(self):\\n        buffer = await self._response.arrayBuffer()\\n        # works in Pyodide\\n        if hasattr(buffer, \\\"to_py\\\"):\\n            return buffer.to_py()\\n        # shims in MicroPython\\n        return memoryview(as_bytearray(buffer))\\n\\n    async def blob(self):\\n        return await self._response.blob()\\n\\n    async def bytearray(self):\\n        buffer = await self._response.arrayBuffer()\\n        return as_bytearray(buffer)\\n\\n    async def json(self):\\n        return json.loads(await self.text())\\n\\n    async def text(self):\\n        return await self._response.text()\\n\\n\\n### allow direct await to _Response methods\\nclass _DirectResponse:\\n    @staticmethod\\n    def setup(promise, response):\\n        promise._response = _Response(response)\\n        return promise._response\\n\\n    def __init__(self, promise):\\n        self._promise = promise\\n        promise._response = None\\n        promise.arrayBuffer = self.arrayBuffer\\n        promise.blob = self.blob\\n        promise.bytearray = self.bytearray\\n        promise.json = self.json\\n        promise.text = self.text\\n\\n    async def _response(self):\\n        if not self._promise._response:\\n            await self._promise\\n        return self._promise._response\\n\\n    async def arrayBuffer(self):\\n        response = await self._response()\\n        return await response.arrayBuffer()\\n\\n    async def blob(self):\\n        response = await self._response()\\n        return await response.blob()\\n\\n    async def bytearray(self):\\n        response = await self._response()\\n        return await response.bytearray()\\n\\n    async def json(self):\\n        response = await self._response()\\n        return await response.json()\\n\\n    async def text(self):\\n        response = await self._response()\\n        return await response.text()\\n\\n\\ndef fetch(url, **kw):\\n    # workaround Pyodide / MicroPython dict <-> js conversion\\n    options = js.JSON.parse(json.dumps(kw))\\n    awaited = lambda response, *args: _DirectResponse.setup(promise, response)\\n    promise = js.fetch(url, options).then(awaited)\\n    _DirectResponse(promise)\\n    return promise\\n\",\n    \"ffi.py\": \"try:\\n    import js\\n    from pyodide.ffi import create_proxy as _cp\\n    from pyodide.ffi import to_js as _py_tjs\\n\\n    from_entries = js.Object.fromEntries\\n\\n    def _tjs(value, **kw):\\n        if not hasattr(kw, \\\"dict_converter\\\"):\\n            kw[\\\"dict_converter\\\"] = from_entries\\n        return _py_tjs(value, **kw)\\n\\nexcept:\\n    from jsffi import create_proxy as _cp\\n    from jsffi import to_js as _tjs\\n\\ncreate_proxy = _cp\\nto_js = _tjs\\n\",\n    \"flatted.py\": \"# https://www.npmjs.com/package/flatted\\n\\nimport json as _json\\n\\n\\nclass _Known:\\n    def __init__(self):\\n        self.key = []\\n        self.value = []\\n\\n\\nclass _String:\\n    def __init__(self, value):\\n        self.value = value\\n\\n\\ndef _array_keys(value):\\n    keys = []\\n    i = 0\\n    for _ in value:\\n        keys.append(i)\\n        i += 1\\n    return keys\\n\\n\\ndef _object_keys(value):\\n    keys = []\\n    for key in value:\\n        keys.append(key)\\n    return keys\\n\\n\\ndef _is_array(value):\\n    return isinstance(value, list) or isinstance(value, tuple)\\n\\n\\ndef _is_object(value):\\n    return isinstance(value, dict)\\n\\n\\ndef _is_string(value):\\n    return isinstance(value, str)\\n\\n\\ndef _index(known, input, value):\\n    input.append(value)\\n    index = str(len(input) - 1)\\n    known.key.append(value)\\n    known.value.append(index)\\n    return index\\n\\n\\ndef _loop(keys, input, known, output):\\n    for key in keys:\\n        value = output[key]\\n        if isinstance(value, _String):\\n            _ref(key, input[int(value.value)], input, known, output)\\n\\n    return output\\n\\n\\ndef _ref(key, value, input, known, output):\\n    if _is_array(value) and not value in known:\\n        known.append(value)\\n        value = _loop(_array_keys(value), input, known, value)\\n    elif _is_object(value) and not value in known:\\n        known.append(value)\\n        value = _loop(_object_keys(value), input, known, value)\\n\\n    output[key] = value\\n\\n\\ndef _relate(known, input, value):\\n    if _is_string(value) or _is_array(value) or _is_object(value):\\n        try:\\n            return known.value[known.key.index(value)]\\n        except:\\n            return _index(known, input, value)\\n\\n    return value\\n\\n\\ndef _transform(known, input, value):\\n    if _is_array(value):\\n        output = []\\n        for val in value:\\n            output.append(_relate(known, input, val))\\n        return output\\n\\n    if _is_object(value):\\n        obj = {}\\n        for key in value:\\n            obj[key] = _relate(known, input, value[key])\\n        return obj\\n\\n    return value\\n\\n\\ndef _wrap(value):\\n    if _is_string(value):\\n        return _String(value)\\n\\n    if _is_array(value):\\n        i = 0\\n        for val in value:\\n            value[i] = _wrap(val)\\n            i += 1\\n\\n    elif _is_object(value):\\n        for key in value:\\n            value[key] = _wrap(value[key])\\n\\n    return value\\n\\n\\ndef parse(value, *args, **kwargs):\\n    json = _json.loads(value, *args, **kwargs)\\n    wrapped = []\\n    for value in json:\\n        wrapped.append(_wrap(value))\\n\\n    input = []\\n    for value in wrapped:\\n        if isinstance(value, _String):\\n            input.append(value.value)\\n        else:\\n            input.append(value)\\n\\n    value = input[0]\\n\\n    if _is_array(value):\\n        return _loop(_array_keys(value), input, [value], value)\\n\\n    if _is_object(value):\\n        return _loop(_object_keys(value), input, [value], value)\\n\\n    return value\\n\\n\\ndef stringify(value, *args, **kwargs):\\n    known = _Known()\\n    input = []\\n    output = []\\n    i = int(_index(known, input, value))\\n    while i < len(input):\\n        output.append(_transform(known, input, input[i]))\\n        i += 1\\n    return _json.dumps(output, *args, **kwargs)\\n\",\n    \"magic_js.py\": \"import json\\nimport sys\\n\\nimport js as globalThis\\nfrom polyscript import config as _config\\nfrom polyscript import js_modules\\nfrom pyscript.util import NotSupported\\n\\nRUNNING_IN_WORKER = not hasattr(globalThis, \\\"document\\\")\\n\\nconfig = json.loads(globalThis.JSON.stringify(_config))\\n\\n\\n# allow `from pyscript.js_modules.xxx import yyy`\\nclass JSModule:\\n    def __init__(self, name):\\n        self.name = name\\n\\n    def __getattr__(self, field):\\n        # avoid pyodide looking for non existent fields\\n        if not field.startswith(\\\"_\\\"):\\n            return getattr(getattr(js_modules, self.name), field)\\n\\n\\n# generate N modules in the system that will proxy the real value\\nfor name in globalThis.Reflect.ownKeys(js_modules):\\n    sys.modules[f\\\"pyscript.js_modules.{name}\\\"] = JSModule(name)\\nsys.modules[\\\"pyscript.js_modules\\\"] = js_modules\\n\\nif RUNNING_IN_WORKER:\\n    import polyscript\\n\\n    PyWorker = NotSupported(\\n        \\\"pyscript.PyWorker\\\",\\n        \\\"pyscript.PyWorker works only when running in the main thread\\\",\\n    )\\n\\n    try:\\n        import js\\n\\n        window = polyscript.xworker.window\\n        document = window.document\\n        js.document = document\\n        # this is the same as js_import on main and it lands modules on main\\n        js_import = window.Function(\\n            \\\"return (...urls) => Promise.all(urls.map((url) => import(url)))\\\"\\n        )()\\n    except:\\n        message = \\\"Unable to use `window` or `document` -> https://docs.pyscript.net/latest/faq/#sharedarraybuffer\\\"\\n        globalThis.console.warn(message)\\n        window = NotSupported(\\\"pyscript.window\\\", message)\\n        document = NotSupported(\\\"pyscript.document\\\", message)\\n        js_import = None\\n\\n    sync = polyscript.xworker.sync\\n\\n    # in workers the display does not have a default ID\\n    # but there is a sync utility from xworker\\n    def current_target():\\n        return polyscript.target\\n\\nelse:\\n    import _pyscript\\n    from _pyscript import PyWorker, js_import\\n\\n    window = globalThis\\n    document = globalThis.document\\n    sync = NotSupported(\\n        \\\"pyscript.sync\\\", \\\"pyscript.sync works only when running in a worker\\\"\\n    )\\n\\n    # in MAIN the current element target exist, just use it\\n    def current_target():\\n        return _pyscript.target\\n\",\n    \"storage.py\": \"from polyscript import storage as _storage\\nfrom pyscript.flatted import parse as _parse\\nfrom pyscript.flatted import stringify as _stringify\\n\\n\\n# convert a Python value into an IndexedDB compatible entry\\ndef _to_idb(value):\\n    if value is None:\\n        return _stringify([\\\"null\\\", 0])\\n    if isinstance(value, (bool, float, int, str, list, dict, tuple)):\\n        return _stringify([\\\"generic\\\", value])\\n    if isinstance(value, bytearray):\\n        return _stringify([\\\"bytearray\\\", [v for v in value]])\\n    if isinstance(value, memoryview):\\n        return _stringify([\\\"memoryview\\\", [v for v in value]])\\n    raise TypeError(f\\\"Unexpected value: {value}\\\")\\n\\n\\n# convert an IndexedDB compatible entry into a Python value\\ndef _from_idb(value):\\n    (\\n        kind,\\n        result,\\n    ) = _parse(value)\\n    if kind == \\\"null\\\":\\n        return None\\n    if kind == \\\"generic\\\":\\n        return result\\n    if kind == \\\"bytearray\\\":\\n        return bytearray(result)\\n    if kind == \\\"memoryview\\\":\\n        return memoryview(bytearray(result))\\n    return value\\n\\n\\nclass Storage(dict):\\n    def __init__(self, store):\\n        super().__init__({k: _from_idb(v) for k, v in store.entries()})\\n        self.__store__ = store\\n\\n    def __delitem__(self, attr):\\n        self.__store__.delete(attr)\\n        super().__delitem__(attr)\\n\\n    def __setitem__(self, attr, value):\\n        self.__store__.set(attr, _to_idb(value))\\n        super().__setitem__(attr, value)\\n\\n    def clear(self):\\n        self.__store__.clear()\\n        super().clear()\\n\\n    async def sync(self):\\n        await self.__store__.sync()\\n\\n\\nasync def storage(name=\\\"\\\", storage_class=Storage):\\n    if not name:\\n        raise ValueError(\\\"The storage name must be defined\\\")\\n    return storage_class(await _storage(f\\\"@pyscript/{name}\\\"))\\n\",\n    \"util.py\": \"import js\\n\\n\\ndef as_bytearray(buffer):\\n    ui8a = js.Uint8Array.new(buffer)\\n    size = ui8a.length\\n    ba = bytearray(size)\\n    for i in range(0, size):\\n        ba[i] = ui8a[i]\\n    return ba\\n\\n\\nclass NotSupported:\\n    \\\"\\\"\\\"\\n    Small helper that raises exceptions if you try to get/set any attribute on\\n    it.\\n    \\\"\\\"\\\"\\n\\n    def __init__(self, name, error):\\n        object.__setattr__(self, \\\"name\\\", name)\\n        object.__setattr__(self, \\\"error\\\", error)\\n\\n    def __repr__(self):\\n        return f\\\"<NotSupported {self.name} [{self.error}]>\\\"\\n\\n    def __getattr__(self, attr):\\n        raise AttributeError(self.error)\\n\\n    def __setattr__(self, attr, value):\\n        raise AttributeError(self.error)\\n\\n    def __call__(self, *args):\\n        raise TypeError(self.error)\\n\",\n    \"web.py\": \"\\\"\\\"\\\"Lightweight interface to the DOM and HTML elements.\\\"\\\"\\\"\\n\\n# `when` is not used in this module. It is imported here save the user an additional\\n# import (i.e. they can get what they need from `pyscript.web`).\\nfrom pyscript import document, when  # NOQA\\n\\n\\ndef wrap_dom_element(dom_element):\\n    \\\"\\\"\\\"Wrap an existing DOM element in an instance of a subclass of `Element`.\\n\\n    This is just a convenience function to avoid having to import the `Element` class\\n    and use its class method.\\n    \\\"\\\"\\\"\\n\\n    return Element.wrap_dom_element(dom_element)\\n\\n\\nclass Element:\\n    # A lookup table to get an `Element` subclass by tag name. Used when wrapping an\\n    # existing DOM element.\\n    element_classes_by_tag_name = {}\\n\\n    @classmethod\\n    def get_tag_name(cls):\\n        \\\"\\\"\\\"Return the HTML tag name for the class.\\n\\n        For classes that have a trailing underscore (because they clash with a Python\\n        keyword or built-in), we remove it to get the tag name. e.g. for the `input_`\\n        class, the tag name is `input`.\\n\\n        \\\"\\\"\\\"\\n        return cls.__name__.replace(\\\"_\\\", \\\"\\\")\\n\\n    @classmethod\\n    def register_element_classes(cls, element_classes):\\n        \\\"\\\"\\\"Register an iterable of element classes.\\\"\\\"\\\"\\n        for element_class in element_classes:\\n            tag_name = element_class.get_tag_name()\\n            cls.element_classes_by_tag_name[tag_name] = element_class\\n\\n    @classmethod\\n    def unregister_element_classes(cls, element_classes):\\n        \\\"\\\"\\\"Unregister an iterable of element classes.\\\"\\\"\\\"\\n        for element_class in element_classes:\\n            tag_name = element_class.get_tag_name()\\n            cls.element_classes_by_tag_name.pop(tag_name, None)\\n\\n    @classmethod\\n    def wrap_dom_element(cls, dom_element):\\n        \\\"\\\"\\\"Wrap an existing DOM element in an instance of a subclass of `Element`.\\n\\n        We look up the `Element` subclass by the DOM element's tag name. For any unknown\\n        elements (custom tags etc.) use *this* class (`Element`).\\n        \\\"\\\"\\\"\\n        element_cls = cls.element_classes_by_tag_name.get(\\n            dom_element.tagName.lower(), cls\\n        )\\n\\n        return element_cls(dom_element=dom_element)\\n\\n    def __init__(self, dom_element=None, classes=None, style=None, **kwargs):\\n        \\\"\\\"\\\"Create a new, or wrap an existing DOM element.\\n\\n        If `dom_element` is None we are being called to *create* a new element.\\n        Otherwise, we are being called to *wrap* an existing DOM element.\\n        \\\"\\\"\\\"\\n        self._dom_element = dom_element or document.createElement(\\n            type(self).get_tag_name()\\n        )\\n\\n        # A set-like interface to the element's `classList`.\\n        self._classes = Classes(self)\\n\\n        # A dict-like interface to the element's `style` attribute.\\n        self._style = Style(self)\\n\\n        # Set any specified classes, styles, and DOM properties.\\n        self.update(classes=classes, style=style, **kwargs)\\n\\n    def __eq__(self, obj):\\n        \\\"\\\"\\\"Check for equality by comparing the underlying DOM element.\\\"\\\"\\\"\\n        return isinstance(obj, Element) and obj._dom_element == self._dom_element\\n\\n    def __getitem__(self, key):\\n        \\\"\\\"\\\"Get an item within the element's children.\\n\\n        If `key` is an integer or a slice we use it to index/slice the element's\\n        children. Otherwise, we use `key` as a query selector.\\n        \\\"\\\"\\\"\\n        if isinstance(key, int) or isinstance(key, slice):\\n            return self.children[key]\\n\\n        return self.find(key)\\n\\n    def __getattr__(self, name):\\n        # This allows us to get attributes on the underlying DOM element that clash\\n        # with Python keywords or built-ins (e.g. the output element has an\\n        # attribute `for` which is a Python keyword, so you can access it on the\\n        # Element instance via `for_`).\\n        if name.endswith(\\\"_\\\"):\\n            name = name[:-1]\\n\\n        return getattr(self._dom_element, name)\\n\\n    def __setattr__(self, name, value):\\n        # This class overrides `__setattr__` to delegate \\\"public\\\" attributes to the\\n        # underlying DOM element. BUT, we don't use the usual Python pattern where\\n        # we set attributes on the element itself via `self.__dict__` as that is not\\n        # yet supported in our build of MicroPython. Instead, we handle it here by\\n        # using super for all \\\"private\\\" attributes (those starting with an underscore).\\n        if name.startswith(\\\"_\\\"):\\n            super().__setattr__(name, value)\\n\\n        else:\\n            # This allows us to set attributes on the underlying DOM element that clash\\n            # with Python keywords or built-ins (e.g. the output element has an\\n            # attribute `for` which is a Python keyword, so you can access it on the\\n            # Element instance via `for_`).\\n            if name.endswith(\\\"_\\\"):\\n                name = name[:-1]\\n\\n            setattr(self._dom_element, name, value)\\n\\n    @property\\n    def children(self):\\n        \\\"\\\"\\\"Return the element's children as an `ElementCollection`.\\\"\\\"\\\"\\n        return ElementCollection.wrap_dom_elements(self._dom_element.children)\\n\\n    @property\\n    def classes(self):\\n        \\\"\\\"\\\"Return the element's `classList` as a `Classes` instance.\\\"\\\"\\\"\\n        return self._classes\\n\\n    @property\\n    def parent(self):\\n        \\\"\\\"\\\"Return the element's `parent `Element`.\\\"\\\"\\\"\\n        if self._dom_element.parentElement is None:\\n            return None\\n\\n        return Element.wrap_dom_element(self._dom_element.parentElement)\\n\\n    @property\\n    def style(self):\\n        \\\"\\\"\\\"Return the element's `style` attribute as a `Style` instance.\\\"\\\"\\\"\\n        return self._style\\n\\n    def append(self, *items):\\n        \\\"\\\"\\\"Append the specified items to the element.\\\"\\\"\\\"\\n        for item in items:\\n            if isinstance(item, Element):\\n                self._dom_element.appendChild(item._dom_element)\\n\\n            elif isinstance(item, ElementCollection):\\n                for element in item:\\n                    self._dom_element.appendChild(element._dom_element)\\n\\n            # We check for list/tuple here and NOT for any iterable as it will match\\n            # a JS Nodelist which is handled explicitly below.\\n            # NodeList.\\n            elif isinstance(item, list) or isinstance(item, tuple):\\n                for child in item:\\n                    self.append(child)\\n\\n            else:\\n                # In this case we know it's not an Element or an ElementCollection, so\\n                # we guess that it's either a DOM element or NodeList returned via the\\n                # ffi.\\n                try:\\n                    # First, we try to see if it's an element by accessing the 'tagName'\\n                    # attribute.\\n                    item.tagName\\n                    self._dom_element.appendChild(item)\\n\\n                except AttributeError:\\n                    try:\\n                        # Ok, it's not an element, so let's see if it's a NodeList by\\n                        # accessing the 'length' attribute.\\n                        item.length\\n                        for element_ in item:\\n                            self._dom_element.appendChild(element_)\\n\\n                    except AttributeError:\\n                        # Nope! This is not an element or a NodeList.\\n                        raise TypeError(\\n                            f'Element \\\"{item}\\\" is a proxy object, \\\"'\\n                            f\\\"but not a valid element or a NodeList.\\\"\\n                        )\\n\\n    def clone(self, clone_id=None):\\n        \\\"\\\"\\\"Make a clone of the element (clones the underlying DOM object too).\\\"\\\"\\\"\\n        clone = Element.wrap_dom_element(self._dom_element.cloneNode(True))\\n        clone.id = clone_id\\n        return clone\\n\\n    def find(self, selector):\\n        \\\"\\\"\\\"Find all elements that match the specified selector.\\n\\n        Return the results as a (possibly empty) `ElementCollection`.\\n        \\\"\\\"\\\"\\n        return ElementCollection.wrap_dom_elements(\\n            self._dom_element.querySelectorAll(selector)\\n        )\\n\\n    def show_me(self):\\n        \\\"\\\"\\\"Convenience method for 'element.scrollIntoView()'.\\\"\\\"\\\"\\n        self._dom_element.scrollIntoView()\\n\\n    def update(self, classes=None, style=None, **kwargs):\\n        \\\"\\\"\\\"Update the element with the specified classes, styles, and DOM properties.\\\"\\\"\\\"\\n\\n        if classes:\\n            self.classes.add(classes)\\n\\n        if style:\\n            self.style.set(**style)\\n\\n        for name, value in kwargs.items():\\n            setattr(self, name, value)\\n\\n\\nclass Classes:\\n    \\\"\\\"\\\"A set-like interface to an element's `classList`.\\\"\\\"\\\"\\n\\n    def __init__(self, element: Element):\\n        self._element = element\\n        self._class_list = self._element._dom_element.classList\\n\\n    def __contains__(self, item):\\n        return item in self._class_list\\n\\n    def __eq__(self, other):\\n        # We allow comparison with either another `Classes` instance...\\n        if isinstance(other, Classes):\\n            compare_with = list(other._class_list)\\n\\n        # ...or iterables of strings.\\n        else:\\n            # TODO: Check MP for existence of better iterable test.\\n            try:\\n                compare_with = iter(other)\\n\\n            except TypeError:\\n                return False\\n\\n        return set(self._class_list) == set(compare_with)\\n\\n    def __iter__(self):\\n        return iter(self._class_list)\\n\\n    def __len__(self):\\n        return self._class_list.length\\n\\n    def __repr__(self):\\n        return f\\\"Classes({', '.join(self._class_list)})\\\"\\n\\n    def __str__(self):\\n        return \\\" \\\".join(self._class_list)\\n\\n    def add(self, *class_names):\\n        \\\"\\\"\\\"Add one or more classes to the element.\\\"\\\"\\\"\\n        for class_name in class_names:\\n            if isinstance(class_name, list):\\n                for item in class_name:\\n                    self.add(item)\\n\\n            else:\\n                self._class_list.add(class_name)\\n\\n    def contains(self, class_name):\\n        \\\"\\\"\\\"Check if the element has the specified class.\\\"\\\"\\\"\\n        return class_name in self\\n\\n    def remove(self, *class_names):\\n        \\\"\\\"\\\"Remove one or more classes from the element.\\\"\\\"\\\"\\n        for class_name in class_names:\\n            if isinstance(class_name, list):\\n                for item in class_name:\\n                    self.remove(item)\\n\\n            else:\\n                self._class_list.remove(class_name)\\n\\n    def replace(self, old_class, new_class):\\n        \\\"\\\"\\\"Replace one of the element's classes with another.\\\"\\\"\\\"\\n        self.remove(old_class)\\n        self.add(new_class)\\n\\n    def toggle(self, *class_names):\\n        \\\"\\\"\\\"Toggle one or more of the element's classes.\\\"\\\"\\\"\\n        for class_name in class_names:\\n            if class_name in self:\\n                self.remove(class_name)\\n\\n            else:\\n                self.add(class_name)\\n\\n\\nclass HasOptions:\\n    \\\"\\\"\\\"Mix-in for elements that have an options attribute.\\n\\n    The elements that support options are: <datalist>, <optgroup>, and <select>.\\n    \\\"\\\"\\\"\\n\\n    @property\\n    def options(self):\\n        \\\"\\\"\\\"Return the element's options as an `Options\\\"\\\"\\\"\\n        if not hasattr(self, \\\"_options\\\"):\\n            self._options = Options(self)\\n\\n        return self._options\\n\\n\\nclass Options:\\n    \\\"\\\"\\\"This class represents the <option>s of a <datalist>, <optgroup> or <select>.\\n\\n    It allows access to add and remove <option>s by using the `add`, `remove` and\\n    `clear` methods.\\n    \\\"\\\"\\\"\\n\\n    def __init__(self, element):\\n        self._element = element\\n\\n    def __getitem__(self, key):\\n        return self.options[key]\\n\\n    def __iter__(self):\\n        yield from self.options\\n\\n    def __len__(self):\\n        return len(self.options)\\n\\n    def __repr__(self):\\n        return f\\\"{self.__class__.__name__} (length: {len(self)}) {self.options}\\\"\\n\\n    @property\\n    def options(self):\\n        \\\"\\\"\\\"Return the list of options.\\\"\\\"\\\"\\n        return [Element.wrap_dom_element(o) for o in self._element._dom_element.options]\\n\\n    @property\\n    def selected(self):\\n        \\\"\\\"\\\"Return the selected option.\\\"\\\"\\\"\\n        return self.options[self._element._dom_element.selectedIndex]\\n\\n    def add(self, value=None, html=None, text=None, before=None, **kwargs):\\n        \\\"\\\"\\\"Add a new option to the element\\\"\\\"\\\"\\n        if value is not None:\\n            kwargs[\\\"value\\\"] = value\\n\\n        if html is not None:\\n            kwargs[\\\"innerHTML\\\"] = html\\n\\n        if text is not None:\\n            kwargs[\\\"text\\\"] = text\\n\\n        new_option = option(**kwargs)\\n\\n        if before:\\n            if isinstance(before, Element):\\n                before = before._dom_element\\n\\n        self._element._dom_element.add(new_option._dom_element, before)\\n\\n    def clear(self):\\n        \\\"\\\"\\\"Remove all options.\\\"\\\"\\\"\\n        while len(self) > 0:\\n            self.remove(0)\\n\\n    def remove(self, index):\\n        \\\"\\\"\\\"Remove the option at the specified index.\\\"\\\"\\\"\\n        self._element._dom_element.remove(index)\\n\\n\\nclass Style:\\n    \\\"\\\"\\\"A dict-like interface to an element's `style` attribute.\\\"\\\"\\\"\\n\\n    def __init__(self, element: Element):\\n        self._element = element\\n        self._style = self._element._dom_element.style\\n\\n    def __getitem__(self, key):\\n        return self._style.getPropertyValue(key)\\n\\n    def __setitem__(self, key, value):\\n        self._style.setProperty(key, value)\\n\\n    def remove(self, key):\\n        \\\"\\\"\\\"Remove a CSS property from the element.\\\"\\\"\\\"\\n        self._style.removeProperty(key)\\n\\n    def set(self, **kwargs):\\n        \\\"\\\"\\\"Set one or more CSS properties on the element.\\\"\\\"\\\"\\n        for key, value in kwargs.items():\\n            self._element._dom_element.style.setProperty(key, value)\\n\\n    # CSS Properties\\n    # Reference: https://github.com/microsoft/TypeScript/blob/main/src/lib/dom.generated.d.ts#L3799C1-L5005C2\\n    # Following properties automatically generated from the above reference using\\n    # tools/codegen_css_proxy.py\\n    @property\\n    def visible(self):\\n        return self._element._dom_element.style.visibility\\n\\n    @visible.setter\\n    def visible(self, value):\\n        self._element._dom_element.style.visibility = value\\n\\n\\nclass ContainerElement(Element):\\n    \\\"\\\"\\\"Base class for elements that can contain other elements.\\\"\\\"\\\"\\n\\n    def __init__(\\n        self, *args, children=None, dom_element=None, style=None, classes=None, **kwargs\\n    ):\\n        super().__init__(\\n            dom_element=dom_element, style=style, classes=classes, **kwargs\\n        )\\n\\n        for child in list(args) + (children or []):\\n            if isinstance(child, Element) or isinstance(child, ElementCollection):\\n                self.append(child)\\n\\n            else:\\n                self.innerHTML += child\\n\\n    def __iter__(self):\\n        yield from self.children\\n\\n\\nclass ClassesCollection:\\n    \\\"\\\"\\\"A set-like interface to the classes of the elements in a collection.\\\"\\\"\\\"\\n\\n    def __init__(self, collection):\\n        self._collection = collection\\n\\n    def __contains__(self, class_name):\\n        for element in self._collection:\\n            if class_name in element.classes:\\n                return True\\n\\n        return False\\n\\n    def __eq__(self, other):\\n        return (\\n            isinstance(other, ClassesCollection)\\n            and self._collection == other._collection\\n        )\\n\\n    def __iter__(self):\\n        for class_name in self._all_class_names():\\n            yield class_name\\n\\n    def __len__(self):\\n        return len(self._all_class_names())\\n\\n    def __repr__(self):\\n        return f\\\"ClassesCollection({repr(self._collection)})\\\"\\n\\n    def __str__(self):\\n        return \\\" \\\".join(self._all_class_names())\\n\\n    def add(self, *class_names):\\n        \\\"\\\"\\\"Add one or more classes to the elements in the collection.\\\"\\\"\\\"\\n        for element in self._collection:\\n            element.classes.add(*class_names)\\n\\n    def contains(self, class_name):\\n        \\\"\\\"\\\"Check if any element in the collection has the specified class.\\\"\\\"\\\"\\n        return class_name in self\\n\\n    def remove(self, *class_names):\\n        \\\"\\\"\\\"Remove one or more classes from the elements in the collection.\\\"\\\"\\\"\\n\\n        for element in self._collection:\\n            element.classes.remove(*class_names)\\n\\n    def replace(self, old_class, new_class):\\n        \\\"\\\"\\\"Replace one of the classes in the elements in the collection with another.\\\"\\\"\\\"\\n        for element in self._collection:\\n            element.classes.replace(old_class, new_class)\\n\\n    def toggle(self, *class_names):\\n        \\\"\\\"\\\"Toggle one or more classes on the elements in the collection.\\\"\\\"\\\"\\n        for element in self._collection:\\n            element.classes.toggle(*class_names)\\n\\n    def _all_class_names(self):\\n        all_class_names = set()\\n        for element in self._collection:\\n            for class_name in element.classes:\\n                all_class_names.add(class_name)\\n\\n        return all_class_names\\n\\n\\nclass StyleCollection:\\n    \\\"\\\"\\\"A dict-like interface to the styles of the elements in a collection.\\\"\\\"\\\"\\n\\n    def __init__(self, collection):\\n        self._collection = collection\\n\\n    def __getitem__(self, key):\\n        return [element.style[key] for element in self._collection._elements]\\n\\n    def __setitem__(self, key, value):\\n        for element in self._collection._elements:\\n            element.style[key] = value\\n\\n    def __repr__(self):\\n        return f\\\"StyleCollection({repr(self._collection)})\\\"\\n\\n    def remove(self, key):\\n        \\\"\\\"\\\"Remove a CSS property from the elements in the collection.\\\"\\\"\\\"\\n        for element in self._collection._elements:\\n            element.style.remove(key)\\n\\n\\nclass ElementCollection:\\n    @classmethod\\n    def wrap_dom_elements(cls, dom_elements):\\n        \\\"\\\"\\\"Wrap an iterable of dom_elements in an `ElementCollection`.\\\"\\\"\\\"\\n\\n        return cls(\\n            [Element.wrap_dom_element(dom_element) for dom_element in dom_elements]\\n        )\\n\\n    def __init__(self, elements: [Element]):\\n        self._elements = elements\\n        self._classes = ClassesCollection(self)\\n        self._style = StyleCollection(self)\\n\\n    def __eq__(self, obj):\\n        \\\"\\\"\\\"Check for equality by comparing the underlying DOM elements.\\\"\\\"\\\"\\n        return isinstance(obj, ElementCollection) and obj._elements == self._elements\\n\\n    def __getitem__(self, key):\\n        \\\"\\\"\\\"Get an item in the collection.\\n\\n        If `key` is an integer or a slice we use it to index/slice the collection.\\n        Otherwise, we use `key` as a query selector.\\n        \\\"\\\"\\\"\\n        if isinstance(key, int):\\n            return self._elements[key]\\n\\n        elif isinstance(key, slice):\\n            return ElementCollection(self._elements[key])\\n\\n        return self.find(key)\\n\\n    def __iter__(self):\\n        yield from self._elements\\n\\n    def __len__(self):\\n        return len(self._elements)\\n\\n    def __repr__(self):\\n        return (\\n            f\\\"{self.__class__.__name__} (length: {len(self._elements)}) \\\"\\n            f\\\"{self._elements}\\\"\\n        )\\n\\n    def __getattr__(self, name):\\n        return [getattr(element, name) for element in self._elements]\\n\\n    def __setattr__(self, name, value):\\n        # This class overrides `__setattr__` to delegate \\\"public\\\" attributes to the\\n        # elements in the collection. BUT, we don't use the usual Python pattern where\\n        # we set attributes on the collection itself via `self.__dict__` as that is not\\n        # yet supported in our build of MicroPython. Instead, we handle it here by\\n        # using super for all \\\"private\\\" attributes (those starting with an underscore).\\n        if name.startswith(\\\"_\\\"):\\n            super().__setattr__(name, value)\\n\\n        else:\\n            for element in self._elements:\\n                setattr(element, name, value)\\n\\n    @property\\n    def classes(self):\\n        \\\"\\\"\\\"Return the classes of the elements in the collection as a `ClassesCollection`.\\\"\\\"\\\"\\n        return self._classes\\n\\n    @property\\n    def elements(self):\\n        \\\"\\\"\\\"Return the elements in the collection as a list.\\\"\\\"\\\"\\n        return self._elements\\n\\n    @property\\n    def style(self):\\n        \\\"\\\"\\\"\\\"\\\"\\\"\\n        return self._style\\n\\n    def find(self, selector):\\n        \\\"\\\"\\\"Find all elements that match the specified selector.\\n\\n        Return the results as a (possibly empty) `ElementCollection`.\\n        \\\"\\\"\\\"\\n        elements = []\\n        for element in self._elements:\\n            elements.extend(element.find(selector))\\n\\n        return ElementCollection(elements)\\n\\n\\n# Classes for every HTML element. If the element tag name (e.g. \\\"input\\\") clashes with\\n# either a Python keyword or common symbol, then we suffix the class name with an \\\"_\\\"\\n# (e.g. the class for the \\\"input\\\" element is \\\"input_\\\").\\n\\n\\nclass a(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a\\\"\\\"\\\"\\n\\n\\nclass abbr(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr\\\"\\\"\\\"\\n\\n\\nclass address(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address\\\"\\\"\\\"\\n\\n\\nclass area(Element):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area\\\"\\\"\\\"\\n\\n\\nclass article(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article\\\"\\\"\\\"\\n\\n\\nclass aside(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside\\\"\\\"\\\"\\n\\n\\nclass audio(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio\\\"\\\"\\\"\\n\\n\\nclass b(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b\\\"\\\"\\\"\\n\\n\\nclass base(Element):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base\\\"\\\"\\\"\\n\\n\\nclass blockquote(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote\\\"\\\"\\\"\\n\\n\\nclass body(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body\\\"\\\"\\\"\\n\\n\\nclass br(Element):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br\\\"\\\"\\\"\\n\\n\\nclass button(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button\\\"\\\"\\\"\\n\\n\\nclass canvas(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas\\\"\\\"\\\"\\n\\n    def download(self, filename: str = \\\"snapped.png\\\"):\\n        \\\"\\\"\\\"Download the current element with the filename provided in input.\\n\\n        Inputs:\\n            * filename (str): name of the file being downloaded\\n\\n        Output:\\n            None\\n        \\\"\\\"\\\"\\n        download_link = a(download=filename, href=self._dom_element.toDataURL())\\n\\n        # Adding the link to the DOM is recommended for browser compatibility to make\\n        # sure that the click works.\\n        self.append(download_link)\\n\\n        download_link._dom_element.click()\\n\\n    def draw(self, what, width=None, height=None):\\n        \\\"\\\"\\\"Draw `what` on the current element\\n\\n        Inputs:\\n\\n            * what (canvas image source): An element to draw into the context. The\\n                specification permits any canvas image source, specifically, an\\n                HTMLImageElement, an SVGImageElement, an HTMLVideoElement,\\n                an HTMLCanvasElement, an ImageBitmap, an OffscreenCanvas, or a\\n                VideoFrame.\\n        \\\"\\\"\\\"\\n        if isinstance(what, Element):\\n            what = what._dom_element\\n\\n        # https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage\\n        ctx = self._dom_element.getContext(\\\"2d\\\")\\n        if width or height:\\n            ctx.drawImage(what, 0, 0, width, height)\\n\\n        else:\\n            ctx.drawImage(what, 0, 0)\\n\\n\\nclass caption(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\\\"\\\"\\\"\\n\\n\\nclass cite(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite\\\"\\\"\\\"\\n\\n\\nclass code(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code\\\"\\\"\\\"\\n\\n\\nclass col(Element):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col\\\"\\\"\\\"\\n\\n\\nclass colgroup(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup\\\"\\\"\\\"\\n\\n\\nclass data(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/data\\\"\\\"\\\"\\n\\n\\nclass datalist(ContainerElement, HasOptions):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist\\\"\\\"\\\"\\n\\n\\nclass dd(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd\\\"\\\"\\\"\\n\\n\\nclass del_(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del\\\"\\\"\\\"\\n\\n\\nclass details(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details\\\"\\\"\\\"\\n\\n\\nclass dialog(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog\\\"\\\"\\\"\\n\\n\\nclass div(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div\\\"\\\"\\\"\\n\\n\\nclass dl(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl\\\"\\\"\\\"\\n\\n\\nclass dt(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt\\\"\\\"\\\"\\n\\n\\nclass em(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em\\\"\\\"\\\"\\n\\n\\nclass embed(Element):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed\\\"\\\"\\\"\\n\\n\\nclass fieldset(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset\\\"\\\"\\\"\\n\\n\\nclass figcaption(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption\\\"\\\"\\\"\\n\\n\\nclass figure(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure\\\"\\\"\\\"\\n\\n\\nclass footer(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer\\\"\\\"\\\"\\n\\n\\nclass form(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\\\"\\\"\\\"\\n\\n\\nclass h1(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h1\\\"\\\"\\\"\\n\\n\\nclass h2(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2\\\"\\\"\\\"\\n\\n\\nclass h3(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h3\\\"\\\"\\\"\\n\\n\\nclass h4(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h4\\\"\\\"\\\"\\n\\n\\nclass h5(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h5\\\"\\\"\\\"\\n\\n\\nclass h6(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h6\\\"\\\"\\\"\\n\\n\\nclass head(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head\\\"\\\"\\\"\\n\\n\\nclass header(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header\\\"\\\"\\\"\\n\\n\\nclass hgroup(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup\\\"\\\"\\\"\\n\\n\\nclass hr(Element):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr\\\"\\\"\\\"\\n\\n\\nclass html(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html\\\"\\\"\\\"\\n\\n\\nclass i(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i\\\"\\\"\\\"\\n\\n\\nclass iframe(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\\\"\\\"\\\"\\n\\n\\nclass img(Element):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\\\"\\\"\\\"\\n\\n\\nclass input_(Element):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\\\"\\\"\\\"\\n\\n\\nclass ins(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins\\\"\\\"\\\"\\n\\n\\nclass kbd(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd\\\"\\\"\\\"\\n\\n\\nclass label(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label\\\"\\\"\\\"\\n\\n\\nclass legend(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend\\\"\\\"\\\"\\n\\n\\nclass li(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li\\\"\\\"\\\"\\n\\n\\nclass link(Element):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link\\\"\\\"\\\"\\n\\n\\nclass main(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main\\\"\\\"\\\"\\n\\n\\nclass map_(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map\\\"\\\"\\\"\\n\\n\\nclass mark(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark\\\"\\\"\\\"\\n\\n\\nclass menu(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu\\\"\\\"\\\"\\n\\n\\nclass meta(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta\\\"\\\"\\\"\\n\\n\\nclass meter(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter\\\"\\\"\\\"\\n\\n\\nclass nav(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav\\\"\\\"\\\"\\n\\n\\nclass object_(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object\\\"\\\"\\\"\\n\\n\\nclass ol(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol\\\"\\\"\\\"\\n\\n\\nclass optgroup(ContainerElement, HasOptions):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup\\\"\\\"\\\"\\n\\n\\nclass option(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option\\\"\\\"\\\"\\n\\n\\nclass output(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output\\\"\\\"\\\"\\n\\n\\nclass p(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p\\\"\\\"\\\"\\n\\n\\nclass param(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/param\\\"\\\"\\\"\\n\\n\\nclass picture(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture\\\"\\\"\\\"\\n\\n\\nclass pre(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre\\\"\\\"\\\"\\n\\n\\nclass progress(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress\\\"\\\"\\\"\\n\\n\\nclass q(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q\\\"\\\"\\\"\\n\\n\\nclass s(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s\\\"\\\"\\\"\\n\\n\\nclass script(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script\\\"\\\"\\\"\\n\\n\\nclass section(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section\\\"\\\"\\\"\\n\\n\\nclass select(ContainerElement, HasOptions):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select\\\"\\\"\\\"\\n\\n\\nclass small(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small\\\"\\\"\\\"\\n\\n\\nclass source(Element):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source\\\"\\\"\\\"\\n\\n\\nclass span(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span\\\"\\\"\\\"\\n\\n\\nclass strong(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong\\\"\\\"\\\"\\n\\n\\nclass style(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style\\\"\\\"\\\"\\n\\n\\nclass sub(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub\\\"\\\"\\\"\\n\\n\\nclass summary(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/summary\\\"\\\"\\\"\\n\\n\\nclass sup(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup\\\"\\\"\\\"\\n\\n\\nclass table(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table\\\"\\\"\\\"\\n\\n\\nclass tbody(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody\\\"\\\"\\\"\\n\\n\\nclass td(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td\\\"\\\"\\\"\\n\\n\\nclass template(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template\\\"\\\"\\\"\\n\\n\\nclass textarea(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\\\"\\\"\\\"\\n\\n\\nclass tfoot(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot\\\"\\\"\\\"\\n\\n\\nclass th(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th\\\"\\\"\\\"\\n\\n\\nclass thead(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead\\\"\\\"\\\"\\n\\n\\nclass time(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time\\\"\\\"\\\"\\n\\n\\nclass title(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title\\\"\\\"\\\"\\n\\n\\nclass tr(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr\\\"\\\"\\\"\\n\\n\\nclass track(Element):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track\\\"\\\"\\\"\\n\\n\\nclass u(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u\\\"\\\"\\\"\\n\\n\\nclass ul(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul\\\"\\\"\\\"\\n\\n\\nclass var(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/var\\\"\\\"\\\"\\n\\n\\nclass video(ContainerElement):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video\\\"\\\"\\\"\\n\\n    def snap(\\n        self,\\n        to: Element | str = None,\\n        width: int | None = None,\\n        height: int | None = None,\\n    ):\\n        \\\"\\\"\\\"\\n        Capture a snapshot (i.e. a single frame) of a video to a canvas.\\n\\n        Inputs:\\n\\n            * to: the canvas to save the video frame to (if None, one is created).\\n            * width: width of the snapshot (defaults to the video width).\\n            * height: height of the snapshot (defaults to the video height).\\n\\n        Output:\\n            (Element) canvas element where the video frame snapshot was drawn into\\n        \\\"\\\"\\\"\\n        width = width if width is not None else self.videoWidth\\n        height = height if height is not None else self.videoHeight\\n\\n        if to is None:\\n            to = canvas(width=width, height=height)\\n\\n        elif isinstance(to, Element):\\n            if to.tag != \\\"canvas\\\":\\n                raise TypeError(\\\"Element to snap to must be a canvas.\\\")\\n\\n        elif getattr(to, \\\"tagName\\\", \\\"\\\") == \\\"CANVAS\\\":\\n            to = canvas(dom_element=to)\\n\\n        # If 'to' is a string, then assume it is a query selector.\\n        elif isinstance(to, str):\\n            nodelist = document.querySelectorAll(to)  # NOQA\\n            if nodelist.length == 0:\\n                raise TypeError(\\\"No element with selector {to} to snap to.\\\")\\n\\n            if nodelist[0].tagName != \\\"CANVAS\\\":\\n                raise TypeError(\\\"Element to snap to must be a canvas.\\\")\\n\\n            to = canvas(dom_element=nodelist[0])\\n\\n        to.draw(self, width, height)\\n\\n        return to\\n\\n\\nclass wbr(Element):\\n    \\\"\\\"\\\"Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr\\\"\\\"\\\"\\n\\n\\n# fmt: off\\nELEMENT_CLASSES = [\\n    a, abbr, address, area, article, aside, audio,\\n    b, base, blockquote, body, br, button,\\n    canvas, caption, cite, code, col, colgroup,\\n    data, datalist, dd, del_, details, dialog, div, dl, dt,\\n    em, embed,\\n    fieldset, figcaption, figure, footer, form,\\n    h1, h2, h3, h4, h5, h6, head, header, hgroup, hr, html,\\n    i, iframe, img, input_, ins,\\n    kbd,\\n    label, legend, li, link,\\n    main, map_, mark, menu, meta, meter,\\n    nav,\\n    object_, ol, optgroup, option, output,\\n    p, param, picture, pre, progress,\\n    q,\\n    s, script, section, select, small, source, span, strong, style, sub, summary, sup,\\n    table, tbody, td, template, textarea, tfoot, th, thead, time, title, tr, track,\\n    u, ul,\\n    var, video,\\n    wbr,\\n]\\n# fmt: on\\n\\n\\n# Register all the default (aka \\\"built-in\\\") Element classes.\\nElement.register_element_classes(ELEMENT_CLASSES)\\n\\n\\nclass Page:\\n    \\\"\\\"\\\"Represents the whole page.\\\"\\\"\\\"\\n\\n    def __init__(self):\\n        self.html = Element.wrap_dom_element(document.documentElement)\\n        self.body = Element.wrap_dom_element(document.body)\\n        self.head = Element.wrap_dom_element(document.head)\\n\\n    def __getitem__(self, selector):\\n        \\\"\\\"\\\"Get an item on the page.\\n\\n        We don't index/slice the page like we do with `Element` and `ElementCollection`\\n        as it is a bit muddier what the ideal behavior should be. Instead, we simply\\n        use this as a convenience method to `find` elements on the page.\\n        \\\"\\\"\\\"\\n        return self.find(selector)\\n\\n    @property\\n    def title(self):\\n        \\\"\\\"\\\"Return the page title.\\\"\\\"\\\"\\n        return document.title\\n\\n    @title.setter\\n    def title(self, value):\\n        \\\"\\\"\\\"Set the page title.\\\"\\\"\\\"\\n        document.title = value\\n\\n    def append(self, *items):\\n        \\\"\\\"\\\"Shortcut for `page.body.append`.\\\"\\\"\\\"\\n        self.body.append(*items)\\n\\n    def find(self, selector):  # NOQA\\n        \\\"\\\"\\\"Find all elements that match the specified selector.\\n\\n        Return the results as a (possibly empty) `ElementCollection`.\\n        \\\"\\\"\\\"\\n        return ElementCollection.wrap_dom_elements(document.querySelectorAll(selector))\\n\\n\\npage = Page()\\n\",\n    \"websocket.py\": \"import js\\nfrom pyscript.util import as_bytearray\\n\\ncode = \\\"code\\\"\\nprotocols = \\\"protocols\\\"\\nreason = \\\"reason\\\"\\n\\n\\nclass EventMessage:\\n    def __init__(self, event):\\n        self._event = event\\n\\n    def __getattr__(self, attr):\\n        value = getattr(self._event, attr)\\n\\n        if attr == \\\"data\\\" and not isinstance(value, str):\\n            if hasattr(value, \\\"to_py\\\"):\\n                return value.to_py()\\n            # shims in MicroPython\\n            return memoryview(as_bytearray(value))\\n\\n        return value\\n\\n\\nclass WebSocket(object):\\n    CONNECTING = 0\\n    OPEN = 1\\n    CLOSING = 2\\n    CLOSED = 3\\n\\n    def __init__(self, **kw):\\n        url = kw[\\\"url\\\"]\\n        if protocols in kw:\\n            socket = js.WebSocket.new(url, kw[protocols])\\n        else:\\n            socket = js.WebSocket.new(url)\\n        object.__setattr__(self, \\\"_ws\\\", socket)\\n\\n        for t in [\\\"onclose\\\", \\\"onerror\\\", \\\"onmessage\\\", \\\"onopen\\\"]:\\n            if t in kw:\\n                socket[t] = kw[t]\\n\\n    def __getattr__(self, attr):\\n        return getattr(self._ws, attr)\\n\\n    def __setattr__(self, attr, value):\\n        if attr == \\\"onmessage\\\":\\n            self._ws[attr] = lambda e: value(EventMessage(e))\\n        else:\\n            self._ws[attr] = value\\n\\n    def close(self, **kw):\\n        if code in kw and reason in kw:\\n            self._ws.close(kw[code], kw[reason])\\n        elif code in kw:\\n            self._ws.close(kw[code])\\n        else:\\n            self._ws.close()\\n\\n    def send(self, data):\\n        if isinstance(data, str):\\n            self._ws.send(data)\\n        else:\\n            buffer = js.Uint8Array.new(len(data))\\n            for pos, b in enumerate(data):\\n                buffer[pos] = b\\n            self._ws.send(buffer)\\n\",\n    \"workers.py\": \"import js as _js\\nfrom polyscript import workers as _workers\\n\\n_get = _js.Reflect.get\\n\\n\\ndef _set(script, name, value=\\\"\\\"):\\n    script.setAttribute(name, value)\\n\\n\\n# this solves an inconsistency between Pyodide and MicroPython\\n# @see https://github.com/pyscript/pyscript/issues/2106\\nclass _ReadOnlyProxy:\\n    def __getitem__(self, name):\\n        return _get(_workers, name)\\n\\n    def __getattr__(self, name):\\n        return _get(_workers, name)\\n\\n\\nworkers = _ReadOnlyProxy()\\n\\n\\nasync def create_named_worker(src=\\\"\\\", name=\\\"\\\", config=None, type=\\\"py\\\"):\\n    from json import dumps\\n\\n    if not src:\\n        raise ValueError(\\\"Named workers require src\\\")\\n\\n    if not name:\\n        raise ValueError(\\\"Named workers require a name\\\")\\n\\n    s = _js.document.createElement(\\\"script\\\")\\n    s.type = type\\n    s.src = src\\n    _set(s, \\\"worker\\\")\\n    _set(s, \\\"name\\\", name)\\n\\n    if config:\\n        _set(s, \\\"config\\\", isinstance(config, str) and config or dumps(config))\\n\\n    _js.document.body.append(s)\\n    return await workers[name]\\n\"\n  }\n};\n","import { typedSet } from \"type-checked-collections\";\nimport { dedent } from \"polyscript/exports\";\nimport toJSONCallback from \"to-json-callback\";\n\nimport { stdlib, optional } from \"./stdlib.js\";\n\nexport const main = (name) => hooks.main[name];\nexport const worker = (name) => hooks.worker[name];\n\nconst code = (hooks, branch, key, lib) => {\n    hooks[key] = () => {\n        const arr = lib ? [lib] : [];\n        arr.push(...branch(key));\n        return arr.map(dedent).join(\"\\n\");\n    };\n};\n\nexport const codeFor = (branch, type) => {\n    const pylib = type === \"mpy\" ? stdlib.replace(optional, \"\") : stdlib;\n    const hooks = {};\n    code(hooks, branch, `codeBeforeRun`, pylib);\n    code(hooks, branch, `codeBeforeRunAsync`, pylib);\n    code(hooks, branch, `codeAfterRun`);\n    code(hooks, branch, `codeAfterRunAsync`);\n    return hooks;\n};\n\nexport const createFunction = (self, name) => {\n    const cbs = [...worker(name)];\n    if (cbs.length) {\n        const cb = toJSONCallback(\n            self[`_${name}`] ||\n                (name.endsWith(\"Async\")\n                    ? async (wrap, xworker, ...cbs) => {\n                          for (const cb of cbs) await cb(wrap, xworker);\n                      }\n                    : (wrap, xworker, ...cbs) => {\n                          for (const cb of cbs) cb(wrap, xworker);\n                      }),\n        );\n        const a = cbs.map(toJSONCallback).join(\", \");\n        return Function(`return(w,x)=>(${cb})(w,x,...[${a}])`)();\n    }\n};\n\nconst SetFunction = typedSet({ typeof: \"function\" });\nconst SetString = typedSet({ typeof: \"string\" });\n\nexport const inputFailure = `\n    import builtins\n    def input(prompt=\"\"):\n        raise Exception(\"\\\\n           \".join([\n            \"input() doesn't work when PyScript runs in the main thread.\",\n            \"Consider using the worker attribute: https://pyscript.github.io/docs/2023.11.2/user-guide/workers/\"\n        ]))\n\n    builtins.input = input\n    del builtins\n    del input\n`;\n\nexport const hooks = {\n    main: {\n        /** @type {Set<function>} */\n        onWorker: new SetFunction(),\n        /** @type {Set<function>} */\n        onReady: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRunAsync: new SetFunction(),\n        /** @type {Set<function>} */\n        onAfterRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onAfterRunAsync: new SetFunction(),\n        /** @type {Set<string>} */\n        codeBeforeRun: new SetString([inputFailure]),\n        /** @type {Set<string>} */\n        codeBeforeRunAsync: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRun: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRunAsync: new SetString(),\n    },\n    worker: {\n        /** @type {Set<function>} */\n        onReady: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRunAsync: new SetFunction(),\n        /** @type {Set<function>} */\n        onAfterRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onAfterRunAsync: new SetFunction(),\n        /** @type {Set<string>} */\n        codeBeforeRun: new SetString(),\n        /** @type {Set<string>} */\n        codeBeforeRunAsync: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRun: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRunAsync: new SetString(),\n    },\n};\n","/*! (c) PyScript Development Team */\n\nimport stickyModule from \"sticky-module\";\nimport \"@ungap/with-resolvers\";\n\nimport {\n    INVALID_CONTENT,\n    Hook,\n    XWorker,\n    assign,\n    dedent,\n    define,\n    defineProperty,\n    dispatch,\n    queryTarget,\n    unescape,\n    whenDefined,\n} from \"polyscript/exports\";\n\nimport \"./all-done.js\";\nimport TYPES from \"./types.js\";\nimport { configs, relative_url } from \"./config.js\";\nimport sync from \"./sync.js\";\nimport bootstrapNodeAndPlugins from \"./plugins-helper.js\";\nimport { ErrorCode } from \"./exceptions.js\";\nimport { robustFetch as fetch, getText } from \"./fetch.js\";\nimport {\n    hooks,\n    main,\n    worker,\n    codeFor,\n    createFunction,\n    inputFailure,\n} from \"./hooks.js\";\n\nimport { stdlib, optional } from \"./stdlib.js\";\nexport { stdlib, optional, inputFailure };\n\n// generic helper to disambiguate between custom element and script\nconst isScript = ({ tagName }) => tagName === \"SCRIPT\";\n\n// Used to create either Pyodide or MicroPython workers\n// with the PyScript module available within the code\nconst [PyWorker, MPWorker] = [...TYPES.entries()].map(\n    ([TYPE, interpreter]) =>\n        /**\n         * A `Worker` facade able to bootstrap on the worker thread only a PyScript module.\n         * @param {string} file the python file to run ina worker.\n         * @param {{config?: string | object, async?: boolean}} [options] optional configuration for the worker.\n         * @returns {Promise<Worker & {sync: object}>}\n         */\n        async function PyScriptWorker(file, options) {\n            await configs.get(TYPE).plugins;\n            const xworker = XWorker.call(\n                new Hook(null, hooked.get(TYPE)),\n                file,\n                {\n                    ...options,\n                    type: interpreter,\n                },\n            );\n            assign(xworker.sync, sync);\n            return xworker.ready;\n        },\n);\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        PyWorker: exportedPyWorker,\n        MPWorker: exportedMPWorker,\n        hooks: exportedHooks,\n        config: exportedConfig,\n        whenDefined: exportedWhenDefined,\n    },\n    alreadyLive,\n] = stickyModule(\"@pyscript/core\", {\n    PyWorker,\n    MPWorker,\n    hooks,\n    config: {},\n    whenDefined,\n});\n\nexport {\n    TYPES,\n    relative_url,\n    exportedPyWorker as PyWorker,\n    exportedMPWorker as MPWorker,\n    exportedHooks as hooks,\n    exportedConfig as config,\n    exportedWhenDefined as whenDefined,\n};\n\nexport const offline_interpreter = (config) =>\n    config?.interpreter && relative_url(config.interpreter);\n\nconst hooked = new Map();\n\nfor (const [TYPE, interpreter] of TYPES) {\n    // avoid any dance if the module already landed\n    if (alreadyLive) break;\n\n    const dispatchDone = (element, isAsync, result) => {\n        if (isAsync) result.then(() => dispatch(element, TYPE, \"done\"));\n        else dispatch(element, TYPE, \"done\");\n    };\n\n    const { config, configURL, plugins, error } = configs.get(TYPE);\n\n    // create a unique identifier when/if needed\n    let id = 0;\n    const getID = (prefix = TYPE) => `${prefix}-${id++}`;\n\n    /**\n     * Given a generic DOM Element, tries to fetch the 'src' attribute, if present.\n     * It either throws an error if the 'src' can't be fetched or it returns a fallback\n     * content as source.\n     */\n    const fetchSource = async (tag, io, asText) => {\n        if (tag.hasAttribute(\"src\")) {\n            try {\n                return await fetch(tag.getAttribute(\"src\")).then(getText);\n            } catch (error) {\n                io.stderr(error);\n            }\n        }\n\n        if (asText) return dedent(tag.textContent);\n\n        const code = dedent(unescape(tag.innerHTML));\n        console.warn(\n            `Deprecated: use <script type=\"${TYPE}\"> for an always safe content parsing:\\n`,\n            code,\n        );\n        return code;\n    };\n\n    // register once any interpreter\n    let alreadyRegistered = false;\n\n    // allows lazy element features on code evaluation\n    let currentElement;\n\n    const registerModule = ({ XWorker, interpreter, io }) => {\n        // avoid multiple registration of the same interpreter\n        if (alreadyRegistered) return;\n        alreadyRegistered = true;\n\n        // automatically use the pyscript stderr (when/if defined)\n        // this defaults to console.error\n        function PyWorker(...args) {\n            const worker = XWorker(...args);\n            worker.onerror = ({ error }) => io.stderr(error);\n            return worker;\n        }\n\n        // enrich the Python env with some JS utility for main\n        interpreter.registerJsModule(\"_pyscript\", {\n            PyWorker,\n            js_import: (...urls) => Promise.all(urls.map((url) => import(url))),\n            get target() {\n                return isScript(currentElement)\n                    ? currentElement.target.id\n                    : currentElement.id;\n            },\n        });\n    };\n\n    // define the module as both `<script type=\"py\">` and `<py-script>`\n    // but only if the config didn't throw an error\n    if (!error) {\n        // ensure plugins are bootstrapped already before custom type definition\n        // NOTE: we cannot top-level await in here as plugins import other utilities\n        //       from core.js itself so that custom definition should not be blocking.\n        plugins.then(() => {\n            // possible early errors sent by polyscript\n            const errors = new Map();\n\n            // specific main and worker hooks\n            const hooks = {\n                main: {\n                    ...codeFor(main, TYPE),\n                    async onReady(wrap, element) {\n                        registerModule(wrap);\n\n                        // allows plugins to do whatever they want with the element\n                        // before regular stuff happens in here\n                        for (const callback of main(\"onReady\"))\n                            await callback(wrap, element);\n\n                        // now that all possible plugins are configured,\n                        // bail out if polyscript encountered an error\n                        if (errors.has(element)) {\n                            let { message } = errors.get(element);\n                            errors.delete(element);\n                            const clone = message === INVALID_CONTENT;\n                            message = `(${ErrorCode.CONFLICTING_CODE}) ${message} for `;\n                            message += element.cloneNode(clone).outerHTML;\n                            wrap.io.stderr(message);\n                            return;\n                        }\n\n                        if (isScript(element)) {\n                            const {\n                                attributes: { async: isAsync, target },\n                            } = element;\n                            const hasTarget = !!target?.value;\n                            const show = hasTarget\n                                ? queryTarget(element, target.value)\n                                : document.createElement(\"script-py\");\n\n                            if (!hasTarget) {\n                                const { head, body } = document;\n                                if (head.contains(element)) body.append(show);\n                                else element.after(show);\n                            }\n                            if (!show.id) show.id = getID();\n\n                            // allows the code to retrieve the target element via\n                            // document.currentScript.target if needed\n                            defineProperty(element, \"target\", { value: show });\n\n                            // notify before the code runs\n                            dispatch(element, TYPE, \"ready\");\n                            dispatchDone(\n                                element,\n                                isAsync,\n                                wrap[`run${isAsync ? \"Async\" : \"\"}`](\n                                    await fetchSource(element, wrap.io, true),\n                                ),\n                            );\n                        } else {\n                            // resolve PyScriptElement to allow connectedCallback\n                            element._wrap.resolve(wrap);\n                        }\n                        console.debug(\"[pyscript/main] PyScript Ready\");\n                    },\n                    onWorker(_, xworker) {\n                        assign(xworker.sync, sync);\n                        for (const callback of main(\"onWorker\"))\n                            callback(_, xworker);\n                    },\n                    onBeforeRun(wrap, element) {\n                        currentElement = element;\n                        bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onBeforeRun\",\n                        );\n                    },\n                    onBeforeRunAsync(wrap, element) {\n                        currentElement = element;\n                        return bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onBeforeRunAsync\",\n                        );\n                    },\n                    onAfterRun(wrap, element) {\n                        bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onAfterRun\",\n                        );\n                    },\n                    onAfterRunAsync(wrap, element) {\n                        return bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onAfterRunAsync\",\n                        );\n                    },\n                },\n                worker: {\n                    ...codeFor(worker, TYPE),\n                    // these are lazy getters that returns a composition\n                    // of the current hooks or undefined, if no hook is present\n                    get onReady() {\n                        return createFunction(this, \"onReady\", true);\n                    },\n                    get onBeforeRun() {\n                        return createFunction(this, \"onBeforeRun\", false);\n                    },\n                    get onBeforeRunAsync() {\n                        return createFunction(this, \"onBeforeRunAsync\", true);\n                    },\n                    get onAfterRun() {\n                        return createFunction(this, \"onAfterRun\", false);\n                    },\n                    get onAfterRunAsync() {\n                        return createFunction(this, \"onAfterRunAsync\", true);\n                    },\n                },\n            };\n\n            hooked.set(TYPE, hooks);\n\n            define(TYPE, {\n                config,\n                configURL,\n                interpreter,\n                hooks,\n                env: `${TYPE}-script`,\n                version: offline_interpreter(config),\n                onerror(error, element) {\n                    errors.set(element, error);\n                },\n            });\n\n            customElements.define(\n                `${TYPE}-script`,\n                class extends HTMLElement {\n                    constructor() {\n                        assign(super(), {\n                            _wrap: Promise.withResolvers(),\n                            srcCode: \"\",\n                            executed: false,\n                        });\n                    }\n                    get id() {\n                        return super.id || (super.id = getID());\n                    }\n                    set id(value) {\n                        super.id = value;\n                    }\n                    async connectedCallback() {\n                        if (!this.executed) {\n                            this.executed = true;\n                            const isAsync = this.hasAttribute(\"async\");\n                            const { io, run, runAsync } = await this._wrap\n                                .promise;\n                            this.srcCode = await fetchSource(\n                                this,\n                                io,\n                                !this.childElementCount,\n                            );\n                            this.replaceChildren();\n                            this.style.display = \"block\";\n                            dispatch(this, TYPE, \"ready\");\n                            dispatchDone(\n                                this,\n                                isAsync,\n                                (isAsync ? runAsync : run)(this.srcCode),\n                            );\n                        }\n                    }\n                },\n            );\n        });\n    }\n\n    // export the used config without allowing leaks through it\n    exportedConfig[TYPE] = structuredClone(config);\n}\n"],"names":["stickyModule","name","value","global","globalThis","symbol","Symbol","for","known","Object","defineProperty","Promise","withResolvers","a","b","c","this","resolve","reject","promise","$$","css","root","document","querySelectorAll","$x","path","xpath","XPathEvaluator","createExpression","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","result","i","snapshotLength","push","snapshotItem","d","getOwnPropertyDescriptors","Response","prototype","isFunction","handler","get","p","k","hasOwnProperty","then","r","args","bypass","bind","direct","fetch$1","input","init","Proxy","fetch","workers","Map","map","has","set","ignore","Set","workersHandler","freeze","_","w","sync","env","self","deserialize","serialized","$","as","out","index","unpair","type","arr","object","key","Date","source","flags","RegExp","add","message","BigInt","deserializer","EMPTY","toString","keys","typeOf","asString","call","slice","includes","shouldSkip","TYPE","serialize","json","lossy","strict","pair","entry","TypeError","valueOf","toJSON","entries","toISOString","serializer","parse","$parse","stringify","$stringify","JSON","options","str","any","ARRAY","FUNCTION","NULL","NUMBER","OBJECT","STRING","SYMBOL","UNDEFINED","uid","ids","values","id","hold","ArrayBuffer","Atomics","$Atomics","isArray","Array","create","getPrototypeOf","TypedArray","Int32Array","views","extend","Class","SharedArrayBuffer","constructor","rest","super","ignoreList","WeakSet","ignorePatch","isChannel","event","channel","data","yes","at","stopImmediatePropagation","preventDefault","isObject","transferred","WeakMap","transferViews","transfer","visited","waitAsyncPatch","Worker","onmessage","postMessage","actionWait","view","currentTarget","origin","lastEventId","ports","dispatchEvent","MessageEvent","dispatch","BigInt64Array","polyfill","asModule","url","waitAsync","CHANNEL","crypto","randomUUID","addListener","addEventListener","register","serviceWorker","s","sw","done","join","delete","getRegistration","ready","controller","installing","waiting","active","state","location","reload","once","notify","worker","getData","waitAsyncPoly","URL","href","navigator","ACTION","_view","_id","_index","length","actionNotify","size","postData","BYTES_PER_ELEMENT","I32_BYTES","UI16_BYTES","Uint16Array","decoder","TextDecoder","buffers","seppuku","invoke","i32View","isSync","transform","deadlock","timer","setTimeout","console","warn","pop","sb","clearTimeout","bytes","ui16a","buffer","sub","subarray","decode","coincident$1","waitLength","async","callback","results","actionLength","$Worker","proxy","details","cb","createProxy","Error","charCodeAt","actionFill","numeric","fromEntries","OWN_KEYS","DESTRUCT","ownKeys","Reflect","filter","toSymbol","keyFor","MAIN","WORKER","registry","FinalizationRegistry","onGarbageCollected","held","debug","String","nullHandler","return","token","target","EventTarget","eventsHandler","listener","concat","re","place","q","f","exports","coincident","toEntry","__worker__","proxies","onGC","ref","fromEntry","numericTYPE","fn","deref","Event","methods","method","handleEvent","WeakRef","startsWith","fromSymbol","TRAP","had","drop","descriptor","asEntry","io","stdio","context","localIO","buffered","stderr","error","stdout","log","engine","interpreter","EOL","maybeUI8","Uint8Array","splice","require","run","code","Function","dummy","module","registerJSModule","runAsync","runEvent","writeFile","dedent","string","t","l","arguments","content","line","split","trim","test","replace","$1","es","unes","cape","m","tpl","unescape","un","assign","defineProperties","all","absoluteURL","base","nodeInfo","node","tag","tagName","what","CE","CustomEvent","bubbles","detail","createResolved","config","dropLine0","createOverload","before","after","js_modules","jsModules","JSModules","field","modules","registerJSModules","importJS","import","esm","importCSS","onload","onerror","querySelector","head","append","createElement","rel","isCSS","pathname","RUNNING_IN_WORKER","window","FS","PATH","PATH_FS","absPath","dirPath","dirname","mkdirTree","canOwn","tree","current","branch","mkdir","cwd","joinPaths","parts","res","part","fetchBuffer","baseURL","arrayBuffer","fetchPaths","config_fetch","files","to_file","from","undefined","endsWith","flatMap","to_folder","file","filename","lastIndexOf","calculateFetchPaths","fillName","dest","parseTemplate","src","SyntaxError","fetchFiles","config_files","targets","sourceDest","calculateFilesPaths","fetchJSModules","main","promises","STORAGE","READONLY","READWRITE","defaultOptions","durability","prefix","IDBMap","db","transaction","how","onsuccess","objectStore","indexedDB","open","onupgradeneeded","objectStoreNames","createObjectStore","oncomplete","boundDispatch","isTrusted","close","store","count","clear","forEach","getKey","getAllKeys","put","toStringTag","IDBMapSync","queue","loader","lazy_py_modules","packages","pyimport","storage","registerJsModule","getFormat","runPython","runPythonAsync","globals","mip","TextEncoder","encode","toml","text","micropython","version","loadMicroPython","linebuffer","py_imports","importPackages","PyProxy","toJs","_module","fs","format","extractDir","blob","Blob","BlobReader","Uint8ArrayWriter","ZipReader","zipReader","getEntries","directory","TMP","mpyPackage","install","toJsOptions","dict_converter","overrideFunction","overrideMethod","overridden","applyOverride","destroy","patchArgs","copy","apply","pyodide","loadPyodide","experimental_create_proxy","indexURL","unpackArchive","ffi","loadPackage","micropip","keep_going","jsType","ruby_wasm_wasi","experimental","DefaultRubyVM","WebAssembly","compile","vm","eval","evalAsync","wrap","wasmoon","LuaFactory","LuaLibraries","createEngine","getTable","Base","setField","doStringSync","doString","cmodule","writeFileShim","shelter","output","captureR","webr","WebR","Shelter","evalRVoid","configs","selectors","prefixes","getConfigURLAndType","configURL","parseString","getRuntime","absolute","getRuntimeID","toJSONCallback","isAsync","beforeRun","afterRun","js","patch","resolved","polluteJS","patched","Hook$1","hooks","onWorker","jsHooks","codeHooks","xworker","createObjectURL","service_worker","isHook","Hook","resolver","bootstrap","writable","configurable","isError","INVALID_CONTENT","workerURL","element","attributes","childElementCount","innerHTML","localName","textContent","queryTarget","script","idOrSelector","parent","parentNode","getRoot","getElementById","targetDescriptor","handle","handled","interpreters","getValue","getDetails","runtime","XWorker","$xworker","closest","body","wn","versionValue","configValue","workerName","targetValue","currentScript","execute","queueMicrotask","awaitInterpreter","available","ownerElement","el","getAttribute","addAllListeners","disabled","CUSTOM_SELECTORS","customObserver","types","waitList","handleCustomType","selector","matches","XW","custom","hasAttribute","workerError","defaultRegistry","hook","structuredClone","suffix","beforeCB","afterCB","onReady","dontBotherCount","whenDefined","define","alreadyLive","$customObserver","dontBother","indexOf","remove","$whenDefined","$env","$Hook","$XWorker","mo","MutationObserver","records","attributeName","addedNodes","nodeType","shouldHandle","observe","childList","subtree","attachShadow","Element","TYPES","waitForIt","allPlugins","ErrorCode","GENERIC","CONFLICTING_CODE","BAD_CONFIG","MICROPIP_INSTALL_ERROR","BAD_PLUGIN_FILE_EXTENSION","NO_DEFAULT_EXPORT","TOP_LEVEL_AWAIT","FETCH_ERROR","FETCH_NAME_ERROR","FETCH_UNAUTHORIZED_ERROR","FETCH_FORBIDDEN_ERROR","FETCH_NOT_FOUND_ERROR","FETCH_SERVER_ERROR","FETCH_UNAVAILABLE_ERROR","UserError","errorCode","messageType","FetchError","getText","response","robustFetch","err","errMsg","ok","errorMsg","status","statusText","configDetails","ext","expected","badURL","conflictError","reason","relative_url","syntaxError","plugins","parsed","pyElement","pyConfigs","attrConfigs","some","e","toBeAwaited","default","is_pyterminal","sleep","seconds","bootstrapNodeAndPlugins","validator","checks","v","C","o","failure","kind","typedSet","check","fail","typeof","instanceof","checkFail","createSet","python","paths","array","_path","write","literal","pyscript","stdlib","optional","lib","codeFor","pylib","createFunction","cbs","SetFunction","SetString","inputFailure","onBeforeRun","onBeforeRunAsync","onAfterRun","onAfterRunAsync","codeBeforeRun","codeBeforeRunAsync","codeAfterRun","codeAfterRunAsync","isScript","PyWorker","MPWorker","hooked","exportedPyWorker","exportedMPWorker","exportedHooks","exportedConfig","exportedWhenDefined","offline_interpreter","dispatchDone","getID","fetchSource","asText","currentElement","alreadyRegistered","registerModule","js_import","urls","errors","clone","cloneNode","outerHTML","hasTarget","show","contains","_wrap","customElements","HTMLElement","srcCode","executed","connectedCallback","replaceChildren","style","display"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,62]}