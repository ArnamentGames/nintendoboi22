const e=(e,n,t=globalThis)=>{const s=Symbol.for(e),r=s in t;return[r?t[s]:Object.defineProperty(t,s,{value:n})[s],r]};Promise.withResolvers||(Promise.withResolvers=function(){var e,n,t=new this((function(t,s){e=t,n=s}));return{resolve:e,reject:n,promise:t}});const n=(e,n=document)=>[...n.querySelectorAll(e)],t=(e,n=document)=>{const t=(new XPathEvaluator).createExpression(e).evaluate(n,XPathResult.ORDERED_NODE_SNAPSHOT_TYPE),s=[];for(let e=0,{snapshotLength:n}=t;e<n;e++)s.push(t.snapshotItem(e));return s},s=Object.getOwnPropertyDescriptors(Response.prototype),r=e=>"function"==typeof e,o={get:(e,n)=>s.hasOwnProperty(n)?((e,n,{get:t,value:s})=>t||!r(s)?e.then((e=>e[n])):(...t)=>e.then((e=>e[n](...t))))(e,n,s[n]):((e,n)=>r(n)?n.bind(e):n)(e,e[n])};var a=(e,...n)=>new Proxy(fetch(e,...n),o);const i=new Proxy(new Map,{get:(e,n)=>(e.has(n)||e.set(n,Promise.withResolvers()),e.get(n))}),l=new Set(["__dict__","constructor","get","has","includes","next","set","then"]),c=new Proxy(Object.freeze({}),{get:(e,n)=>"string"!=typeof n||l.has(n)?void 0:i[n].promise.then((e=>e.sync))}),p="object"==typeof self?self:globalThis,u=e=>((e,n)=>{const t=(n,t)=>(e.set(t,n),n),s=r=>{if(e.has(r))return e.get(r);const[o,a]=n[r];switch(o){case 0:case-1:return t(a,r);case 1:{const e=t([],r);for(const n of a)e.push(s(n));return e}case 2:{const e=t({},r);for(const[n,t]of a)e[s(n)]=s(t);return e}case 3:return t(new Date(a),r);case 4:{const{source:e,flags:n}=a;return t(new RegExp(e,n),r)}case 5:{const e=t(new Map,r);for(const[n,t]of a)e.set(s(n),s(t));return e}case 6:{const e=t(new Set,r);for(const n of a)e.add(s(n));return e}case 7:{const{name:e,message:n}=a;return t(new p[e](n),r)}case 8:return t(BigInt(a),r);case"BigInt":return t(Object(BigInt(a)),r)}return t(new p[o](a),r)};return s})(new Map,e)(0),f="",{toString:d}={},{keys:m}=Object,h=e=>{const n=typeof e;if("object"!==n||!e)return[0,n];const t=d.call(e).slice(8,-1);switch(t){case"Array":return[1,f];case"Object":return[2,f];case"Date":return[3,f];case"RegExp":return[4,f];case"Map":return[5,f];case"Set":return[6,f]}return t.includes("Array")?[1,t]:t.includes("Error")?[7,t]:[2,t]},_=([e,n])=>0===e&&("function"===n||"symbol"===n),y=(e,{json:n,lossy:t}={})=>{const s=[];return((e,n,t,s)=>{const r=(e,n)=>{const r=s.push(e)-1;return t.set(n,r),r},o=s=>{if(t.has(s))return t.get(s);let[a,i]=h(s);switch(a){case 0:{let n=s;switch(i){case"bigint":a=8,n=s.toString();break;case"function":case"symbol":if(e)throw new TypeError("unable to serialize "+i);n=null;break;case"undefined":return r([-1],s)}return r([a,n],s)}case 1:{if(i)return r([i,[...s]],s);const e=[],n=r([a,e],s);for(const n of s)e.push(o(n));return n}case 2:{if(i)switch(i){case"BigInt":return r([i,s.toString()],s);case"Boolean":case"Number":case"String":return r([i,s.valueOf()],s)}if(n&&"toJSON"in s)return o(s.toJSON());const t=[],l=r([a,t],s);for(const n of m(s))!e&&_(h(s[n]))||t.push([o(n),o(s[n])]);return l}case 3:return r([a,s.toISOString()],s);case 4:{const{source:e,flags:n}=s;return r([a,{source:e,flags:n}],s)}case 5:{const n=[],t=r([a,n],s);for(const[t,r]of s)(e||!_(h(t))&&!_(h(r)))&&n.push([o(t),o(r)]);return t}case 6:{const n=[],t=r([a,n],s);for(const t of s)!e&&_(h(t))||n.push(o(t));return t}}const{message:l}=s;return r([a,{name:i,message:l}],s)};return o})(!(n||t),!!n,new Map,s)(e),s},{parse:g,stringify:w}=JSON,b={json:!0,lossy:!0};var v=Object.freeze({__proto__:null,parse:e=>u(g(e)),stringify:e=>w(y(e,b))});const E="array",k="function",R="null",T="number",S="object",x="string",j="symbol",M="undefined";let A=0;const O=new Map,N=new Map,C=e=>N.get(e),W=e=>{if(!O.has(e)){let n;for(;N.has(n=A++););O.set(e,n),N.set(n,e)}return O.get(e)},{ArrayBuffer:P,Atomics:$,Promise:I}=globalThis,{isArray:L}=Array,{create:H,getPrototypeOf:U,values:F}=Object,z=U(Int32Array),D=H($),B=()=>I.withResolvers();let q=0;const J=new Map,G=(e,n)=>class extends e{constructor(e,...t){super(e,...t),e instanceof n&&J.set(this,[q++,0,B()])}},Y=new WeakSet,K=e=>(Y.add(e),e),V=(e,n)=>{const{data:t}=e,s=L(t)&&(t.at(0)===n||0===t.at(1)&&!n);return s&&(e.stopImmediatePropagation(),e.preventDefault()),s},X=e=>null!==e&&"object"==typeof e&&!Y.has(e),Z=new WeakMap,Q=(e,n,t)=>{if(J.has(e))n.set(e,J.get(e)[0]);else if(!(e instanceof z||e instanceof P))for(const s of F(e))X(s)&&!t.has(s)&&(t.add(s),Q(s,n,t))},ee=(...e)=>({value:new I((n=>{let t=new Worker("data:application/javascript,onmessage%3De%3D%3EpostMessage(!Atomics.wait(...e.data))");t.onmessage=()=>n("ok"),t.postMessage(e)}))}),ne=(e,n,t)=>{for(const[t,s]of n)Z.set(t,[s,e.currentTarget]);(({currentTarget:e,type:n,origin:t,lastEventId:s,source:r,ports:o},a)=>{e.dispatchEvent(new MessageEvent(n,{data:a,origin:t,lastEventId:s,source:r,ports:o}))})(e,t)};let{BigInt64Array:te,Int32Array:se,SharedArrayBuffer:re,Worker:oe}=globalThis,ae=e=>e,ie=!1;const le=e=>({...e,type:"module"});try{new re(4),oe=class extends oe{constructor(e,n){super(e,le(n))}},D.waitAsync||(D.waitAsync=ee)}catch(e){const n=crypto.randomUUID(),t=new Map,s=(e,n,t,...s)=>{e.addEventListener(n,t,...s)},r=({serviceWorker:e},r,o)=>{let a,i=!0;s(e,"message",(e=>{if(V(e,n)){const[s,r,o]=e.data,i=[r,o].join(","),l=e=>{t.delete(i),a.postMessage([n,r,o,e])},c=t.get(i);if(c)l(c);else{const{promise:e,resolve:n}=B();t.set(i,n),e.then(l)}}})),e.getRegistration(r).then((n=>n??e.register(r))).then((function n(t){i=i&&!!e.controller,a=t.installing||t.waiting||t.active,"activated"===a.state?i?o():location.reload():s(a,"statechange",(()=>n(t)),{once:!0})}))};ae=K,ie=!0,D.notify=(e,s)=>{const[r,o]=(e=>Z.get(e))(e),a=[r,s].join(","),i=t.get(a);return i?i(e):t.set(a,e),o.postMessage([n,1,e,r,s]),0},D.waitAsync=(e,...n)=>{const[t,s]=((e,n)=>{const t=J.get(e),[s,r,{promise:o}]=t;return t[1]=n,[s,o]})(e,...n);return{value:s}},re=class extends P{},te=G(te,re),se=G(se,re);let o=null;oe=class extends oe{constructor(e,t){let a=t?.serviceWorker||"";if(a){if(a=new URL(a,location.href).href,t={...t,serviceWorker:a},!o){const{promise:e,resolve:n}=B();r(navigator,a,n),o=e}o.then((()=>super.postMessage([n,3])))}super(e,le(t)),super.postMessage([n,0,t]),s(this,"message",(e=>{if(V(e,n)){const[n,t,...s]=e.data;switch(t){case 1:((e,n,t)=>{for(const[s,[r,o,{resolve:a}]]of J)if(n===r&&t===o){for(let n=0;n<e.length;n++)s[n]=e[n];J.delete(s),a("ok");break}})(...s);break;case 2:ne(e,...s)}}}))}postMessage(e,...t){return super.postMessage(((e,n)=>{const t=new Map;return X(n)&&Q(n,t,new Set),t.size?[e,2,t,n]:n})(n,e),...t)}}}const{BYTES_PER_ELEMENT:ce}=Int32Array,{BYTES_PER_ELEMENT:pe}=Uint16Array,{notify:ue}=D,fe=new TextDecoder("utf-16"),de=new WeakSet,me=(...e)=>(de.add(e),e);let he="";let _e=0;const ye=([e,n,t,s,r,o,a,i,l],c)=>(...p)=>{let u=""!==he,f=0;u&&"="!==he[0]&&"-"!==he[0]&&(f=((e,n)=>setTimeout(console.warn,3e3,`ðŸ’€ðŸ”’ - proxy.${e}() in proxy.${n}()`))(c,he));const d=_e++,m=[];de.has(p.at(-1)||m)&&de.delete(m=p.pop());const h=t(i?p.map(i):p);let _=n(2*ce);return a([e,2,c,d,_,h,s],{transfer:m}),l(_,0).value.then((()=>{u&&clearTimeout(f);const t=_[1];if(!t)return;const s=pe*t;return _=n(s+s%ce),a([e,1,d,_]),l(_,0).value.then((()=>{const e=new Uint16Array(_.buffer),n=o?e.subarray(0,t):e.slice(0,t);return r(fe.decode(n))}))}))};var ge=({parse:e,stringify:n,transform:t}=JSON)=>{const s=((e,n)=>async(t,s,[r,o,a,i,l])=>{l&&(he=r);try{const r=await t(...i);if(void 0!==r){const t=e(n?n(r):r);s.set(o,t),a[1]=t.length}}finally{l&&(he=""),a[0]=1,ue(a,0)}})(n,t),r=crypto.randomUUID();return{Worker:class extends oe{constructor(n,o){const a=new Map,i=new Map;super(n,o),this.proxy=((e,n)=>new Proxy(n,{get:(n,t)=>{let s;return"then"!==t&&(s=n.get(t),s||(s=ye(e,t),n.set(t,s))),s},set:(e,n,t)=>"then"!==n&&!!e.set(n,t)}))([r,e=>new se(new re(e)),ae,!1,e,ie,(...e)=>this.postMessage(...e),t,D.waitAsync],a),this.postMessage(ae([r,0,o])),this.addEventListener("message",(e=>{if(V(e,r)){const[n,t,...r]=e.data;switch(t){case 2:((e,n,t,s)=>{const[r]=s,o=t.get(r);if(!o)throw new Error(`Unknown proxy.${r}()`);e(o,n,s)})(s,i,a,r);break;case 1:((e,[n,t])=>{const s=e.get(n);e.delete(n);for(let e=new Uint16Array(t.buffer),n=0,{length:r}=s;n<r;n++)e[n]=s.charCodeAt(n);ue(t,0)})(i,r)}}}))}},polyfill:ie,transfer:me}},we=Object.fromEntries([E,"bigint","boolean",k,R,T,S,x,j,M].map(((e,n)=>[e,n])));const be="ownKeys",ve="destruct",{[be]:Ee}=Reflect,ke=new Map(Ee(Symbol).filter((e=>typeof Symbol[e]===j)).map((e=>[Symbol[e],e]))),Re=e=>ke.get(e)||`.${Symbol.keyFor(e)||""}`,Te="b87ec809-9df6-4389-a29e-bc91090db4dc",Se="="+Te,xe="-"+Te,je=new FinalizationRegistry((([e,n,t])=>{t&&console.debug(`Held value ${String(n)} not relevant anymore`),e(n)})),Me=Object.create(null),Ae=(e,n,{debug:t,handler:s,return:r,token:o=e}=Me)=>{const a=r||new Proxy(e,s||Me),i=[a,[n,e,!!t]];return!1!==o&&i.push(o),je.register(...i),a},{addEventListener:Oe}=EventTarget.prototype,Ne=new WeakMap;Reflect.defineProperty(EventTarget.prototype,"addEventListener",{value(e,n,...t){const s=t.at(0)?.invoke;if(s){let n=Ne.get(this);n||(n=new Map,Ne.set(this,n)),n.set(e,[].concat(s)),delete t[0].invoke}return Oe.call(this,e,n,...t)}});const{isArray:Ce}=Array;const{url:We}=import.meta,Pe=/import\((['"])([^)]+?\.js)\1\)/g,$e=(e,n,t)=>`import(${n}${new URL(t,We).href}${n})`,{Worker:Ie}=(e=>{const n=ge(e),t=e=>{const n=typeof e;switch(n){case S:return null===e?[we[R],e]:e===globalThis?[we[S],null]:Ce(e)?[we[E],W(e)]:[we[S],e instanceof z?e:W(e)];case k:return[we[k],W(e)];case j:return[we[j],Re(e)];default:return[we[n],e]}};class s extends n.Worker{constructor(e,n){const{proxy:s}=super(e,n),{[xe]:r}=s,o=new Map,a=e=>{o.delete(e),r(ve,e)},i=([e,n])=>{switch(e){case we[S]:if(null===n)return globalThis;if(typeof n===T)return C(n);if(!(n instanceof z))for(const e in n)n[e]=i(n[e]);return n;case we[E]:return typeof n===T?C(n):n.map(i);case we[k]:switch(typeof n){case T:return C(n);case x:{let e=o.get(n)?.deref();return e||(e=Ae(n,a,{token:!1,return:function(...e){return e.length&&e[0]instanceof Event&&(e=>{const{currentTarget:n,target:t,type:s}=e,r=Ne.get(n||t)?.get(s);if(r)for(const n of r)e[n]()})(e[0]),r("apply",n,t(this),e.map(t)).then(i)}}),o.set(n,new WeakRef(e))),e}}case we[j]:return(e=>{if(e.startsWith("."))return Symbol.for(e.slice(1));for(const[n,t]of ke)if(t===e)return n})(n);default:return n}};s[Se]=(e,n,...s)=>{if(e===ve)(e=>{const[n,t]=typeof e===T?[N,O]:[O,N],s=n.has(e);s&&(t.delete(n.get(e)),n.delete(e))})(n);else{const r=Reflect[e],o=null==n?globalThis:C(n);switch(e){case"defineProperty":{const[e,n]=s.map(i);return t(r(o,e,n))}case"getOwnPropertyDescriptor":{const e=r(o,...s.map(i));if(e){const{get:n,set:s,value:r}=e;n&&(e.get=t(n)),s&&(e.set=t(s)),r&&(e.value=t(r))}return[we[e?S:M],e]}case be:return[we[E],r(o).map(t)];default:return((e,n,s)=>t(e(n,...s.map(i))))(r,o,s)}}}}}return{...n,Worker:s}})(v);const Le=new WeakMap,He=e=>{const n=e||console,t={buffered:Fe,stderr:(n.stderr||console.error).bind(n),stdout:(n.stdout||console.log).bind(n)};return{stderr:(...e)=>t.stderr(...e),stdout:(...e)=>t.stdout(...e),async get(e){const n=await e;return Le.set(n,t),n}}},Ue=new TextDecoder,Fe=(e,n=10)=>{const t=[];return s=>{if(s instanceof Uint8Array)for(const r of s)r===n?e(Ue.decode(new Uint8Array(t.splice(0)))):t.push(r);else e(s)}},ze=new Map,De=e=>ze.get(e),Be=(e,n)=>{try{return Function("require",n)(De)}catch(n){Le.get(e).stderr(n)}};var qe={type:"dummy",module:()=>"data:application/javascript,",engine:e=>He().get(e),registerJSModule(e,n,t){ze.set(n,t)},run:Be,runAsync:Be,runEvent:async(e,n,t)=>{try{await Function("require","e",`return ${n}(e)`)(De,t)}catch(n){Le.get(e).stderr(n)}},transform:(e,n)=>n,writeFile(){}};const Je={object(...e){return this.string(function(e){for(var n=e[0],t=1,s=arguments.length;t<s;t++)n+=arguments[t]+e[t];return n}(...e))},string(e){for(const n of e.split(/[\r\n]+/))if(n.trim().length){/^(\s+)/.test(n)&&(e=e.replace(new RegExp("^"+RegExp.$1,"gm"),""));break}return e}},{replace:Ge}="",Ye=/&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g,Ke={"&amp;":"&","&#38;":"&","&lt;":"<","&#60;":"<","&gt;":">","&#62;":">","&apos;":"'","&#39;":"'","&quot;":'"',"&#34;":'"'},Ve=e=>Ke[e],Xe=(e,...n)=>Je[typeof e](e,...n),Ze=e=>Ge.call(e,Ye,Ve),{isArray:Qe}=Array,{assign:en,create:nn,defineProperties:tn,defineProperty:sn,entries:rn}=Object,{all:on,resolve:an}=new Proxy(Promise,{get:(e,n)=>e[n].bind(e)}),ln=(e,n=location.href)=>new URL(e,n.replace(/^blob:/,"")).href;let cn=0;const pn=(e,n)=>({id:e.id||(e.id=`${n}-w${cn++}`),tag:e.tagName}),un=(e,n,t,s=!1,r=CustomEvent)=>{e.dispatchEvent(new r(`${n}:${t}`,{bubbles:!0,detail:{worker:s}}))},fn=(e,n,t,s)=>({type:n,config:t,interpreter:s,io:Le.get(s),run:(n,...t)=>e.run(s,n,...t),runAsync:(n,...t)=>e.runAsync(s,n,...t),runEvent:(...n)=>e.runEvent(s,...n)}),dn=e=>e.replace(/^(?:\n|\r\n)/,""),mn=(e,n,t,s)=>{const r=e[n].bind(e);e[n]="run"===n?(e,n,...o)=>{t&&r(e,t,...o);const a=r(e,dn(n),...o);return s&&r(e,s,...o),a}:async(e,n,...o)=>{t&&await r(e,t,...o);const a=await r(e,dn(n),...o);return s&&await r(e,s,...o),a}},hn=Symbol.for("polyscript.js_modules"),_n=new Map;sn(globalThis,hn,{value:_n});const yn=new Proxy(_n,{get:(e,n)=>e.get(n),has:(e,n)=>e.has(n),ownKeys:e=>[...e.keys()]}),gn=(e,n)=>!n.startsWith("_"),wn=(e,n)=>new Proxy(e,{has:gn,get:(e,t)=>e[n][t]}),bn=(e,n,t,s)=>{if("pyodide"===e)return;const r="polyscript.js_modules";for(const e of Reflect.ownKeys(s))n.registerJSModule(t,`${r}.${e}`,wn(s,e));n.registerJSModule(t,r,s)},vn=(e,n)=>import(e).then((e=>{_n.set(n,{...e})})),En=e=>new Promise(((n,t)=>{document.querySelector(`link[rel="stylesheet"][href="${e}"]`)?n():document.head.append(en(document.createElement("link"),{rel:"stylesheet",href:e,onload:n,onerror:t}))})),kn=e=>/\.css$/i.test(new URL(e).pathname),Rn=!globalThis.window,Tn=({FS:e,PATH:n,PATH_FS:t},s,r)=>{const o=t.resolve(s),a=n.dirname(o);return e.mkdirTree?e.mkdirTree(a):xn(e,a),e.writeFile(o,new Uint8Array(r),{canOwn:!0})},Sn=e=>{const n=e.split("/");return n.pop(),n.join("/")},xn=(e,n)=>{const t=[];for(const s of n.split("/"))"."!==s&&".."!==s&&(t.push(s),s&&e.mkdir(t.join("/")))},jn=(e,n)=>{const t=[];for(const e of n.split("/"))switch(e){case"":case".":break;case"..":t.pop();break;default:t.push(e)}return[e.cwd()].concat(t).join("/").replace(/^\/+/,"/")},Mn=e=>{const n=e.map((e=>e.trim().replace(/(^[/]*|[/]*$)/g,""))).filter((e=>""!==e&&"."!==e)).join("/");return e[0].startsWith("/")?`/${n}`:n},An=(e,n)=>a(ln(e,n)).arrayBuffer(),On=(e,n,t,s)=>on((e=>{for(const{files:n,to_file:t,from:s=""}of e){if(void 0!==n&&void 0!==t)throw new Error("Cannot use 'to_file' and 'files' parameters together!");if(void 0===n&&void 0===t&&s.endsWith("/"))throw new Error(`Couldn't determine the filename from the path ${s}, please supply 'to_file' parameter.`)}return e.flatMap((({from:e="",to_folder:n=".",to_file:t,files:s})=>{if(Qe(s))return s.map((t=>({url:Mn([e,t]),path:Mn([n,t])})));const r=t||e.slice(1+e.lastIndexOf("/"));return[{url:e,path:Mn([n,r])}]}))})(t).map((({url:t,path:r})=>An(t,s).then((t=>e.writeFile(n,r,t)))))),Nn=(e,n)=>n.endsWith("/")?`${n}${e.split("/").pop()}`:n,Cn=(e,n)=>e.replace(/\{.+?\}/g,(e=>{if(!n.has(e))throw new SyntaxError(`Invalid template: ${e}`);return n.get(e)})),Wn=(e,n,t,s)=>on((e=>{const n=new Map,t=new Set,s=[];for(const[r,o]of rn(e))if(/^\{.+\}$/.test(r)){if(n.has(r))throw new SyntaxError(`Duplicated template: ${r}`);n.set(r,Cn(o,n))}else{const e=Cn(r,n),a=Nn(e,Cn(o||"./",n));if(t.has(a))throw new SyntaxError(`Duplicated destination: ${a}`);t.add(a),s.push({url:e,path:a})}return s})(t).map((({url:t,path:r})=>An(t,s).then((s=>e.writeFile(n,r,s,t)))))),Pn=({main:e,worker:n},t)=>{const s=[];if(n&&Rn)for(let[e,r]of rn(n))e=ln(e,t),s.push(vn(e,r));if(e&&!Rn)for(let[n,r]of rn(e))n=ln(n,t),kn(n)?En(n):s.push(vn(n,r));return on(s)},{assign:$n}=Object,In="entries",Ln="readonly",Hn="readwrite",Un={durability:"default",prefix:"IDBMap"},Fn=({target:{result:e}})=>e;class zn extends EventTarget{#e;#n;#t;async#s(e,n){const t=(await this.#e).transaction(In,n,this.#n);return new Promise(((n,s)=>$n(e(t.objectStore(In)),{onsuccess:n,onerror:s})))}constructor(e,{durability:n=Un.durability,prefix:t=Un.prefix}=Un){super(),this.#t=t,this.#n={durability:n},this.#e=new Promise(((n,t)=>{$n(indexedDB.open(`${this.#t}/${e}`),{onupgradeneeded({target:{result:e,transaction:t}}){e.objectStoreNames.length||e.createObjectStore(In),t.oncomplete=()=>n(e)},onsuccess(e){n(Fn(e))},onerror(e){t(e),this.dispatchEvent(e)}})})).then((e=>{const n=this.dispatchEvent.bind(this);for(const t in e)t.startsWith("on")&&(e[t]=n);return e}))}dispatchEvent(e){const{type:n,message:t,isTrusted:s}=e;return super.dispatchEvent(s?$n(new Event(n),{message:t}):e)}async close(){(await this.#e).close()}get size(){return this.#s((e=>e.count()),Ln).then(Fn)}async clear(){await this.#s((e=>e.clear()),Hn)}async delete(e){await this.#s((n=>n.delete(e)),Hn)}async entries(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e).then((n=>[e,n])))))}async forEach(e,n=this){for(const[t,s]of await this.entries())await e.call(n,s,t,this)}async get(e){return await this.#s((n=>n.get(e)),Ln).then(Fn)}async has(e){return void 0!==await this.#s((n=>n.getKey(e)),Ln).then(Fn)}async keys(){return await this.#s((e=>e.getAllKeys()),Ln).then(Fn)}async set(e,n){return await this.#s((t=>t.put(n,e)),Hn),this}async values(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e))))}get[Symbol.toStringTag](){return this.#t}}class Dn extends Map{#r;#o;constructor(...e){super(),this.#r=new zn(...e),this.#o=this.#r.entries().then((e=>{for(const[n,t]of e)super.set(n,t)}))}async sync(){await this.#o}clear(){return this.#o=this.#o.then((()=>this.#r.clear())),super.clear()}delete(e){return this.#o=this.#o.then((()=>this.#r.delete(e))),super.delete(e)}set(e,n){return this.#o=this.#o.then((()=>this.#r.set(e,n))),super.set(e,n)}}const Bn=new WeakMap,qn=(e,n,t)=>{"polyscript"===n&&(t.lazy_py_modules=async(...n)=>(await Bn.get(e)(n),n.map((n=>e.pyimport(n)))),t.storage=async e=>{const n=new Dn(e);return await n.sync(),n},t.JSON=v),e.registerJsModule(n,t)},Jn=(e,n)=>{if(e.endsWith("/*")){if(/\.(zip|whl|tgz|tar(?:\.gz)?)$/.test(n))return RegExp.$1;throw new Error(`Unsupported archive ${n}`)}return""},Gn=(e,n,...t)=>{try{return e.runPython(Xe(n),...t)}catch(n){Le.get(e).stderr(n)}},Yn=async(e,n,...t)=>{try{return await e.runPythonAsync(Xe(n),...t)}catch(n){Le.get(e).stderr(n)}},Kn=async(e,n,t)=>{const[s,...r]=n.split(".");let o,a=e.globals.get(s);for(const e of r)[o,a]=[a,a[e]];try{await a.call(o,t)}catch(n){Le.get(e).stderr(n)}};var Vn=(new TextEncoder).encode('from uio import StringIO\nimport sys\n\nclass Response:\n    def __init__(self, f):\n        self.raw = f\n        self.encoding = "utf-8"\n        self._cached = None\n\n    def close(self):\n        if self.raw:\n            self.raw.close()\n            self.raw = None\n        self._cached = None\n\n    @property\n    def content(self):\n        if self._cached is None:\n            try:\n                self._cached = self.raw.read()\n            finally:\n                self.raw.close()\n                self.raw = None\n        return self._cached\n\n    @property\n    def text(self):\n        return str(self.content, self.encoding)\n\n    def json(self):\n        import ujson\n\n        return ujson.loads(self.content)\n\n\n# TODO try to support streaming xhr requests, a-la pyodide-http\nHEADERS_TO_IGNORE = ("user-agent",)\n\n\ntry:\n    import js\nexcept Exception as err:\n    raise OSError("This version of urequests can only be used in the browser")\n\n# TODO try to support streaming xhr requests, a-la pyodide-http\n\nHEADERS_TO_IGNORE = ("user-agent",)\n\n\ndef request(\n    method,\n    url,\n    data=None,\n    json=None,\n    headers={},\n    stream=None,\n    auth=None,\n    timeout=None,\n    parse_headers=True,\n):\n    from js import XMLHttpRequest\n\n    xhr = XMLHttpRequest.new()\n    xhr.withCredentials = False\n\n    if auth is not None:\n        import ubinascii\n\n        username, password = auth\n        xhr.open(method, url, False, username, password)\n    else:\n        xhr.open(method, url, False)\n\n    for name, value in headers.items():\n        if name.lower() not in HEADERS_TO_IGNORE:\n            xhr.setRequestHeader(name, value)\n\n    if timeout:\n        xhr.timeout = int(timeout * 1000)\n\n    if json is not None:\n        assert data is None\n        import ujson\n\n        data = ujson.dumps(json)\n        # s.write(b"Content-Type: application/json\\r\\n")\n        xhr.setRequestHeader("Content-Type", "application/json")\n\n    xhr.send(data)\n\n    # Emulates the construction process in the original urequests\n    resp = Response(StringIO(xhr.responseText))\n    resp.status_code = xhr.status\n    resp.reason = xhr.statusText\n    resp.headers = xhr.getAllResponseHeaders()\n\n    return resp\n\n\n# Other methods - head, post, put, patch, delete - are not used by\n# mip and therefore not included\n\n\ndef get(url, **kw):\n    return request("GET", url, **kw)\n\n\n# Content below this line is from the Micropython MIP package and is covered\n# by the applicable MIT license:\n# \n# THE SOFTWARE IS PROVIDED â€œAS ISâ€, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER \n# DEALINGS IN THE SOFTWARE.\n\n# MicroPython package installer\n# MIT license; Copyright (c) 2022 Jim Mussared\n\n\n_PACKAGE_INDEX = const("https://micropython.org/pi/v2")\n_CHUNK_SIZE = 128\n\n\n# This implements os.makedirs(os.dirname(path))\ndef _ensure_path_exists(path):\n    import os\n\n    split = path.split("/")\n\n    # Handle paths starting with "/".\n    if not split[0]:\n        split.pop(0)\n        split[0] = "/" + split[0]\n\n    prefix = ""\n    for i in range(len(split) - 1):\n        prefix += split[i]\n        try:\n            os.stat(prefix)\n        except:\n            os.mkdir(prefix)\n        prefix += "/"\n\n\n# Copy from src (stream) to dest (function-taking-bytes)\ndef _chunk(src, dest):\n    buf = memoryview(bytearray(_CHUNK_SIZE))\n    while True:\n        n = src.readinto(buf)\n        if n == 0:\n            break\n        dest(buf if n == _CHUNK_SIZE else buf[:n])\n\n\n# Check if the specified path exists and matches the hash.\ndef _check_exists(path, short_hash):\n    import os\n\n    try:\n        import binascii\n        import hashlib\n\n        with open(path, "rb") as f:\n            hs256 = hashlib.sha256()\n            _chunk(f, hs256.update)\n            existing_hash = str(binascii.hexlify(hs256.digest())[: len(short_hash)], "utf-8")\n            return existing_hash == short_hash\n    except:\n        return False\n\n\ndef _rewrite_url(url, branch=None):\n    if not branch:\n        branch = "HEAD"\n    if url.startswith("github:"):\n        url = url[7:].split("/")\n        url = (\n            "https://raw.githubusercontent.com/"\n            + url[0]\n            + "/"\n            + url[1]\n            + "/"\n            + branch\n            + "/"\n            + "/".join(url[2:])\n        )\n    return url\n\n\ndef _download_file(url, dest):\n    response = get(url)\n    try:\n        if response.status_code != 200:\n            print("Error", response.status_code, "requesting", url)\n            return False\n\n        print("Copying:", dest)\n        _ensure_path_exists(dest)\n        with open(dest, "wb") as f:\n            _chunk(response.raw, f.write)\n\n        return True\n    finally:\n        response.close()\n\n\ndef _install_json(package_json_url, index, target, version, mpy):\n    response = get(_rewrite_url(package_json_url, version))\n    try:\n        if response.status_code != 200:\n            print("Package not found:", package_json_url)\n            return False\n\n        package_json = response.json()\n    finally:\n        response.close()\n    for target_path, short_hash in package_json.get("hashes", ()):\n        fs_target_path = target + "/" + target_path\n        if _check_exists(fs_target_path, short_hash):\n            print("Exists:", fs_target_path)\n        else:\n            file_url = "{}/file/{}/{}".format(index, short_hash[:2], short_hash)\n            if not _download_file(file_url, fs_target_path):\n                print("File not found: {} {}".format(target_path, short_hash))\n                return False\n    for target_path, url in package_json.get("urls", ()):\n        fs_target_path = target + "/" + target_path\n        if not _download_file(_rewrite_url(url, version), fs_target_path):\n            print("File not found: {} {}".format(target_path, url))\n            return False\n    for dep, dep_version in package_json.get("deps", ()):\n        if not _install_package(dep, index, target, dep_version, mpy):\n            return False\n    return True\n\n\ndef _install_package(package, index, target, version, mpy):\n    if (\n        package.startswith("http://")\n        or package.startswith("https://")\n        or package.startswith("github:")\n    ):\n        if package.endswith(".py") or package.endswith(".mpy"):\n            print("Downloading {} to {}".format(package, target))\n            return _download_file(\n                _rewrite_url(package, version), target + "/" + package.rsplit("/")[-1]\n            )\n        else:\n            if not package.endswith(".json"):\n                if not package.endswith("/"):\n                    package += "/"\n                package += "package.json"\n            print("Installing {} to {}".format(package, target))\n    else:\n        if not version:\n            version = "latest"\n        print("Installing {} ({}) from {} to {}".format(package, version, index, target))\n\n        mpy_version = (\n            sys.implementation._mpy & 0xFF if mpy and hasattr(sys.implementation, "_mpy") else "py"\n        )\n\n        # WARNING: mpy_version fails miserably with 1.22.0-380\n        package = "{}/package/{}/{}/{}.json".format(index, "py", package, version)\n\n    return _install_json(package, index, target, version, mpy)\n\n\ndef install(package, index=None, target=None, version=None, mpy=True):\n    if not target:\n        for p in sys.path:\n            if p.endswith("/lib"):\n                target = p\n                break\n        else:\n            print("Unable to find lib dir in sys.path")\n            return\n\n    if not index:\n        index = _PACKAGE_INDEX\n\n    if _install_package(package, index.rstrip("/"), target, version, mpy):\n        print("Done")\n    else:\n        print("Package may be partially installed")\n');const Xn=async e=>(await import("./toml-DiUM0_qs.js")).parse(e),Zn=(e,n)=>{try{e.mkdir(n)}catch(e){}};var Qn={type:"micropython",module:(e="1.24.0-preview-114")=>`https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${e}/micropython.mjs`,async engine({loadMicroPython:e},n,t,s){const{stderr:r,stdout:o,get:a}=He({stderr:Fe(console.error),stdout:Fe(console.log)});t=t.replace(/\.m?js$/,".wasm");const i=await a(e({linebuffer:!1,stderr:r,stdout:o,url:t})),l=et.bind(this,i,s);return Bn.set(i,l),n.files&&await Wn(this,i,n.files,s),n.fetch&&await On(this,i,n.fetch,s),n.js_modules&&await Pn(n.js_modules,s),this.writeFile(i,"./mip.py",Vn),n.packages&&await l(n.packages),i},registerJSModule:qn,run:Gn,runAsync:Yn,runEvent:Kn,transform:(e,n)=>e.PyProxy.toJs(n),writeFile:(e,n,t,s)=>{const{FS:r,_module:{PATH:o,PATH_FS:a}}=e,i={FS:r,PATH:o,PATH_FS:a},l=Jn(n,s);if(l){const s=n.slice(0,-1);switch("./"!==s&&r.mkdir(s),l){case"whl":case"zip":{const e=new Blob([t],{type:"application/zip"});return import("./zip-CGWtiqjJ.js").then((async({BlobReader:n,Uint8ArrayWriter:t,ZipReader:a})=>{const i=new a(new n(e));for(const e of await i.getEntries()){const{directory:n,filename:a}=e,i=s+a;if(n)Zn(r,i);else{Zn(r,o.dirname(i));const n=await e.getData(new t);r.writeFile(i,n,{canOwn:!0})}}i.close()}))}case"tgz":case"tar.gz":{const n="./_.tar.gz";return Tn(i,n,t),void e.runPython(`\n                        import os, gzip, tarfile\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open("${n}", "rb")))\n                        for f in tar:\n                            name = f"${s}{f.name}"\n                            if f.type == tarfile.DIRTYPE:\n                                if f.name != "./":\n                                    os.mkdir(name.strip("/"))\n                            else:\n                                dir = os.path.dirname(name)\n                                if not os.path.exists(dir):\n                                    os.mkdir(dir)\n                                source = tar.extractfile(f)\n                                with open(name, "wb") as dest:\n                                    dest.write(source.read())\n                                    dest.close()\n                        tar.close()\n                        os.remove("${n}")\n                    `)}}}return Tn(i,n,t)}};async function et(e,n,t){let s;for(const r of t)if(r.endsWith(".whl")){const t=ln(r,n),s=await a(t).arrayBuffer();await this.writeFile(e,"./*",s,t)}else s||(s=e.pyimport("mip")),s.install(r)}const nt={dict_converter:Object.fromEntries};let tt=!1;const st=e=>(...n)=>{try{return tt=!0,e(...n)}finally{tt=!1}};let rt=!1;const ot=()=>{if(rt)return;rt=!0;const e=new WeakMap,n=e=>e.destroy(),t=t=>{for(let s=0;s<t.length;s++){const r=t[s];if("function"==typeof r&&"copy"in r){tt=!1;let o=e.get(r)?.deref();if(!o)try{o=Ae(r.copy(),n),e.set(r,new WeakRef(o))}catch(e){console.error(e)}o&&(t[s]=o),tt=!0}}},{call:s}=Function,r=s.bind(s,s.apply);Object.defineProperties(Function.prototype,{apply:{value(e,n){return tt&&t(n),r(this,e,n)}},call:{value(e,...n){return tt&&t(n),r(this,e,n)}}})};var at={type:"pyodide",module:(e="0.26.2")=>`https://cdn.jsdelivr.net/pyodide/v${e}/full/pyodide.mjs`,async engine({loadPyodide:e},n,t,s){Rn||"auto"!==n.experimental_create_proxy||ot();const{stderr:r,stdout:o,get:a}=He(),i=t.slice(0,t.lastIndexOf("/")),l=await a(e({stderr:r,stdout:o,indexURL:i})),c=lt.bind(l);return Bn.set(l,c),n.files&&await Wn(this,l,n.files,s),n.fetch&&await On(this,l,n.fetch,s),n.js_modules&&await Pn(n.js_modules,s),n.packages&&await c(n.packages),l},registerJSModule:qn,run:st(Gn),runAsync:st(Yn),runEvent:st(Kn),transform:(e,n)=>it.call(e,n),writeFile:(e,n,t,s)=>{const r=Jn(n,s);if(r)return e.unpackArchive(t,r,{extractDir:n.slice(0,-1)});const{FS:o,PATH:a,_module:{PATH_FS:i}}=e;return Tn({FS:o,PATH:a,PATH_FS:i},n,t)}};function it(e){const{ffi:{PyProxy:n}}=this;if(e&&"object"==typeof e){if(e instanceof n)return e.toJs(nt);if(e instanceof Map)return new Map([...e.entries()]);if(Qe(e))return e.map(it,this)}return e}async function lt(e){await this.loadPackage("micropip");const n=this.pyimport("micropip");await n.install(e,{keep_going:!0}),n.destroy()}const ct="ruby-wasm-wasi",pt=ct.replace(/\W+/g,"_");var ut={type:ct,experimental:!0,module:(e="2.6.2")=>`https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${e}/dist/browser/+esm`,async engine({DefaultRubyVM:e},n,t,s){t=t.replace(/\/browser\/\+esm$/,"/ruby.wasm");const r=await a(t).arrayBuffer(),o=await WebAssembly.compile(r),{vm:i}=await e(o);return n.files&&await Wn(this,i,n.files,s),n.fetch&&await On(this,i,n.fetch,s),n.js_modules&&await Pn(n.js_modules,s),i},registerJSModule(e,n,t){n=n.replace(/\W+/g,"__");const s=`__module_${pt}_${n}`;globalThis[s]=t,this.run(e,`require "js";$${n}=JS.global[:${s}]`),delete globalThis[s]},run:(e,n,...t)=>e.eval(Xe(n),...t),runAsync:(e,n,...t)=>e.evalAsync(Xe(n),...t),async runEvent(e,n,t){if(/^xworker\.(on\w+)$/.test(n)){const{$1:n}=RegExp,s=`__module_${pt}_event`;globalThis[s]=t,this.run(e,`require "js";$xworker.call("${n}",JS.global[:${s}])`),delete globalThis[s]}else{const s=this.run(e,`method(:${n})`);await s.call(n,e.wrap(t))}},transform:(e,n)=>n,writeFile:()=>{throw new Error(`writeFile is not supported in ${ct}`)}};var ft={type:"wasmoon",module:(e="1.16.0")=>`https://cdn.jsdelivr.net/npm/wasmoon@${e}/+esm`,async engine({LuaFactory:e,LuaLibraries:n},t,s,r){const{stderr:o,stdout:a,get:i}=He(),l=await i((new e).createEngine());return l.global.getTable(n.Base,(e=>{l.global.setField(e,"print",a),l.global.setField(e,"printErr",o)})),t.files&&await Wn(this,l,t.files,r),t.fetch&&await On(this,l,t.fetch,r),t.js_modules&&await Pn(t.js_modules,r),l},registerJSModule:(e,n,t)=>{e.global.set(n,t)},run:(e,n,...t)=>{try{return e.doStringSync(Xe(n),...t)}catch(n){Le.get(e).stderr(n)}},runAsync:async(e,n,...t)=>{try{return await e.doString(Xe(n),...t)}catch(n){Le.get(e).stderr(n)}},runEvent:async(e,n,t)=>{const[s,...r]=n.split(".");let o,a=e.global.get(s);for(const e of r)[o,a]=[a,a[e]];try{await a.call(o,t)}catch(n){Le.get(e).stderr(n)}},transform:(e,n)=>n,writeFile:({cmodule:{module:{FS:e}}},n,t)=>((e,n,t)=>(xn(e,Sn(n)),n=jn(e,n),e.writeFile(n,new Uint8Array(t),{canOwn:!0})))(e,n,t)};const dt=new WeakMap,mt=async(e,n)=>{const{shelter:t,destroy:s,io:r}=dt.get(e),{output:o,result:a}=await t.captureR(Xe(n));for(const{type:e,data:n}of o)r[e](n);return Ae(a,s,{token:!1})};var ht={type:"webr",experimental:!0,module:(e="0.4.0")=>`https://cdn.jsdelivr.net/npm/webr@${e}/dist/webr.mjs`,async engine(e,n,t,s){const{get:r}=He(),o=new e.WebR;await r(o.init().then((()=>o)));const a=await new o.Shelter;return dt.set(o,{module:e,shelter:a,destroy:a.destroy.bind(a),io:Le.get(o)}),n.files&&await Wn(this,o,n.files,s),n.fetch&&await On(this,o,n.fetch,s),n.js_modules&&await Pn(n.js_modules,s),o},registerJSModule(e,n){console.warn(`Experimental interpreter: module ${n} is not supported (yet)`)},run:mt,runAsync:mt,async runEvent(e,n,t){await e.evalRVoid(`${n}(event)`,{env:{event:{type:[t.type]}}})},transform:(e,n)=>(console.log("transforming",n),n),writeFile:()=>{}};const _t=new Map,yt=new Map,gt=[],wt=[],bt=new Proxy(new Map,{get(e,n){if(!e.has(n)){const[t,...s]=n.split("@"),r=_t.get(t),o=/^(?:\.?\.?\/|https?:\/\/)/i.test(s)?s.join("@"):r.module(...s);e.set(n,{url:o,module:import(o),engine:r.engine.bind(r)})}const{url:t,module:s,engine:r}=e.get(n);return(e,o)=>s.then((s=>(yt.set(n,e),r(s,e,t,o))))}}),vt=e=>{for(const n of[].concat(e.type))_t.set(n,e),gt.push(`script[type="${n}"]`),wt.push(`${n}-`)};for(const e of[qe,Qn,at,ut,ft,ht])vt(e);const{parse:Et}=JSON,kt=(e,n="./config.txt")=>{let t=typeof e;return"string"===t&&/\.(json|toml|txt)$/.test(e)?t=RegExp.$1:e=n,[ln(e),t]},Rt=e=>{try{return Et(e)}catch(n){return Xn(e)}},Tt=(e,n,t,s={})=>{if(n){const[e,r]=kt(n,t);"json"===r?s=a(e).json():"toml"===r?s=a(e).text().then(Xn):"string"===r?s=Rt(n):"object"===r&&n?s=n:"txt"===r&&"string"==typeof s&&(s=Rt(s)),n=e}return an(s).then((t=>bt[e](t,n)))},St=(e,n="")=>`${e}@${n}`.replace(/@$/,"");function xt(e=this){return String(e).replace(/^(async\s*)?(\bfunction\b)?(.*?)\(/,((e,n,t,s)=>s&&!t?`${n||""}function ${s}(`:e))}const jt="BeforeRun",Mt="AfterRun",At=[`code${jt}`,`code${jt}Async`,`code${Mt}`,`code${Mt}Async`],Ot=["onWorker","onReady",`on${jt}`,`on${jt}Async`,`on${Mt}`,`on${Mt}Async`];function Nt(e,n){const{run:t,runAsync:s}=_t.get(this.type);return{...e,run:t.bind(this,n),runAsync:s.bind(this,n)}}const Ct=(e,n,t,s,r,o)=>{if(r||o){const a=Nt.bind(e,n),i=s?"runAsync":"run",l=e[i];e[i]=s?async function(e,n,...s){r&&await r.call(this,a(e),t);const i=await l.call(this,e,n,...s);return o&&await o.call(this,a(e),t),i}:function(e,n,...s){r&&r.call(this,a(e),t);const i=l.call(this,e,n,...s);return o&&o.call(this,a(e),t),i}}};let Wt=class{constructor(e,n={}){const{main:t,worker:s}=n;this.interpreter=e,this.onWorker=t?.onWorker;for(const e of Ot.slice(1))this[e]=s?.[e];for(const e of At)this[e]=s?.[e]}toJSON(){const e={};for(const n of Ot.slice(1))this[n]&&(e[n]=xt(this[n]));for(const n of At)this[n]&&(e[n]=Xe(this[n]()));return e}};var Pt=(...e)=>function(n,t){if(e.length){const[n,s]=e;(t=en({},t||{type:n,version:s})).type||(t.type=n)}const[s]=kt(t.config,t.configURL),r=((...e)=>new Ie(URL.createObjectURL(new Blob(['const e="object"==typeof self?self:globalThis,t=t=>((t,n)=>{const r=(e,n)=>(t.set(n,e),e),s=o=>{if(t.has(o))return t.get(o);const[a,i]=n[o];switch(a){case 0:case-1:return r(i,o);case 1:{const e=r([],o);for(const t of i)e.push(s(t));return e}case 2:{const e=r({},o);for(const[t,n]of i)e[s(t)]=s(n);return e}case 3:return r(new Date(i),o);case 4:{const{source:e,flags:t}=i;return r(new RegExp(e,t),o)}case 5:{const e=r(new Map,o);for(const[t,n]of i)e.set(s(t),s(n));return e}case 6:{const e=r(new Set,o);for(const t of i)e.add(s(t));return e}case 7:{const{name:t,message:n}=i;return r(new e[t](n),o)}case 8:return r(BigInt(i),o);case"BigInt":return r(Object(BigInt(i)),o)}return r(new e[a](i),o)};return s})(new Map,t)(0),n="",{toString:r}={},{keys:s}=Object,o=e=>{const t=typeof e;if("object"!==t||!e)return[0,t];const s=r.call(e).slice(8,-1);switch(s){case"Array":return[1,n];case"Object":return[2,n];case"Date":return[3,n];case"RegExp":return[4,n];case"Map":return[5,n];case"Set":return[6,n]}return s.includes("Array")?[1,s]:s.includes("Error")?[7,s]:[2,s]},a=([e,t])=>0===e&&("function"===t||"symbol"===t),i=(e,{json:t,lossy:n}={})=>{const r=[];return((e,t,n,r)=>{const i=(e,t)=>{const s=r.push(e)-1;return n.set(t,s),s},c=r=>{if(n.has(r))return n.get(r);let[l,u]=o(r);switch(l){case 0:{let t=r;switch(u){case"bigint":l=8,t=r.toString();break;case"function":case"symbol":if(e)throw new TypeError("unable to serialize "+u);t=null;break;case"undefined":return i([-1],r)}return i([l,t],r)}case 1:{if(u)return i([u,[...r]],r);const e=[],t=i([l,e],r);for(const t of r)e.push(c(t));return t}case 2:{if(u)switch(u){case"BigInt":return i([u,r.toString()],r);case"Boolean":case"Number":case"String":return i([u,r.valueOf()],r)}if(t&&"toJSON"in r)return c(r.toJSON());const n=[],p=i([l,n],r);for(const t of s(r))!e&&a(o(r[t]))||n.push([c(t),c(r[t])]);return p}case 3:return i([l,r.toISOString()],r);case 4:{const{source:e,flags:t}=r;return i([l,{source:e,flags:t}],r)}case 5:{const t=[],n=i([l,t],r);for(const[n,s]of r)(e||!a(o(n))&&!a(o(s)))&&t.push([c(n),c(s)]);return n}case 6:{const t=[],n=i([l,t],r);for(const n of r)!e&&a(o(n))||t.push(c(n));return n}}const{message:p}=r;return i([l,{name:u,message:p}],r)};return c})(!(t||n),!!t,new Map,r)(e),r},{parse:c,stringify:l}=JSON,u={json:!0,lossy:!0};var p=Object.freeze({__proto__:null,parse:e=>t(c(e)),stringify:e=>l(i(e,u))});const f="array",d="function",h="null",y="number",g="object",w="symbol",m="undefined",_="apply",b="construct",E="defineProperty",v="deleteProperty",T="get",x="getOwnPropertyDescriptor",k="getPrototypeOf",S="has",O="isExtensible",A="ownKeys",j="preventExtensions",R="set",P="setPrototypeOf";var $=Object.freeze({__proto__:null,APPLY:_,CONSTRUCT:b,DEFINE_PROPERTY:E,DELETE_PROPERTY:v,GET:T,GET_OWN_PROPERTY_DESCRIPTOR:x,GET_PROTOTYPE_OF:k,HAS:S,IS_EXTENSIBLE:O,OWN_KEYS:A,PREVENT_EXTENSION:j,SET:R,SET_PROTOTYPE_OF:P});function I(){return this}const N=new FinalizationRegistry((([e,t,n])=>{n&&console.debug(`Held value ${String(t)} not relevant anymore`),e(t)})),M=Object.create(null),F=(e,t,{debug:n,handler:r,return:s,token:o=e}=M)=>{const a=s||new Proxy(e,r||M),i=[a,[t,e,!!n]];return!1!==o&&i.push(o),N.register(...i),a},{Object:H,Proxy:W,Reflect:D}=globalThis,{isArray:C}=Array,{ownKeys:L}=D,{create:B,hasOwn:q,values:U}=H,J=(e,t)=>t===f?e[0]:t===d?e():t===g?e.$:e,z=(e,t,n,r)=>{const s={type:{value:t}},o=q(e,"valueOf");for(const a of U($)){let i=r(e[a]||D[a]);if(o&&a===T){const{valueOf:r}=e,{value:s}=i;i={value(e,o,...a){return o===n?r.call(this,J(e,t)):s.call(this,e,o,...a)}}}s[a]=i}return B(e,s)},G=(e,t,n,r=e)=>{if(r===e)switch(typeof e){case g:case m:r||(r=!1);case d:break;default:r=!1,t===e&&(t=H(e))}const s=new W(t,n),{destruct:o}=n;return o?F(e,o,{token:r,return:s}):s},Y=e=>t=>{const n=typeof t;return n===g?t?e.get(t)?.[0]??(e=>C(e)?f:g)(t):h:n},K=e=>t=>{let n=typeof t;switch(n){case g:if(!t){n=h;break}case d:const r=e.get(t);r&&([n,t]=r)}return[n,t]},X=e=>((e=>{N.unregister(e)})(e),e);var V=e=>{const t=new WeakMap,n=Symbol(),r={},s=(e,n,r)=>(t.set(e,[n,r]),e),o={proxy:r,release:X,pair:K(t),typeOf:Y(t),isProxy:e=>t.has(e),valueOf:e=>e[n]??e.valueOf()};for(const t of L(e)){if(q(o,t))continue;const a=e[t];switch(t){case f:{const e=z(a,t,n,(e=>({value([t],...n){return e.call(this,t,...n)}})));r[t]=(t,...n)=>s(G(t,[t],e,...n),f,t);break}case d:{const e=z(a,t,n,(e=>({value(t,...n){return e.call(this,t(),...n)}})));r[t]=(t,...n)=>{return s(G(t,(r=t,I.bind(r)),e,...n),d,t);var r};break}case g:{const e=z(a,t,n,(e=>({value({$:t},...n){return e.call(this,t,...n)}})));r[t]=(t,...n)=>s(G(t,{$:t},e,...n),g,t);break}default:{const e=z(a,t,n,(e=>({value:e})));r[t]=(n,...r)=>s(G(n,n,e,...r),t,n);break}}}return o};let Z=0;const Q=new Map,ee=new Map,te=e=>ee.get(e),ne=e=>{if(!Q.has(e)){let t;for(;ee.has(t=Z++););Q.set(e,t),ee.set(t,e)}return Q.get(e)},{ArrayBuffer:re,Atomics:se,Promise:oe}=globalThis,{isArray:ae}=Array,{create:ie,getPrototypeOf:ce,values:le}=Object,ue=ce(Int32Array),pe=ie(se),fe=({currentTarget:e,type:t,origin:n,lastEventId:r,source:s,ports:o},a)=>e.dispatchEvent(new MessageEvent(t,{data:a,origin:n,lastEventId:r,source:s,ports:o})),de=()=>oe.withResolvers();let he=0;const ye=new Map,ge=(e,t)=>class extends e{constructor(e,...n){super(e,...n),e instanceof t&&ye.set(this,[he++,0,de()])}},we=new WeakSet,me=e=>(we.add(e),e),_e=(e,t)=>{const{data:n}=e,r=ae(n)&&(n.at(0)===t||0===n.at(1)&&!t);return r&&(e.stopImmediatePropagation(),e.preventDefault()),r},be=e=>null!==e&&"object"==typeof e&&!we.has(e),Ee=new WeakMap,ve=(e,t,n)=>{if(ye.has(e))t.set(e,ye.get(e)[0]);else if(!(e instanceof ue||e instanceof re))for(const r of le(e))be(r)&&!n.has(r)&&(n.add(r),ve(r,t,n))},Te=(...e)=>({value:new oe((t=>{let n=new Worker("data:application/javascript,onmessage%3De%3D%3EpostMessage(!Atomics.wait(...e.data))");n.onmessage=()=>t("ok"),n.postMessage(e)}))}),xe=(e,t)=>{const n=ye.get(e),[r,s,{promise:o}]=n;return n[1]=t,[r,o]};let{BigInt64Array:ke,Int32Array:Se,SharedArrayBuffer:Oe,addEventListener:Ae,postMessage:je}=globalThis,Re=!0,Pe=e=>e,$e=!1;const Ie=de();try{new Oe(4),pe.waitAsync||(pe.waitAsync=Te),Ie.resolve()}catch(e){const t=je,n=Ae,r=[];let s="",o="";Oe=class extends re{},ke=ge(ke,Oe),Se=ge(Se,Oe),Pe=me,$e=!0,pe.notify=(e,n)=>{const[r]=(e=>Ee.get(e))(e);return t([s,1,e,r,n]),0},pe.waitAsync=(...e)=>{const[t,n]=xe(...e);return{value:n}},pe.wait=(e,t,...n)=>{const[r]=xe(e,t,...n),a=new XMLHttpRequest;a.responseType="json",a.open("POST",`${o}?sabayon`,!1),a.setRequestHeader("Content-Type","application/json"),a.send(`["${s}",${r},${t}]`);const{response:i}=a;ye.delete(e);for(let t=0;t<i.length;t++)e[t]=i[t];return"ok"},n("message",(e=>{if(_e(e,s)){const[t,n,...r]=e.data;switch(n){case 0:s=t,o=r.at(0)?.serviceWorker||"",o||(pe.wait=null,Ie.resolve());break;case 1:((e,t,n)=>{for(const[r,[s,o,{resolve:a}]]of ye)if(t===s&&n===o){for(let t=0;t<e.length;t++)r[t]=e[t];ye.delete(r),a("ok");break}})(...r);break;case 2:((e,t,n)=>{for(const[n,r]of t)Ee.set(n,[r,e.currentTarget]);fe(e,n)})(e,...r);break;case 3:Ie.resolve()}}else if(Re){const{currentTarget:t,type:n,origin:s,lastEventId:o,source:a,ports:i}=e;r.push([{currentTarget:t,type:n,origin:s,lastEventId:o,source:a,ports:i},e.data])}})),Ae=(e,...t)=>{if(n(e,...t),r.length)for(const e of r.splice(0))fe(...e)},je=(e,...n)=>t(((e,t)=>{const n=new Map;return be(t)&&ve(t,n,new Set),n.size?[e,2,n,t]:t})(s,e),...n)}await Ie.promise,Re=!1;const{BYTES_PER_ELEMENT:Ne}=Int32Array,{BYTES_PER_ELEMENT:Me}=Uint16Array,{notify:Fe}=pe,He=new TextDecoder("utf-16"),We=new WeakSet,De=(...e)=>(We.add(e),e);let Ce="";const Le=(e,t,n,r)=>{const[s]=r,o=n.get(s);if(!o)throw new Error(`Unknown proxy.${s}()`);e(o,t,r)};let Be=0;const qe=([e,t,n,r,s,o,a,i,c],l)=>(...u)=>{let p=""!==Ce,f=0;p&&"="!==Ce[0]&&"-"!==Ce[0]&&(f=((e,t)=>setTimeout(console.warn,3e3,`ðŸ’€ðŸ”’ - proxy.${e}() in proxy.${t}()`))(l,Ce));const d=Be++,h=[];We.has(u.at(-1)||h)&&We.delete(h=u.pop());const y=n(i?u.map(i):u);let g=t(2*Ne);return a([e,2,l,d,g,y,r],{transfer:h}),c(g,0).value.then((()=>{p&&clearTimeout(f);const n=g[1];if(!n)return;const r=Me*n;return g=t(r+r%Ne),a([e,1,d,g]),c(g,0).value.then((()=>{const e=new Uint16Array(g.buffer),t=o?e.subarray(0,n):e.slice(0,n);return s(He.decode(t))}))}))},Ue=(e,t)=>new Proxy(t,{get:(t,n)=>{let r;return"then"!==n&&(r=t.get(n),r||(r=qe(e,n),t.set(n,r))),r},set:(e,t,n)=>"then"!==t&&!!e.set(t,n)}),{wait:Je,waitAsync:ze}=pe;var Ge=({parse:e,stringify:t,transform:n,interrupt:r}=JSON)=>{const s=((e,t)=>async(n,r,[s,o,a,i,c])=>{c&&(Ce=s);try{const s=await n(...i);if(void 0!==s){const n=e(t?t(s):s);r.set(o,n),a[1]=n.length}}finally{c&&(Ce=""),a[0]=1,Fe(a,0)}})(t,n),o=de(),a=new Map,i=new Map;let c="",l=Je;if(Je&&r){const{handler:e,timeout:t=42}=r;l=(n,r,s)=>{for(;"timed-out"===(s=Je(n,r,0,t));)e();return s}}return Ae("message",(t=>{if(_e(t,c)){const[r,u,...p]=t.data;switch(u){case 0:{const t=!!Je;c=r,o.resolve({polyfill:$e,sync:t,transfer:De,proxy:Ue([c,e=>new Se(new Oe(e)),Pe,t,e,$e,je,n,t?(...e)=>({value:{then:t=>t(l(...e))}}):ze],a)});break}case 2:a.size?Le(s,i,a,p):setTimeout(Le,0,s,i,a,p);break;case 1:((e,[t,n])=>{const r=e.get(t);e.delete(t);for(let e=new Uint16Array(n.buffer),t=0,{length:s}=r;t<s;t++)e[t]=r.charCodeAt(t);Fe(n,0)})(i,p)}}})),o.promise},Ye=Object.fromEntries([f,"bigint","boolean",d,h,y,g,"string",w,m].map(((e,t)=>[e,t])));const Ke="destruct",{[A]:Xe}=Reflect,Ve=new Map(Xe(Symbol).filter((e=>typeof Symbol[e]===w)).map((e=>[Symbol[e],e]))),Ze=e=>Ve.get(e)||`.${Symbol.keyFor(e)||""}`,Qe="b87ec809-9df6-4389-a29e-bc91090db4dc",et="="+Qe,tt="-"+Qe,{[_]:nt}=Reflect;const rt={object(...e){return this.string(function(e){for(var t=e[0],n=1,r=arguments.length;n<r;n++)t+=arguments[n]+e[n];return t}(...e))},string(e){for(const t of e.split(/[\\r\\n]+/))if(t.trim().length){/^(\\s+)/.test(t)&&(e=e.replace(new RegExp("^"+RegExp.$1,"gm"),""));break}return e}},st=new WeakMap,ot=e=>{const t=e||console,n={buffered:it,stderr:(t.stderr||console.error).bind(t),stdout:(t.stdout||console.log).bind(t)};return{stderr:(...e)=>n.stderr(...e),stdout:(...e)=>n.stdout(...e),async get(e){const t=await e;return st.set(t,n),t}}},at=new TextDecoder,it=(e,t=10)=>{const n=[];return r=>{if(r instanceof Uint8Array)for(const s of r)s===t?e(at.decode(new Uint8Array(n.splice(0)))):n.push(s);else e(r)}},ct=(e,...t)=>rt[typeof e](e,...t),{isArray:lt}=Array,{assign:ut,create:pt,defineProperties:ft,defineProperty:dt,entries:ht}=Object,{all:yt,resolve:gt}=new Proxy(Promise,{get:(e,t)=>e[t].bind(e)}),wt=(e,t=location.href)=>new URL(e,t.replace(/^blob:/,"")).href,mt=(e,t,n,r=!1,s=CustomEvent)=>{e.dispatchEvent(new s(`${t}:${n}`,{bubbles:!0,detail:{worker:r}}))},_t=e=>Function(`\'use strict\';return (${e})`)(),bt=e=>e.replace(/^(?:\\n|\\r\\n)/,""),Et=Symbol.for("polyscript.js_modules"),vt=new Map;dt(globalThis,Et,{value:vt}),new Proxy(vt,{get:(e,t)=>e.get(t),has:(e,t)=>e.has(t),ownKeys:e=>[...e.keys()]});const Tt=(e,t)=>!t.startsWith("_"),xt=(e,t)=>new Proxy(e,{has:Tt,get:(e,n)=>e[t][n]}),kt=(e,t)=>import(e).then((e=>{vt.set(t,{...e})})),St=e=>new Promise(((t,n)=>{document.querySelector(`link[rel="stylesheet"][href="${e}"]`)?t():document.head.append(ut(document.createElement("link"),{rel:"stylesheet",href:e,onload:t,onerror:n}))})),Ot=e=>/\\.css$/i.test(new URL(e).pathname),At=(e,t)=>e.has(t),jt=e=>[...e.keys()];var Rt=(e,t,n,r)=>{const s=globalThis[Et];if(n)for(let[e,t]of ht(n)){let n=s.get(t);n&&!lt(n)||(s.set(t,n||(n=[])),n.push(e))}return((e,t,n,r)=>new Proxy(e,{has:At,ownKeys:jt,get:(e,s)=>{let o=e.get(s);if(lt(o)){let a=o;o=null;for(let e of a)e=wt(e,r),Ot(e)?n.importCSS(e):(n.importJS(e,s),o=t[Et].get(s));e.set(s,o)}return o}}))(s,e,t,r)};const Pt=new Map,$t=e=>Pt.get(e),It=(e,t)=>{try{return Function("require",t)($t)}catch(t){st.get(e).stderr(t)}};var Nt={type:"dummy",module:()=>"data:application/javascript,",engine:e=>ot().get(e),registerJSModule(e,t,n){Pt.set(t,n)},run:It,runAsync:It,runEvent:async(e,t,n)=>{try{await Function("require","e",`return ${t}(e)`)($t,n)}catch(t){st.get(e).stderr(t)}},transform:(e,t)=>t,writeFile(){}};const Mt=Object.getOwnPropertyDescriptors(Response.prototype),Ft=e=>"function"==typeof e,Ht={get:(e,t)=>Mt.hasOwnProperty(t)?((e,t,{get:n,value:r})=>n||!Ft(r)?e.then((e=>e[t])):(...n)=>e.then((e=>e[t](...n))))(e,t,Mt[t]):((e,t)=>Ft(t)?t.bind(e):t)(e,e[t])};var Wt=(e,...t)=>new Proxy(fetch(e,...t),Ht);Promise.withResolvers||(Promise.withResolvers=function(){var e,t,n=new this((function(n,r){e=n,t=r}));return{resolve:e,reject:t,promise:n}});const Dt=!globalThis.window,Ct=({FS:e,PATH:t,PATH_FS:n},r,s)=>{const o=n.resolve(r),a=t.dirname(o);return e.mkdirTree?e.mkdirTree(a):Bt(e,a),e.writeFile(o,new Uint8Array(s),{canOwn:!0})},Lt=e=>{const t=e.split("/");return t.pop(),t.join("/")},Bt=(e,t)=>{const n=[];for(const r of t.split("/"))"."!==r&&".."!==r&&(n.push(r),r&&e.mkdir(n.join("/")))},qt=(e,t)=>{const n=[];for(const e of t.split("/"))switch(e){case"":case".":break;case"..":n.pop();break;default:n.push(e)}return[e.cwd()].concat(n).join("/").replace(/^\\/+/,"/")},Ut=e=>{const t=e.map((e=>e.trim().replace(/(^[/]*|[/]*$)/g,""))).filter((e=>""!==e&&"."!==e)).join("/");return e[0].startsWith("/")?`/${t}`:t},Jt=(e,t)=>Wt(wt(e,t)).arrayBuffer(),zt=(e,t,n,r)=>yt((e=>{for(const{files:t,to_file:n,from:r=""}of e){if(void 0!==t&&void 0!==n)throw new Error("Cannot use \'to_file\' and \'files\' parameters together!");if(void 0===t&&void 0===n&&r.endsWith("/"))throw new Error(`Couldn\'t determine the filename from the path ${r}, please supply \'to_file\' parameter.`)}return e.flatMap((({from:e="",to_folder:t=".",to_file:n,files:r})=>{if(lt(r))return r.map((n=>({url:Ut([e,n]),path:Ut([t,n])})));const s=n||e.slice(1+e.lastIndexOf("/"));return[{url:e,path:Ut([t,s])}]}))})(n).map((({url:n,path:s})=>Jt(n,r).then((n=>e.writeFile(t,s,n)))))),Gt=(e,t)=>t.endsWith("/")?`${t}${e.split("/").pop()}`:t,Yt=(e,t)=>e.replace(/\\{.+?\\}/g,(e=>{if(!t.has(e))throw new SyntaxError(`Invalid template: ${e}`);return t.get(e)})),Kt=(e,t,n,r)=>yt((e=>{const t=new Map,n=new Set,r=[];for(const[s,o]of ht(e))if(/^\\{.+\\}$/.test(s)){if(t.has(s))throw new SyntaxError(`Duplicated template: ${s}`);t.set(s,Yt(o,t))}else{const e=Yt(s,t),a=Gt(e,Yt(o||"./",t));if(n.has(a))throw new SyntaxError(`Duplicated destination: ${a}`);n.add(a),r.push({url:e,path:a})}return r})(n).map((({url:n,path:s})=>Jt(n,r).then((r=>e.writeFile(t,s,r,n)))))),Xt=({main:e,worker:t},n)=>{const r=[];if(t&&Dt)for(let[e,s]of ht(t))e=wt(e,n),r.push(kt(e,s));if(e&&!Dt)for(let[t,s]of ht(e))t=wt(t,n),Ot(t)?St(t):r.push(kt(t,s));return yt(r)},{assign:Vt}=Object,Zt="entries",Qt="readonly",en="readwrite",tn={durability:"default",prefix:"IDBMap"},nn=({target:{result:e}})=>e;class rn extends EventTarget{#e;#t;#n;async#r(e,t){const n=(await this.#e).transaction(Zt,t,this.#t);return new Promise(((t,r)=>Vt(e(n.objectStore(Zt)),{onsuccess:t,onerror:r})))}constructor(e,{durability:t=tn.durability,prefix:n=tn.prefix}=tn){super(),this.#n=n,this.#t={durability:t},this.#e=new Promise(((t,n)=>{Vt(indexedDB.open(`${this.#n}/${e}`),{onupgradeneeded({target:{result:e,transaction:n}}){e.objectStoreNames.length||e.createObjectStore(Zt),n.oncomplete=()=>t(e)},onsuccess(e){t(nn(e))},onerror(e){n(e),this.dispatchEvent(e)}})})).then((e=>{const t=this.dispatchEvent.bind(this);for(const n in e)n.startsWith("on")&&(e[n]=t);return e}))}dispatchEvent(e){const{type:t,message:n,isTrusted:r}=e;return super.dispatchEvent(r?Vt(new Event(t),{message:n}):e)}async close(){(await this.#e).close()}get size(){return this.#r((e=>e.count()),Qt).then(nn)}async clear(){await this.#r((e=>e.clear()),en)}async delete(e){await this.#r((t=>t.delete(e)),en)}async entries(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e).then((t=>[e,t])))))}async forEach(e,t=this){for(const[n,r]of await this.entries())await e.call(t,r,n,this)}async get(e){return await this.#r((t=>t.get(e)),Qt).then(nn)}async has(e){return void 0!==await this.#r((t=>t.getKey(e)),Qt).then(nn)}async keys(){return await this.#r((e=>e.getAllKeys()),Qt).then(nn)}async set(e,t){return await this.#r((n=>n.put(t,e)),en),this}async values(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e))))}get[Symbol.toStringTag](){return this.#n}}class sn extends Map{#s;#o;constructor(...e){super(),this.#s=new rn(...e),this.#o=this.#s.entries().then((e=>{for(const[t,n]of e)super.set(t,n)}))}async sync(){await this.#o}clear(){return this.#o=this.#o.then((()=>this.#s.clear())),super.clear()}delete(e){return this.#o=this.#o.then((()=>this.#s.delete(e))),super.delete(e)}set(e,t){return this.#o=this.#o.then((()=>this.#s.set(e,t))),super.set(e,t)}}const on=new WeakMap,an=(e,t,n)=>{"polyscript"===t&&(n.lazy_py_modules=async(...t)=>(await on.get(e)(t),t.map((t=>e.pyimport(t)))),n.storage=async e=>{const t=new sn(e);return await t.sync(),t},n.JSON=p),e.registerJsModule(t,n)},cn=(e,t)=>{if(e.endsWith("/*")){if(/\\.(zip|whl|tgz|tar(?:\\.gz)?)$/.test(t))return RegExp.$1;throw new Error(`Unsupported archive ${t}`)}return""},ln=(e,t,...n)=>{try{return e.runPython(ct(t),...n)}catch(t){st.get(e).stderr(t)}},un=async(e,t,...n)=>{try{return await e.runPythonAsync(ct(t),...n)}catch(t){st.get(e).stderr(t)}},pn=async(e,t,n)=>{const[r,...s]=t.split(".");let o,a=e.globals.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){st.get(e).stderr(t)}};var fn=(new TextEncoder).encode(\'from uio import StringIO\\nimport sys\\n\\nclass Response:\\n    def __init__(self, f):\\n        self.raw = f\\n        self.encoding = "utf-8"\\n        self._cached = None\\n\\n    def close(self):\\n        if self.raw:\\n            self.raw.close()\\n            self.raw = None\\n        self._cached = None\\n\\n    @property\\n    def content(self):\\n        if self._cached is None:\\n            try:\\n                self._cached = self.raw.read()\\n            finally:\\n                self.raw.close()\\n                self.raw = None\\n        return self._cached\\n\\n    @property\\n    def text(self):\\n        return str(self.content, self.encoding)\\n\\n    def json(self):\\n        import ujson\\n\\n        return ujson.loads(self.content)\\n\\n\\n# TODO try to support streaming xhr requests, a-la pyodide-http\\nHEADERS_TO_IGNORE = ("user-agent",)\\n\\n\\ntry:\\n    import js\\nexcept Exception as err:\\n    raise OSError("This version of urequests can only be used in the browser")\\n\\n# TODO try to support streaming xhr requests, a-la pyodide-http\\n\\nHEADERS_TO_IGNORE = ("user-agent",)\\n\\n\\ndef request(\\n    method,\\n    url,\\n    data=None,\\n    json=None,\\n    headers={},\\n    stream=None,\\n    auth=None,\\n    timeout=None,\\n    parse_headers=True,\\n):\\n    from js import XMLHttpRequest\\n\\n    xhr = XMLHttpRequest.new()\\n    xhr.withCredentials = False\\n\\n    if auth is not None:\\n        import ubinascii\\n\\n        username, password = auth\\n        xhr.open(method, url, False, username, password)\\n    else:\\n        xhr.open(method, url, False)\\n\\n    for name, value in headers.items():\\n        if name.lower() not in HEADERS_TO_IGNORE:\\n            xhr.setRequestHeader(name, value)\\n\\n    if timeout:\\n        xhr.timeout = int(timeout * 1000)\\n\\n    if json is not None:\\n        assert data is None\\n        import ujson\\n\\n        data = ujson.dumps(json)\\n        # s.write(b"Content-Type: application/json\\\\r\\\\n")\\n        xhr.setRequestHeader("Content-Type", "application/json")\\n\\n    xhr.send(data)\\n\\n    # Emulates the construction process in the original urequests\\n    resp = Response(StringIO(xhr.responseText))\\n    resp.status_code = xhr.status\\n    resp.reason = xhr.statusText\\n    resp.headers = xhr.getAllResponseHeaders()\\n\\n    return resp\\n\\n\\n# Other methods - head, post, put, patch, delete - are not used by\\n# mip and therefore not included\\n\\n\\ndef get(url, **kw):\\n    return request("GET", url, **kw)\\n\\n\\n# Content below this line is from the Micropython MIP package and is covered\\n# by the applicable MIT license:\\n# \\n# THE SOFTWARE IS PROVIDED â€œAS ISâ€, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER \\n# DEALINGS IN THE SOFTWARE.\\n\\n# MicroPython package installer\\n# MIT license; Copyright (c) 2022 Jim Mussared\\n\\n\\n_PACKAGE_INDEX = const("https://micropython.org/pi/v2")\\n_CHUNK_SIZE = 128\\n\\n\\n# This implements os.makedirs(os.dirname(path))\\ndef _ensure_path_exists(path):\\n    import os\\n\\n    split = path.split("/")\\n\\n    # Handle paths starting with "/".\\n    if not split[0]:\\n        split.pop(0)\\n        split[0] = "/" + split[0]\\n\\n    prefix = ""\\n    for i in range(len(split) - 1):\\n        prefix += split[i]\\n        try:\\n            os.stat(prefix)\\n        except:\\n            os.mkdir(prefix)\\n        prefix += "/"\\n\\n\\n# Copy from src (stream) to dest (function-taking-bytes)\\ndef _chunk(src, dest):\\n    buf = memoryview(bytearray(_CHUNK_SIZE))\\n    while True:\\n        n = src.readinto(buf)\\n        if n == 0:\\n            break\\n        dest(buf if n == _CHUNK_SIZE else buf[:n])\\n\\n\\n# Check if the specified path exists and matches the hash.\\ndef _check_exists(path, short_hash):\\n    import os\\n\\n    try:\\n        import binascii\\n        import hashlib\\n\\n        with open(path, "rb") as f:\\n            hs256 = hashlib.sha256()\\n            _chunk(f, hs256.update)\\n            existing_hash = str(binascii.hexlify(hs256.digest())[: len(short_hash)], "utf-8")\\n            return existing_hash == short_hash\\n    except:\\n        return False\\n\\n\\ndef _rewrite_url(url, branch=None):\\n    if not branch:\\n        branch = "HEAD"\\n    if url.startswith("github:"):\\n        url = url[7:].split("/")\\n        url = (\\n            "https://raw.githubusercontent.com/"\\n            + url[0]\\n            + "/"\\n            + url[1]\\n            + "/"\\n            + branch\\n            + "/"\\n            + "/".join(url[2:])\\n        )\\n    return url\\n\\n\\ndef _download_file(url, dest):\\n    response = get(url)\\n    try:\\n        if response.status_code != 200:\\n            print("Error", response.status_code, "requesting", url)\\n            return False\\n\\n        print("Copying:", dest)\\n        _ensure_path_exists(dest)\\n        with open(dest, "wb") as f:\\n            _chunk(response.raw, f.write)\\n\\n        return True\\n    finally:\\n        response.close()\\n\\n\\ndef _install_json(package_json_url, index, target, version, mpy):\\n    response = get(_rewrite_url(package_json_url, version))\\n    try:\\n        if response.status_code != 200:\\n            print("Package not found:", package_json_url)\\n            return False\\n\\n        package_json = response.json()\\n    finally:\\n        response.close()\\n    for target_path, short_hash in package_json.get("hashes", ()):\\n        fs_target_path = target + "/" + target_path\\n        if _check_exists(fs_target_path, short_hash):\\n            print("Exists:", fs_target_path)\\n        else:\\n            file_url = "{}/file/{}/{}".format(index, short_hash[:2], short_hash)\\n            if not _download_file(file_url, fs_target_path):\\n                print("File not found: {} {}".format(target_path, short_hash))\\n                return False\\n    for target_path, url in package_json.get("urls", ()):\\n        fs_target_path = target + "/" + target_path\\n        if not _download_file(_rewrite_url(url, version), fs_target_path):\\n            print("File not found: {} {}".format(target_path, url))\\n            return False\\n    for dep, dep_version in package_json.get("deps", ()):\\n        if not _install_package(dep, index, target, dep_version, mpy):\\n            return False\\n    return True\\n\\n\\ndef _install_package(package, index, target, version, mpy):\\n    if (\\n        package.startswith("http://")\\n        or package.startswith("https://")\\n        or package.startswith("github:")\\n    ):\\n        if package.endswith(".py") or package.endswith(".mpy"):\\n            print("Downloading {} to {}".format(package, target))\\n            return _download_file(\\n                _rewrite_url(package, version), target + "/" + package.rsplit("/")[-1]\\n            )\\n        else:\\n            if not package.endswith(".json"):\\n                if not package.endswith("/"):\\n                    package += "/"\\n                package += "package.json"\\n            print("Installing {} to {}".format(package, target))\\n    else:\\n        if not version:\\n            version = "latest"\\n        print("Installing {} ({}) from {} to {}".format(package, version, index, target))\\n\\n        mpy_version = (\\n            sys.implementation._mpy & 0xFF if mpy and hasattr(sys.implementation, "_mpy") else "py"\\n        )\\n\\n        # WARNING: mpy_version fails miserably with 1.22.0-380\\n        package = "{}/package/{}/{}/{}.json".format(index, "py", package, version)\\n\\n    return _install_json(package, index, target, version, mpy)\\n\\n\\ndef install(package, index=None, target=None, version=None, mpy=True):\\n    if not target:\\n        for p in sys.path:\\n            if p.endswith("/lib"):\\n                target = p\\n                break\\n        else:\\n            print("Unable to find lib dir in sys.path")\\n            return\\n\\n    if not index:\\n        index = _PACKAGE_INDEX\\n\\n    if _install_package(package, index.rstrip("/"), target, version, mpy):\\n        print("Done")\\n    else:\\n        print("Package may be partially installed")\\n\');const dn=async e=>(await import("./toml-DiUM0_qs.js")).parse(e),hn=(e,t)=>{try{e.mkdir(t)}catch(e){}};var yn={type:"micropython",module:(e="1.24.0-preview-114")=>`https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${e}/micropython.mjs`,async engine({loadMicroPython:e},t,n,r){const{stderr:s,stdout:o,get:a}=ot({stderr:it(console.error),stdout:it(console.log)});n=n.replace(/\\.m?js$/,".wasm");const i=await a(e({linebuffer:!1,stderr:s,stdout:o,url:n})),c=gn.bind(this,i,r);return on.set(i,c),t.files&&await Kt(this,i,t.files,r),t.fetch&&await zt(this,i,t.fetch,r),t.js_modules&&await Xt(t.js_modules,r),this.writeFile(i,"./mip.py",fn),t.packages&&await c(t.packages),i},registerJSModule:an,run:ln,runAsync:un,runEvent:pn,transform:(e,t)=>e.PyProxy.toJs(t),writeFile:(e,t,n,r)=>{const{FS:s,_module:{PATH:o,PATH_FS:a}}=e,i={FS:s,PATH:o,PATH_FS:a},c=cn(t,r);if(c){const r=t.slice(0,-1);switch("./"!==r&&s.mkdir(r),c){case"whl":case"zip":{const e=new Blob([n],{type:"application/zip"});return import("./zip-gl8b5xR3.js").then((async({BlobReader:t,Uint8ArrayWriter:n,ZipReader:a})=>{const i=new a(new t(e));for(const e of await i.getEntries()){const{directory:t,filename:a}=e,i=r+a;if(t)hn(s,i);else{hn(s,o.dirname(i));const t=await e.getData(new n);s.writeFile(i,t,{canOwn:!0})}}i.close()}))}case"tgz":case"tar.gz":{const t="./_.tar.gz";return Ct(i,t,n),void e.runPython(`\\n                        import os, gzip, tarfile\\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open("${t}", "rb")))\\n                        for f in tar:\\n                            name = f"${r}{f.name}"\\n                            if f.type == tarfile.DIRTYPE:\\n                                if f.name != "./":\\n                                    os.mkdir(name.strip("/"))\\n                            else:\\n                                dir = os.path.dirname(name)\\n                                if not os.path.exists(dir):\\n                                    os.mkdir(dir)\\n                                source = tar.extractfile(f)\\n                                with open(name, "wb") as dest:\\n                                    dest.write(source.read())\\n                                    dest.close()\\n                        tar.close()\\n                        os.remove("${t}")\\n                    `)}}}return Ct(i,t,n)}};async function gn(e,t,n){let r;for(const s of n)if(s.endsWith(".whl")){const n=wt(s,t),r=await Wt(n).arrayBuffer();await this.writeFile(e,"./*",r,n)}else r||(r=e.pyimport("mip")),r.install(s)}const wn={dict_converter:Object.fromEntries};let mn=!1;const _n=e=>(...t)=>{try{return mn=!0,e(...t)}finally{mn=!1}};let bn=!1;const En=()=>{if(bn)return;bn=!0;const e=new WeakMap,t=e=>e.destroy(),n=n=>{for(let r=0;r<n.length;r++){const s=n[r];if("function"==typeof s&&"copy"in s){mn=!1;let o=e.get(s)?.deref();if(!o)try{o=F(s.copy(),t),e.set(s,new WeakRef(o))}catch(e){console.error(e)}o&&(n[r]=o),mn=!0}}},{call:r}=Function,s=r.bind(r,r.apply);Object.defineProperties(Function.prototype,{apply:{value(e,t){return mn&&n(t),s(this,e,t)}},call:{value(e,...t){return mn&&n(t),s(this,e,t)}}})};var vn={type:"pyodide",module:(e="0.26.2")=>`https://cdn.jsdelivr.net/pyodide/v${e}/full/pyodide.mjs`,async engine({loadPyodide:e},t,n,r){Dt||"auto"!==t.experimental_create_proxy||En();const{stderr:s,stdout:o,get:a}=ot(),i=n.slice(0,n.lastIndexOf("/")),c=await a(e({stderr:s,stdout:o,indexURL:i})),l=xn.bind(c);return on.set(c,l),t.files&&await Kt(this,c,t.files,r),t.fetch&&await zt(this,c,t.fetch,r),t.js_modules&&await Xt(t.js_modules,r),t.packages&&await l(t.packages),c},registerJSModule:an,run:_n(ln),runAsync:_n(un),runEvent:_n(pn),transform:(e,t)=>Tn.call(e,t),writeFile:(e,t,n,r)=>{const s=cn(t,r);if(s)return e.unpackArchive(n,s,{extractDir:t.slice(0,-1)});const{FS:o,PATH:a,_module:{PATH_FS:i}}=e;return Ct({FS:o,PATH:a,PATH_FS:i},t,n)}};function Tn(e){const{ffi:{PyProxy:t}}=this;if(e&&"object"==typeof e){if(e instanceof t)return e.toJs(wn);if(e instanceof Map)return new Map([...e.entries()]);if(lt(e))return e.map(Tn,this)}return e}async function xn(e){await this.loadPackage("micropip");const t=this.pyimport("micropip");await t.install(e,{keep_going:!0}),t.destroy()}const kn="ruby-wasm-wasi",Sn=kn.replace(/\\W+/g,"_");var On={type:kn,experimental:!0,module:(e="2.6.2")=>`https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${e}/dist/browser/+esm`,async engine({DefaultRubyVM:e},t,n,r){n=n.replace(/\\/browser\\/\\+esm$/,"/ruby.wasm");const s=await Wt(n).arrayBuffer(),o=await WebAssembly.compile(s),{vm:a}=await e(o);return t.files&&await Kt(this,a,t.files,r),t.fetch&&await zt(this,a,t.fetch,r),t.js_modules&&await Xt(t.js_modules,r),a},registerJSModule(e,t,n){t=t.replace(/\\W+/g,"__");const r=`__module_${Sn}_${t}`;globalThis[r]=n,this.run(e,`require "js";$${t}=JS.global[:${r}]`),delete globalThis[r]},run:(e,t,...n)=>e.eval(ct(t),...n),runAsync:(e,t,...n)=>e.evalAsync(ct(t),...n),async runEvent(e,t,n){if(/^xworker\\.(on\\w+)$/.test(t)){const{$1:t}=RegExp,r=`__module_${Sn}_event`;globalThis[r]=n,this.run(e,`require "js";$xworker.call("${t}",JS.global[:${r}])`),delete globalThis[r]}else{const r=this.run(e,`method(:${t})`);await r.call(t,e.wrap(n))}},transform:(e,t)=>t,writeFile:()=>{throw new Error(`writeFile is not supported in ${kn}`)}};var An={type:"wasmoon",module:(e="1.16.0")=>`https://cdn.jsdelivr.net/npm/wasmoon@${e}/+esm`,async engine({LuaFactory:e,LuaLibraries:t},n,r,s){const{stderr:o,stdout:a,get:i}=ot(),c=await i((new e).createEngine());return c.global.getTable(t.Base,(e=>{c.global.setField(e,"print",a),c.global.setField(e,"printErr",o)})),n.files&&await Kt(this,c,n.files,s),n.fetch&&await zt(this,c,n.fetch,s),n.js_modules&&await Xt(n.js_modules,s),c},registerJSModule:(e,t,n)=>{e.global.set(t,n)},run:(e,t,...n)=>{try{return e.doStringSync(ct(t),...n)}catch(t){st.get(e).stderr(t)}},runAsync:async(e,t,...n)=>{try{return await e.doString(ct(t),...n)}catch(t){st.get(e).stderr(t)}},runEvent:async(e,t,n)=>{const[r,...s]=t.split(".");let o,a=e.global.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){st.get(e).stderr(t)}},transform:(e,t)=>t,writeFile:({cmodule:{module:{FS:e}}},t,n)=>((e,t,n)=>(Bt(e,Lt(t)),t=qt(e,t),e.writeFile(t,new Uint8Array(n),{canOwn:!0})))(e,t,n)};const jn=new WeakMap,Rn=async(e,t)=>{const{shelter:n,destroy:r,io:s}=jn.get(e),{output:o,result:a}=await n.captureR(ct(t));for(const{type:e,data:t}of o)s[e](t);return F(a,r,{token:!1})};var Pn={type:"webr",experimental:!0,module:(e="0.4.0")=>`https://cdn.jsdelivr.net/npm/webr@${e}/dist/webr.mjs`,async engine(e,t,n,r){const{get:s}=ot(),o=new e.WebR;await s(o.init().then((()=>o)));const a=await new o.Shelter;return jn.set(o,{module:e,shelter:a,destroy:a.destroy.bind(a),io:st.get(o)}),t.files&&await Kt(this,o,t.files,r),t.fetch&&await zt(this,o,t.fetch,r),t.js_modules&&await Xt(t.js_modules,r),o},registerJSModule(e,t){console.warn(`Experimental interpreter: module ${t} is not supported (yet)`)},run:Rn,runAsync:Rn,async runEvent(e,t,n){await e.evalRVoid(`${t}(event)`,{env:{event:{type:[n.type]}}})},transform:(e,t)=>(console.log("transforming",t),t),writeFile:()=>{}};const $n=new Map,In=new Map,Nn=new Proxy(new Map,{get(e,t){if(!e.has(t)){const[n,...r]=t.split("@"),s=$n.get(n),o=/^(?:\\.?\\.?\\/|https?:\\/\\/)/i.test(r)?r.join("@"):s.module(...r);e.set(t,{url:o,module:import(o),engine:s.engine.bind(s)})}const{url:n,module:r,engine:s}=e.get(t);return(e,o)=>r.then((r=>(In.set(t,e),s(r,e,n,o))))}}),Mn=e=>{for(const t of[].concat(e.type))$n.set(t,e)};for(const e of[Nt,yn,vn,On,An,Pn])Mn(e);const{parse:Fn}=JSON,Hn=e=>{try{return Fn(e)}catch(t){return dn(e)}},Wn=(e,t,n,r={})=>{if(t){const[e,s]=((e,t="./config.txt")=>{let n=typeof e;return"string"===n&&/\\.(json|toml|txt)$/.test(e)?n=RegExp.$1:e=t,[wt(e),n]})(t,n);"json"===s?r=Wt(e).json():"toml"===s?r=Wt(e).text().then(dn):"string"===s?r=Hn(t):"object"===s&&t?r=t:"txt"===s&&"string"==typeof r&&(r=Hn(r)),t=e}return gt(r).then((n=>Nn[e](n,t)))},Dn="BeforeRun",Cn="AfterRun",Ln=[`code${Dn}`,`code${Dn}Async`,`code${Cn}`,`code${Cn}Async`],Bn=["onWorker","onReady",`on${Dn}`,`on${Dn}Async`,`on${Cn}`,`on${Cn}Async`];function qn(e,t){const{run:n,runAsync:r}=$n.get(this.type);return{...e,run:n.bind(this,t),runAsync:r.bind(this,t)}}const Un=(e,t,n,r,s,o)=>{if(s||o){const a=qn.bind(e,t),i=r?"runAsync":"run",c=e[i];e[i]=r?async function(e,t,...r){s&&await s.call(this,a(e),n);const i=await c.call(this,e,t,...r);return o&&await o.call(this,a(e),n),i}:function(e,t,...r){s&&s.call(this,a(e),n);const i=c.call(this,e,t,...r);return o&&o.call(this,a(e),n),i}}};let Jn,zn,Gn;const Yn=(e,t)=>{addEventListener(e,t||(async t=>{try{await Jn,zn(`xworker.on${e}`,t)}catch(e){postMessage(e)}}),!!t&&{once:!0})},{parse:Kn,stringify:Xn}=p,{proxy:Vn,sync:Zn,polyfill:Qn,window:er,isWindowProxy:tr}=await(async e=>{const t=await Ge(e),n=e?.transform||(e=>e),{[et]:r}=t.proxy,s=new Map,o=(e,t)=>{let n=s.get(e)?.deref();return n||s.set(e,new WeakRef(n=t(e))),n},a=([e,t])=>{switch(e){case Ye[g]:return null==t?globalThis:typeof t===y?o(t,p.object):t;case Ye[f]:return typeof t===y?o(t,p.array):t;case Ye[d]:return typeof t===y?o(t,p.function):te(parseInt(t));case Ye[w]:return(e=>{if(e.startsWith("."))return Symbol.for(e.slice(1));for(const[t,n]of Ve)if(n===e)return t})(t);default:return t}},i=e=>{let[t,r]=m(e);switch(t){case g:if(r==globalThis||null==r)r=null;else if(typeof r===g&&!(r instanceof ue)){r=n(r);for(const e in r)r[e]=i(r[e])}return[Ye[g],r];case f:return[Ye[f],typeof r===y?r:n(r).map(i)];case d:return[Ye[d],typeof r===d?String(ne(n(r))):r];case w:return[Ye[w],Ze(e)];default:return[Ye[t],r]}},c=(...e)=>a(r(...e)),l={[E]:(e,t,n)=>c(E,e,i(t),i(n)),[v]:(e,t)=>c(v,e,i(t)),[T]:(e,t)=>c(T,e,i(t)),[k]:e=>c(k,e),[x]:(e,t)=>{const n=c(x,e,i(t));if(n){const{get:e,set:t,value:r}=n;e&&(n.get=a(e)),t&&(n.set=a(t)),r&&(n.value=a(r))}return n},[S]:(e,t)=>c(S,e,i(t)),[O]:e=>c(O,e),[A]:e=>c(A,e).map(a),[j]:e=>c(j,e),[R]:(e,t,n)=>c(R,e,i(t),i(n)),[P]:(e,t)=>c(P,e,i(t)),[Ke](e){s.delete(e),r(Ke,e)}},u={object:l,array:l,function:{...l,[_]:(e,...t)=>c(_,e,...t.map(i)),[b]:(e,...t)=>c(b,e,...t.map(i))}},{proxy:p,isProxy:h,pair:m}=V(u),$=p.object(null);return t.proxy[tt]=(e,t,...n)=>{const r=parseInt(t);switch(e){case _:{const[e,t]=n;return i(nt(te(r),a(e),t.map(a)))}case Ke:(e=>{const[t,n]=typeof e===y?[ee,Q]:[Q,ee],r=t.has(e);r&&(n.delete(t.get(e)),t.delete(e))})(r)}},{...t,window:$,isWindowProxy:h}})({parse:Kn,stringify:Xn,transform:e=>Gn?Gn(e):e}),nr={polyfill:Qn,sync:Vn,window:Zn?er:null,isWindowProxy:tr,onmessage:console.info,onerror:console.error,onmessageerror:console.warn,postMessage:postMessage.bind(self)};Yn("message",(({data:{options:e,config:t,configURL:n,code:r,hooks:s}})=>{Jn=(async()=>{try{const{id:o,tag:a,type:i,custom:c,version:l,config:u,async:p}=e,f=((e,t="")=>`${e}@${t}`.replace(/@$/,""))(i,l),d=await Wn(f,t,n,u),{js_modules:h}=In.get(f),y=h?.main,g=pt($n.get(i)),w=((e,t,n,r)=>({type:t,config:n,interpreter:r,io:st.get(r),run:(t,...n)=>e.run(r,t,...n),runAsync:(t,...n)=>e.runAsync(r,t,...n),runEvent:(...t)=>e.runEvent(r,...t)}))(g,c||i,u||{},d);let m="run";if(p&&(m+="Async"),s){let e,t,n="",r="";for(const e of Ln){const t=s[e];if(t){const s=e.endsWith("Async");(s&&p||!s&&!p)&&(e.startsWith("codeBefore")?n=t:r=t)}}(n||r)&&((e,t,n,r)=>{const s=e[t].bind(e);e[t]="run"===t?(e,t,...o)=>{n&&s(e,n,...o);const a=s(e,bt(t),...o);return r&&s(e,r,...o),a}:async(e,t,...o)=>{n&&await s(e,n,...o);const a=await s(e,bt(t),...o);return r&&await s(e,r,...o),a}})(g,m,n,r);for(const n of Bn.slice(2)){const r=s[n];if(r){const s=n.endsWith("Async");if(s&&p||!s&&!p){const s=_t(r);n.startsWith("onBefore")?e=s:t=s}}}Un(g,w,nr,p,e,t)}let _,b,E,v=null,T="";Zn&&(({CustomEvent:_,document:b}=er),v=o&&b.getElementById(o)||null,E=e=>mt(v,c||i,e,!0,_));const x=Rt(er,Vn,y,t);if(((e,t,n,r)=>{if("pyodide"===e)return;const s="polyscript.js_modules";for(const e of Reflect.ownKeys(r))t.registerJSModule(n,`${s}.${e}`,xt(r,e));t.registerJSModule(n,s,r)})(i,g,d,x),g.registerJSModule(d,"polyscript",{xworker:nr,currentScript:v,config:w.config,js_modules:x,get target(){return!T&&v&&("SCRIPT"===a?v.after(ut(b.createElement(`script-${c||i}`),{id:T=`${o}-target`})):(T=o,v.replaceChildren(),v.style.display="block")),T}}),zn=g.runEvent.bind(g,d),Gn=g.transform.bind(g,d),v&&E("ready"),s?.onReady&&_t(s?.onReady).call(g,qn.call(g,w,d),nr),await g[m](d,r),["micropython","pyodide"].includes(g.type)){const e="polyscript",t=`__${e}_workers__`,n="__export__";d.runPython([`import js as ${t}`,`${t}.${t} = "${n}" in locals() and ${n} or []`,`del ${t}`].join("\\n"));const r=[...globalThis[t]];delete globalThis[t],r.length&&d.runPython([`from ${e} import xworker as ${t}`,...r.map((e=>`${t}.sync.${e} = ${e}`)),`del ${t}`].join("\\n"))}return v&&E("done"),postMessage("polyscript:done"),d}catch(e){postMessage(e)}})(),Yn("error"),Yn("message"),Yn("messageerror")}));\n'.replace(Pe,$e)],{type:"application/javascript"})),...e))({serviceWorker:t?.serviceWorker||t?.service_worker}),{postMessage:o}=r,i=this instanceof Wt,l=en(r.proxy,{importJS:vn,importCSS:En}),c=Promise.withResolvers();let p=a(n).text().then((e=>{const n=i?this.toJSON():void 0;o.call(r,{options:t,config:s,code:e,hooks:n})})).then((()=>{p={then:e=>e()}}));return tn(r,{sync:{value:l},ready:{value:c.promise},postMessage:{value:(e,...n)=>p.then((()=>o.call(r,e,...n)))},onerror:{writable:!0,configurable:!0,value:console.error}}),r.addEventListener("message",(e=>{const{data:n}=e,t=n instanceof Error;(t||"polyscript:done"===n)&&(e.stopImmediatePropagation(),t?(c.reject(n),r.onerror(nn(e,{type:{value:"error"},error:{value:n}}))):c.resolve(r))})),i&&this.onWorker?.(this.interpreter,r),r};const $t="Invalid content";var It=e=>{const{src:n,worker:t}=e.attributes;if(t){let{value:s}=t;if(s)throw new SyntaxError("Invalid worker attribute");if(s=n?.value,!s){if(n)throw new SyntaxError("Invalid worker attribute");if(e.childElementCount){const{innerHTML:n,localName:t,type:r}=e,o=r||t.replace(/-script$/,"");s=Ze(n),console.warn(`Deprecated: use <script type="${o}"> for an always safe content parsing:\n`,s)}else s=e.textContent;return URL.createObjectURL(new Blob([Xe(s)],{type:"text/plain"}))}return s}if(n&&e.textContent.replace(/\/\*[\s\S]*?\*\//g,"").replace(/^\s*(?:\/\/|#).*/gm,"").trim())throw new SyntaxError($t)};const Lt=(e,n)=>{const t=(e=>{let n=e;for(;n.parentNode;)n=n.parentNode;return n})(e);return t.getElementById(n)||((e,n=document)=>n.querySelector(e))(n,t)},Ht=new WeakMap,Ut={get(){let e=Ht.get(this);return e||(e=document.createElement(`${this.type}-script`),Ht.set(this,e),qt(this)),e},set(e){"string"==typeof e?Ht.set(this,Lt(this,e)):(Ht.set(this,e),qt(this))}},Ft=new WeakMap,zt=new Map,Dt=(e,n)=>{const t=e?.value;return t?n+t:""},Bt=(e,n,t,s,r,o,a=e)=>{if(!zt.has(n)){const i={interpreter:Tt(t,r,o),queue:an(),XWorker:Pt(e,s)};zt.set(n,i),zt.has(e)||zt.set(e,i),zt.has(a)||zt.set(a,i)}return zt.get(n)},qt=async e=>{if(Ft.has(e)){const{target:n}=e;n&&(e.closest("head")?document.body.append(n):e.after(n))}else{const{attributes:{async:n,config:t,env:s,name:r,target:o,version:l,"service-worker":p},src:u,type:f}=e,d=l?.value,m=St(f,d);let h=Dt(t,"|");const _=Dt(s,"")||`${m}${h}`;h=h.slice(1);const y=It(e);if(y){const t=new(Pt(f,d))(y,{...pn(e,f),async:!!n,config:h,serviceWorker:p?.value});Ft.set(sn(e,"xworker",{value:t}),{xworker:t});const s=r?.value;return void(s&&i[s].resolve(t.ready))}const g=Dt(o,""),w=Bt(f,_,m,d,h);Ft.set(sn(e,"target",Ut),w),g&&Ht.set(e,Lt(e,g));const b=u?a(u).text():e.textContent;w.queue=w.queue.then((()=>(async(e,n,t,s)=>{const{type:r}=e,o=_t.get(r);o.experimental&&console.warn(`The ${r} interpreter is experimental`);const[a,i]=await on([Ft.get(e).interpreter,n]);try{sn(document,"currentScript",{configurable:!0,get:()=>e}),bn(r,o,a,yn),o.registerJSModule(a,"polyscript",{XWorker:t,currentScript:e,js_modules:yn,workers:c}),un(e,r,"ready");const n=o[s?"runAsync":"run"](a,i),l=un.bind(null,e,r,"done");return s?n.then(l):l(),n}finally{delete document.currentScript}})(e,b,w.XWorker,!!n)))}},Jt=new Proxy(nn(null),{get:(e,n)=>new Promise(queueMicrotask).then((()=>Gt(n)))}),Gt=async e=>{if(zt.has(e)){const{interpreter:n,queue:t}=zt.get(e);return(await on([n,t]))[0]}const n=zt.size?`Available interpreters are: ${[...zt.keys()].map((e=>`"${e}"`)).join(", ")}.`:"There are no interpreters in this page.";throw new Error(`The interpreter "${e}" was not found. ${n}`)},Yt=async e=>{const{type:n,currentTarget:s}=e;if(wt.length)for(let{name:r,value:o,ownerElement:a}of t(`./@*[${wt.map((e=>`name()="${e}${n}"`)).join(" or ")}]`,s)){r=r.slice(0,-(n.length+1));const t=await Gt(a.getAttribute(`${r}-env`)||r);_t.get(r).runEvent(t,o,e)}},Kt=e=>{if(wt.length)for(let{name:n,ownerElement:s}of t(`.//@*[${wt.map((e=>`starts-with(name(),"${e}")`)).join(" or ")}]`,e)){const e=n.lastIndexOf("-"),t=n.slice(e+1);"env"!==t&&(s.addEventListener(t,Yt),"disabled"in s&&!s.disabled&&(s.disabled=!0,Jt[n.slice(0,e)].then((()=>{s.disabled=!1}))))}},Vt=Pt(),Xt=[],Zt=new Map,Qt=new Map,es=new Map,ns=async e=>{for(const n of Xt)if(e.matches(n)){const t=Qt.get(n),s=ts.get(t),{resolve:r}=es.get(t),{options:o,known:a}=s;if(a.has(e))return;a.add(e);for(const[n,t]of Zt)e.matches(n)&&await t(e);const{interpreter:l,configURL:p,config:u,version:f,env:d,onerror:m,hooks:h}=o;let _;try{const n=It(e);if(n){const s=Vt.call(new Wt(null,h),n,{...pn(e,t),version:f,configURL:p,type:l,custom:t,config:e.getAttribute("config")||u||{},async:e.hasAttribute("async"),serviceWorker:e.getAttribute("service-worker")});sn(e,"xworker",{value:s}),r({type:t,xworker:s});const o=e.getAttribute("name");return void(o&&i[o].resolve(s.ready))}}catch(e){_=e}const y=St(l,f),g=d||`${y}${u?`|${u}`:""}`,{interpreter:w,XWorker:b}=Bt(t,g,y,f,u,p,l),v=await w,E=nn(_t.get(l)),k=new Wt(v,h),R=function(...e){return b.apply(k,e)},T={...fn(E,t,structuredClone(yt.get(y)),v),XWorker:R};bn(l,E,v,yn),E.registerJSModule(v,"polyscript",{XWorker:R,config:T.config,currentScript:t.startsWith("_")?null:e,js_modules:yn,workers:c});for(const n of["Run","RunAsync"]){let t,s,r="",o="";for(const e of At){const t=h?.main?.[e];t&&e.endsWith(n)&&(e.startsWith("codeBefore")?r=Xe(t()):o=Xe(t()))}(r||o)&&mn(E,`r${n.slice(1)}`,r,o);for(let e=2;e<Ot.length;e++){const r=Ot[e],o=h?.main?.[r];o&&r.endsWith(n)&&(r.startsWith("onBefore")?t=o:s=o)}Ct(E,T,e,n.endsWith("Async"),t,s)}s.queue=s.queue.then((()=>(r(T),_&&m?.(_,e),h?.main?.onReady?.(T,e))))}},ts=new Map;let ss=0;const rs=e=>(es.has(e)||es.set(e,Promise.withResolvers()),es.get(e).promise),[{customObserver:os,define:as,whenDefined:is,env:ls,Hook:cs,XWorker:ps},us]=e("polyscript",{customObserver:Zt,define:(e,t)=>{let s=null==e;if(s)e="_ps"+ss++;else if(_t.has(e)||ts.has(e))throw new Error(`<script type="${e}"> already registered`);if(!_t.has(t?.interpreter))throw new Error("Unspecified interpreter");_t.set(e,_t.get(t.interpreter));const r=[`script[type="${e}"]`];if(rs(e),s){const{hooks:n}=t,s=n?.main?.onReady;t={...t,hooks:{...n,main:{...n?.main,onReady(n,t){Xt.splice(Xt.indexOf(e),1),_t.delete(e),ts.delete(e),es.delete(e),t.remove(),s?.(n)}}}},document.head.append(en(document.createElement("script"),{type:e}))}else r.push(`${e}-script`),wt.push(`${e}-`);for(const n of r)Qt.set(n,e);Xt.push(...r),ts.set(e,{options:en({env:e},t),known:new WeakSet,queue:Promise.resolve()}),s||Kt(document),n(r.join(",")).forEach(ns)},whenDefined:rs,env:Jt,Hook:Wt,XWorker:Vt});if(!us){const e=new MutationObserver((e=>{const n=gt.join(",");for(const{type:s,target:r,attributeName:o,addedNodes:a}of e)if("attributes"!==s)for(const e of a)1===e.nodeType&&(Kt(e),n&&e.matches(n)?qt(e):t(n,e,!0));else{const e=o.lastIndexOf("-")+1;if(e){const n=o.slice(0,e);for(const t of wt)if(n===t){const n=o.slice(e);if("env"!==n){const e=r.hasAttribute(o)?"add":"remove";r[`${e}EventListener`](n,Yt)}break}}}})),t=(e,t,s)=>{e&&n(e,t).forEach(qt),(e=Xt.join(","))&&(s&&ns(t),n(e,t).forEach(ns))},s=n=>(e.observe(n,{childList:!0,subtree:!0,attributes:!0}),n),{attachShadow:r}=Element.prototype;en(Element.prototype,{attachShadow(e){return s(r.call(this,e))}}),queueMicrotask((()=>{Kt(s(document)),t(gt.join(","),document,!1)}))}var fs=new Map([["py","pyodide"],["mpy","micropython"]]);const ds=[];for(const[e]of fs){const n=[`script[type="${e}"]`,`${e}-script`];for(const t of document.querySelectorAll(n.join(","))){const{promise:n,resolve:s}=Promise.withResolvers();ds.push(n),t.addEventListener(`${e}:done`,s,{once:!0})}}Promise.all(ds).then((()=>{dispatchEvent(new Event("py:all-done"))}));var ms={"deprecations-manager":()=>import("./deprecations-manager-D7HRnKhq.js"),error:()=>import("./error-Bp5vw7yD.js"),"py-editor":()=>import("./py-editor-C2ERGt-I.js"),"py-terminal":()=>import("./py-terminal-LEOsZR0C.js")};const hs={GENERIC:"PY0000",CONFLICTING_CODE:"PY0409",BAD_CONFIG:"PY1000",MICROPIP_INSTALL_ERROR:"PY1001",BAD_PLUGIN_FILE_EXTENSION:"PY2000",NO_DEFAULT_EXPORT:"PY2001",TOP_LEVEL_AWAIT:"PY9000",FETCH_ERROR:"PY0001",FETCH_NAME_ERROR:"PY0002",FETCH_UNAUTHORIZED_ERROR:"PY0401",FETCH_FORBIDDEN_ERROR:"PY0403",FETCH_NOT_FOUND_ERROR:"PY0404",FETCH_SERVER_ERROR:"PY0500",FETCH_UNAVAILABLE_ERROR:"PY0503"};class _s extends Error{constructor(e,n="",t="text"){super(`(${e}): ${n}`),this.errorCode=e,this.messageType=t,this.name="UserError"}}class ys extends _s{constructor(e,n){super(e,n),this.name="FetchError"}}const gs=e=>e.text();async function ws(e,n){let t;try{t=await fetch(e,n)}catch(n){const t=n;let s;throw s=e.startsWith("http")?`Fetching from URL ${e} failed with error '${t.message}'. Are your filename and path correct?`:'Polyscript: Access to local files\n        (using [[fetch]] configurations in &lt;py-config&gt;)\n        is not available when directly opening a HTML file;\n        you must use a webserver to serve the additional files.\n        See <a style="text-decoration: underline;" href="https://github.com/pyscript/pyscript/issues/257#issuecomment-1119595062">this reference</a>\n        on starting a simple webserver with Python.\n            ',new ys(hs.FETCH_ERROR,s)}if(!t.ok){const n=`Fetching from URL ${e} failed with error ${t.status} (${t.statusText}). Are your filename and path correct?`;switch(t.status){case 404:throw new ys(hs.FETCH_NOT_FOUND_ERROR,n);case 401:throw new ys(hs.FETCH_UNAUTHORIZED_ERROR,n);case 403:throw new ys(hs.FETCH_FORBIDDEN_ERROR,n);case 500:throw new ys(hs.FETCH_SERVER_ERROR,n);case 503:throw new ys(hs.FETCH_UNAVAILABLE_ERROR,n);default:throw new ys(hs.FETCH_ERROR,n)}}return t}const{BAD_CONFIG:bs,CONFLICTING_CODE:vs}=hs,Es=async(e,n)=>{let t=e?.trim(),s="",r=!1,o=/^{/.test(t)&&/}$/.test(t);if(!o&&/\.(\w+)(?:\?\S*)?$/.test(t)){const e=RegExp.$1;"json"===e&&"toml"!==n?o=!0:"toml"===e&&"json"!==n?r=!0:((e,n="")=>{let t=`(${bs}): Invalid URL: ${e}`;throw n&&(t+=`\nexpected ${n} content`),new Error(t)})(t,n),s=t,t=(await ws(s).then(gs)).trim()}return{json:o,toml:r||!o&&!!t,text:t,url:s}},ks=e=>new Error(`(${vs}): ${e}`),Rs=(e,n=location.href)=>new URL(e,n).href,Ts=(e,n,{message:t})=>{let s=`(${bs}): Invalid ${e}`;return n&&(s+=` @ ${n}`),new SyntaxError(`${s}\n${t}`)},Ss=new Map;for(const[e]of fs){let t,s,r,o,a,i,l,c=n(`${e}-config`),p=n([`script[type="${e}"][config]:not([worker])`,`${e}-script[config]:not([worker])`].join(","));if(c.length>1?r=ks(`Too many ${e}-config`):c.length&&p.length?r=ks(`Ambiguous ${e}-config VS config attribute`):c.length?([l]=c,a=l.getAttribute("src")||l.textContent,i=l.getAttribute("type")):p.length&&([l,...p]=p,a=l.getAttribute("config"),p.some((e=>e.getAttribute("config")!==a))&&(r=ks("Unable to use different configs on main"))),!r&&a)try{const{json:e,toml:n,text:t,url:l}=await Es(a,i);if(l&&(o=Rs(l)),a=t,e||"json"===i)try{s=JSON.parse(t)}catch(e){r=Ts("JSON",l,e)}else if(n||"toml"===i)try{const{parse:e}=await import("./toml-CvAfdf9_.js");s=e(t)}catch(e){r=Ts("TOML",l,e)}}catch(e){r=e}const u=[];for(const[e,n]of Object.entries(ms))r?"error"===e&&n().then((({notify:e})=>e(r.message))):s?.plugins?.includes(`!${e}`)||u.push(n().then((({default:e})=>e)));t=Promise.all(u),Ss.set(e,{config:s,configURL:o,plugins:t,error:r})}var xs={is_pyterminal:()=>!1,sleep:e=>new Promise((n=>setTimeout(n,1e3*e)))};const js=e=>{sn(document,"currentScript",{configurable:!0,get:()=>e})},Ms=()=>{delete document.currentScript};var As=async(e,n,t,s)=>{const r=s.endsWith("Async");(s.startsWith("onBefore")?js:Ms)(t);for(const o of e(s))r?await o(n,t):o(n,t)};const Os=()=>!0,Ns=e=>{throw new TypeError(e)},Cs=(e,n)=>{const t=[];if(e)for(const n of e.split(/\s*\|\s*/))"object"===n?t.push((e=>null!==e&&typeof e===n)):"null"===n?t.push((e=>null===e)):t.push((e=>typeof e===n));if(n)for(const e of[].concat(n))t.push((n=>n instanceof e));switch(t.length){case 0:return Os;case 1:return t[0];default:return e=>t.some((n=>n(e)))}},Ws=(e,n,t,s=Ns)=>r=>{const o=[`Invalid ${typeof r} ${t}: expected `];e&&(o.push(e),n&&o.push(" or ")),n&&(o.push("an instanceof "),o.push([].concat(n).map((({name:e})=>e)).join(" | "))),s(o.join(""),r)},Ps=(e=>n=>{const[t,s]=((e,n="value")=>{const t=e?.typeof,s=e?.instanceof;return[Cs(t,s),Ws(t,s,n,e?.onerror)]})(n);return class extends e{add(e){return t(e)?super.add(e):s(e)}}})(Set);const{entries:$s}=Object,Is=["import os as _os","from pathlib import Path as _Path","_path = None"],Ls=new class extends Array{#a=!1;#i;#l;constructor(e,...n){super(),this.#l=e,this.#i=n}push(...e){return this.#a&&super.push(...e),this.#l.push(...e)}path(e){for(const n of this.#i)if(this.#a=e.startsWith(n))break}}(Is,"-"),Hs=(e,n)=>{for(const[t,s]of $s(n))if(Ls.path(`${e}/${t}`),Ls.push(`_path = _Path("${e}/${t}")`),"string"==typeof s){const e=JSON.stringify(s);Ls.push(`_path.write_text(${e},encoding="utf-8")`)}else Ls.push(`if not _os.path.exists("${e}/${t}"):`),Ls.push("    _path.mkdir(parents=True, exist_ok=True)"),Hs(`${e}/${t}`,s)};Hs(".",{pyscript:{"__init__.py":'# Some notes about the naming conventions and the relationship between various\n# similar-but-different names.\n#\n# import pyscript\n#     this package contains the main user-facing API offered by pyscript. All\n#     the names which are supposed be used by end users should be made\n#     available in pyscript/__init__.py (i.e., this file)\n#\n# import _pyscript\n#     this is an internal module implemented in JS. It is used internally by\n#     the pyscript package, end users should not use it directly. For its\n#     implementation, grep for `interpreter.registerJsModule("_pyscript",\n#     ...)` in core.js\n#\n# import js\n#     this is the JS globalThis, as exported by pyodide and/or micropython\'s\n#     FFIs. As such, it contains different things in the main thread or in a\n#     worker.\n#\n# import pyscript.magic_js\n#     this submodule abstracts away some of the differences between the main\n#     thread and the worker. In particular, it defines `window` and `document`\n#     in such a way that these names work in both cases: in the main thread,\n#     they are the "real" objects, in the worker they are proxies which work\n#     thanks to coincident.\n#\n# from pyscript import window, document\n#     these are just the window and document objects as defined by\n#     pyscript.magic_js. This is the blessed way to access them from pyscript,\n#     as it works transparently in both the main thread and worker cases.\n\nfrom polyscript import lazy_py_modules as py_import\nfrom pyscript.display import HTML, display\nfrom pyscript.fetch import fetch\nfrom pyscript.magic_js import (\n    RUNNING_IN_WORKER,\n    PyWorker,\n    config,\n    current_target,\n    document,\n    js_import,\n    js_modules,\n    sync,\n    window,\n)\nfrom pyscript.storage import Storage, storage\nfrom pyscript.websocket import WebSocket\n\nif not RUNNING_IN_WORKER:\n    from pyscript.workers import create_named_worker, workers\n\ntry:\n    from pyscript.event_handling import when\nexcept:\n    # TODO: should we remove this? Or at the very least, we should capture\n    # the traceback otherwise it\'s very hard to debug\n    from pyscript.util import NotSupported\n\n    when = NotSupported(\n        "pyscript.when", "pyscript.when currently not available with this interpreter"\n    )\n',"display.py":'import base64\nimport html\nimport io\nimport re\n\nfrom pyscript.magic_js import current_target, document, window\n\n_MIME_METHODS = {\n    "savefig": "image/png",\n    "_repr_javascript_": "application/javascript",\n    "_repr_json_": "application/json",\n    "_repr_latex": "text/latex",\n    "_repr_png_": "image/png",\n    "_repr_jpeg_": "image/jpeg",\n    "_repr_pdf_": "application/pdf",\n    "_repr_svg_": "image/svg+xml",\n    "_repr_markdown_": "text/markdown",\n    "_repr_html_": "text/html",\n    "__repr__": "text/plain",\n}\n\n\ndef _render_image(mime, value, meta):\n    # If the image value is using bytes we should convert it to base64\n    # otherwise it will return raw bytes and the browser will not be able to\n    # render it.\n    if isinstance(value, bytes):\n        value = base64.b64encode(value).decode("utf-8")\n\n    # This is the pattern of base64 strings\n    base64_pattern = re.compile(\n        r"^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$"\n    )\n    # If value doesn\'t match the base64 pattern we should encode it to base64\n    if len(value) > 0 and not base64_pattern.match(value):\n        value = base64.b64encode(value.encode("utf-8")).decode("utf-8")\n\n    data = f"data:{mime};charset=utf-8;base64,{value}"\n    attrs = " ".join([\'{k}="{v}"\' for k, v in meta.items()])\n    return f\'<img src="{data}" {attrs}></img>\'\n\n\ndef _identity(value, meta):\n    return value\n\n\n_MIME_RENDERERS = {\n    "text/plain": html.escape,\n    "text/html": _identity,\n    "image/png": lambda value, meta: _render_image("image/png", value, meta),\n    "image/jpeg": lambda value, meta: _render_image("image/jpeg", value, meta),\n    "image/svg+xml": _identity,\n    "application/json": _identity,\n    "application/javascript": lambda value, meta: f"<script>{value}<\\\\/script>",\n}\n\n\nclass HTML:\n    """\n    Wrap a string so that display() can render it as plain HTML\n    """\n\n    def __init__(self, html):\n        self._html = html\n\n    def _repr_html_(self):\n        return self._html\n\n\ndef _eval_formatter(obj, print_method):\n    """\n    Evaluates a formatter method.\n    """\n    if print_method == "__repr__":\n        return repr(obj)\n    elif hasattr(obj, print_method):\n        if print_method == "savefig":\n            buf = io.BytesIO()\n            obj.savefig(buf, format="png")\n            buf.seek(0)\n            return base64.b64encode(buf.read()).decode("utf-8")\n        return getattr(obj, print_method)()\n    elif print_method == "_repr_mimebundle_":\n        return {}, {}\n    return None\n\n\ndef _format_mime(obj):\n    """\n    Formats object using _repr_x_ methods.\n    """\n    if isinstance(obj, str):\n        return html.escape(obj), "text/plain"\n\n    mimebundle = _eval_formatter(obj, "_repr_mimebundle_")\n    if isinstance(mimebundle, tuple):\n        format_dict, _ = mimebundle\n    else:\n        format_dict = mimebundle\n\n    output, not_available = None, []\n    for method, mime_type in _MIME_METHODS.items():\n        if mime_type in format_dict:\n            output = format_dict[mime_type]\n        else:\n            output = _eval_formatter(obj, method)\n\n        if output is None:\n            continue\n        elif mime_type not in _MIME_RENDERERS:\n            not_available.append(mime_type)\n            continue\n        break\n    if output is None:\n        if not_available:\n            window.console.warn(\n                f"Rendered object requested unavailable MIME renderers: {not_available}"\n            )\n        output = repr(output)\n        mime_type = "text/plain"\n    elif isinstance(output, tuple):\n        output, meta = output\n    else:\n        meta = {}\n    return _MIME_RENDERERS[mime_type](output, meta), mime_type\n\n\ndef _write(element, value, append=False):\n    html, mime_type = _format_mime(value)\n    if html == "\\\\n":\n        return\n\n    if append:\n        out_element = document.createElement("div")\n        element.append(out_element)\n    else:\n        out_element = element.lastElementChild\n        if out_element is None:\n            out_element = element\n\n    if mime_type in ("application/javascript", "text/html"):\n        script_element = document.createRange().createContextualFragment(html)\n        out_element.append(script_element)\n    else:\n        out_element.innerHTML = html\n\n\ndef display(*values, target=None, append=True):\n    if target is None:\n        target = current_target()\n    elif not isinstance(target, str):\n        raise TypeError(f"target must be str or None, not {target.__class__.__name__}")\n    elif target == "":\n        raise ValueError("Cannot have an empty target")\n    elif target.startswith("#"):\n        # note: here target is str and not None!\n        # align with @when behavior\n        target = target[1:]\n\n    element = document.getElementById(target)\n\n    # If target cannot be found on the page, a ValueError is raised\n    if element is None:\n        raise ValueError(\n            f"Invalid selector with id={target}. Cannot be found in the page."\n        )\n\n    # if element is a <script type="py">, it has a \'target\' attribute which\n    # points to the visual element holding the displayed values. In that case,\n    # use that.\n    if element.tagName == "SCRIPT" and hasattr(element, "target"):\n        element = element.target\n\n    for v in values:\n        if not append:\n            element.replaceChildren()\n        _write(element, v, append=append)\n',"event_handling.py":'import inspect\n\ntry:\n    from pyodide.ffi.wrappers import add_event_listener\n\nexcept ImportError:\n\n    def add_event_listener(el, event_type, func):\n        el.addEventListener(event_type, func)\n\n\nfrom pyscript.magic_js import document\n\n\ndef when(event_type=None, selector=None):\n    """\n    Decorates a function and passes py-* events to the decorated function\n    The events might or not be an argument of the decorated function\n    """\n\n    def decorator(func):\n\n        from pyscript.web import Element, ElementCollection\n\n        if isinstance(selector, str):\n            elements = document.querySelectorAll(selector)\n        # TODO: This is a hack that will be removed when pyscript becomes a package\n        #       and we can better manage the imports without circular dependencies\n        elif isinstance(selector, Element):\n            elements = [selector._dom_element]\n        elif isinstance(selector, ElementCollection):\n            elements = [el._dom_element for el in selector]\n        else:\n            if isinstance(selector, list):\n                elements = selector\n            else:\n                elements = [selector]\n\n        try:\n            sig = inspect.signature(func)\n            # Function doesn\'t receive events\n            if not sig.parameters:\n\n                def wrapper(*args, **kwargs):\n                    func()\n\n            else:\n                wrapper = func\n\n        except AttributeError:\n            # TODO: this is very ugly hack to get micropython working because inspect.signature\n            #       doesn\'t exist, but we need to actually properly replace inspect.signature.\n            #       It may be actually better to not try any magic for now and raise the error\n            def wrapper(*args, **kwargs):\n                try:\n                    return func(*args, **kwargs)\n                except TypeError as e:\n                    if "takes" in str(e) and "positional arguments" in str(e):\n                        return func()\n\n                    raise\n\n        for el in elements:\n            add_event_listener(el, event_type, wrapper)\n\n        return func\n\n    return decorator\n',"fetch.py":'import json\n\nimport js\nfrom pyscript.util import as_bytearray\n\n\n### wrap the response to grant Pythonic results\nclass _Response:\n    def __init__(self, response):\n        self._response = response\n\n    # grant access to response.ok and other fields\n    def __getattr__(self, attr):\n        return getattr(self._response, attr)\n\n    # exposed methods with Pythonic results\n    async def arrayBuffer(self):\n        buffer = await self._response.arrayBuffer()\n        # works in Pyodide\n        if hasattr(buffer, "to_py"):\n            return buffer.to_py()\n        # shims in MicroPython\n        return memoryview(as_bytearray(buffer))\n\n    async def blob(self):\n        return await self._response.blob()\n\n    async def bytearray(self):\n        buffer = await self._response.arrayBuffer()\n        return as_bytearray(buffer)\n\n    async def json(self):\n        return json.loads(await self.text())\n\n    async def text(self):\n        return await self._response.text()\n\n\n### allow direct await to _Response methods\nclass _DirectResponse:\n    @staticmethod\n    def setup(promise, response):\n        promise._response = _Response(response)\n        return promise._response\n\n    def __init__(self, promise):\n        self._promise = promise\n        promise._response = None\n        promise.arrayBuffer = self.arrayBuffer\n        promise.blob = self.blob\n        promise.bytearray = self.bytearray\n        promise.json = self.json\n        promise.text = self.text\n\n    async def _response(self):\n        if not self._promise._response:\n            await self._promise\n        return self._promise._response\n\n    async def arrayBuffer(self):\n        response = await self._response()\n        return await response.arrayBuffer()\n\n    async def blob(self):\n        response = await self._response()\n        return await response.blob()\n\n    async def bytearray(self):\n        response = await self._response()\n        return await response.bytearray()\n\n    async def json(self):\n        response = await self._response()\n        return await response.json()\n\n    async def text(self):\n        response = await self._response()\n        return await response.text()\n\n\ndef fetch(url, **kw):\n    # workaround Pyodide / MicroPython dict <-> js conversion\n    options = js.JSON.parse(json.dumps(kw))\n    awaited = lambda response, *args: _DirectResponse.setup(promise, response)\n    promise = js.fetch(url, options).then(awaited)\n    _DirectResponse(promise)\n    return promise\n',"ffi.py":'try:\n    import js\n    from pyodide.ffi import create_proxy as _cp\n    from pyodide.ffi import to_js as _py_tjs\n\n    from_entries = js.Object.fromEntries\n\n    def _tjs(value, **kw):\n        if not hasattr(kw, "dict_converter"):\n            kw["dict_converter"] = from_entries\n        return _py_tjs(value, **kw)\n\nexcept:\n    from jsffi import create_proxy as _cp\n    from jsffi import to_js as _tjs\n\ncreate_proxy = _cp\nto_js = _tjs\n',"flatted.py":"# https://www.npmjs.com/package/flatted\n\nimport json as _json\n\n\nclass _Known:\n    def __init__(self):\n        self.key = []\n        self.value = []\n\n\nclass _String:\n    def __init__(self, value):\n        self.value = value\n\n\ndef _array_keys(value):\n    keys = []\n    i = 0\n    for _ in value:\n        keys.append(i)\n        i += 1\n    return keys\n\n\ndef _object_keys(value):\n    keys = []\n    for key in value:\n        keys.append(key)\n    return keys\n\n\ndef _is_array(value):\n    return isinstance(value, list) or isinstance(value, tuple)\n\n\ndef _is_object(value):\n    return isinstance(value, dict)\n\n\ndef _is_string(value):\n    return isinstance(value, str)\n\n\ndef _index(known, input, value):\n    input.append(value)\n    index = str(len(input) - 1)\n    known.key.append(value)\n    known.value.append(index)\n    return index\n\n\ndef _loop(keys, input, known, output):\n    for key in keys:\n        value = output[key]\n        if isinstance(value, _String):\n            _ref(key, input[int(value.value)], input, known, output)\n\n    return output\n\n\ndef _ref(key, value, input, known, output):\n    if _is_array(value) and not value in known:\n        known.append(value)\n        value = _loop(_array_keys(value), input, known, value)\n    elif _is_object(value) and not value in known:\n        known.append(value)\n        value = _loop(_object_keys(value), input, known, value)\n\n    output[key] = value\n\n\ndef _relate(known, input, value):\n    if _is_string(value) or _is_array(value) or _is_object(value):\n        try:\n            return known.value[known.key.index(value)]\n        except:\n            return _index(known, input, value)\n\n    return value\n\n\ndef _transform(known, input, value):\n    if _is_array(value):\n        output = []\n        for val in value:\n            output.append(_relate(known, input, val))\n        return output\n\n    if _is_object(value):\n        obj = {}\n        for key in value:\n            obj[key] = _relate(known, input, value[key])\n        return obj\n\n    return value\n\n\ndef _wrap(value):\n    if _is_string(value):\n        return _String(value)\n\n    if _is_array(value):\n        i = 0\n        for val in value:\n            value[i] = _wrap(val)\n            i += 1\n\n    elif _is_object(value):\n        for key in value:\n            value[key] = _wrap(value[key])\n\n    return value\n\n\ndef parse(value, *args, **kwargs):\n    json = _json.loads(value, *args, **kwargs)\n    wrapped = []\n    for value in json:\n        wrapped.append(_wrap(value))\n\n    input = []\n    for value in wrapped:\n        if isinstance(value, _String):\n            input.append(value.value)\n        else:\n            input.append(value)\n\n    value = input[0]\n\n    if _is_array(value):\n        return _loop(_array_keys(value), input, [value], value)\n\n    if _is_object(value):\n        return _loop(_object_keys(value), input, [value], value)\n\n    return value\n\n\ndef stringify(value, *args, **kwargs):\n    known = _Known()\n    input = []\n    output = []\n    i = int(_index(known, input, value))\n    while i < len(input):\n        output.append(_transform(known, input, input[i]))\n        i += 1\n    return _json.dumps(output, *args, **kwargs)\n","magic_js.py":'import json\nimport sys\n\nimport js as globalThis\nfrom polyscript import config as _config\nfrom polyscript import js_modules\nfrom pyscript.util import NotSupported\n\nRUNNING_IN_WORKER = not hasattr(globalThis, "document")\n\nconfig = json.loads(globalThis.JSON.stringify(_config))\n\n\n# allow `from pyscript.js_modules.xxx import yyy`\nclass JSModule:\n    def __init__(self, name):\n        self.name = name\n\n    def __getattr__(self, field):\n        # avoid pyodide looking for non existent fields\n        if not field.startswith("_"):\n            return getattr(getattr(js_modules, self.name), field)\n\n\n# generate N modules in the system that will proxy the real value\nfor name in globalThis.Reflect.ownKeys(js_modules):\n    sys.modules[f"pyscript.js_modules.{name}"] = JSModule(name)\nsys.modules["pyscript.js_modules"] = js_modules\n\nif RUNNING_IN_WORKER:\n    import polyscript\n\n    PyWorker = NotSupported(\n        "pyscript.PyWorker",\n        "pyscript.PyWorker works only when running in the main thread",\n    )\n\n    try:\n        import js\n\n        window = polyscript.xworker.window\n        document = window.document\n        js.document = document\n        # this is the same as js_import on main and it lands modules on main\n        js_import = window.Function(\n            "return (...urls) => Promise.all(urls.map((url) => import(url)))"\n        )()\n    except:\n        message = "Unable to use `window` or `document` -> https://docs.pyscript.net/latest/faq/#sharedarraybuffer"\n        globalThis.console.warn(message)\n        window = NotSupported("pyscript.window", message)\n        document = NotSupported("pyscript.document", message)\n        js_import = None\n\n    sync = polyscript.xworker.sync\n\n    # in workers the display does not have a default ID\n    # but there is a sync utility from xworker\n    def current_target():\n        return polyscript.target\n\nelse:\n    import _pyscript\n    from _pyscript import PyWorker, js_import\n\n    window = globalThis\n    document = globalThis.document\n    sync = NotSupported(\n        "pyscript.sync", "pyscript.sync works only when running in a worker"\n    )\n\n    # in MAIN the current element target exist, just use it\n    def current_target():\n        return _pyscript.target\n',"storage.py":'from polyscript import storage as _storage\nfrom pyscript.flatted import parse as _parse\nfrom pyscript.flatted import stringify as _stringify\n\n\n# convert a Python value into an IndexedDB compatible entry\ndef _to_idb(value):\n    if value is None:\n        return _stringify(["null", 0])\n    if isinstance(value, (bool, float, int, str, list, dict, tuple)):\n        return _stringify(["generic", value])\n    if isinstance(value, bytearray):\n        return _stringify(["bytearray", [v for v in value]])\n    if isinstance(value, memoryview):\n        return _stringify(["memoryview", [v for v in value]])\n    raise TypeError(f"Unexpected value: {value}")\n\n\n# convert an IndexedDB compatible entry into a Python value\ndef _from_idb(value):\n    (\n        kind,\n        result,\n    ) = _parse(value)\n    if kind == "null":\n        return None\n    if kind == "generic":\n        return result\n    if kind == "bytearray":\n        return bytearray(result)\n    if kind == "memoryview":\n        return memoryview(bytearray(result))\n    return value\n\n\nclass Storage(dict):\n    def __init__(self, store):\n        super().__init__({k: _from_idb(v) for k, v in store.entries()})\n        self.__store__ = store\n\n    def __delitem__(self, attr):\n        self.__store__.delete(attr)\n        super().__delitem__(attr)\n\n    def __setitem__(self, attr, value):\n        self.__store__.set(attr, _to_idb(value))\n        super().__setitem__(attr, value)\n\n    def clear(self):\n        self.__store__.clear()\n        super().clear()\n\n    async def sync(self):\n        await self.__store__.sync()\n\n\nasync def storage(name="", storage_class=Storage):\n    if not name:\n        raise ValueError("The storage name must be defined")\n    return storage_class(await _storage(f"@pyscript/{name}"))\n',"util.py":'import js\n\n\ndef as_bytearray(buffer):\n    ui8a = js.Uint8Array.new(buffer)\n    size = ui8a.length\n    ba = bytearray(size)\n    for i in range(0, size):\n        ba[i] = ui8a[i]\n    return ba\n\n\nclass NotSupported:\n    """\n    Small helper that raises exceptions if you try to get/set any attribute on\n    it.\n    """\n\n    def __init__(self, name, error):\n        object.__setattr__(self, "name", name)\n        object.__setattr__(self, "error", error)\n\n    def __repr__(self):\n        return f"<NotSupported {self.name} [{self.error}]>"\n\n    def __getattr__(self, attr):\n        raise AttributeError(self.error)\n\n    def __setattr__(self, attr, value):\n        raise AttributeError(self.error)\n\n    def __call__(self, *args):\n        raise TypeError(self.error)\n',"web.py":'"""Lightweight interface to the DOM and HTML elements."""\n\n# `when` is not used in this module. It is imported here save the user an additional\n# import (i.e. they can get what they need from `pyscript.web`).\nfrom pyscript import document, when  # NOQA\n\n\ndef wrap_dom_element(dom_element):\n    """Wrap an existing DOM element in an instance of a subclass of `Element`.\n\n    This is just a convenience function to avoid having to import the `Element` class\n    and use its class method.\n    """\n\n    return Element.wrap_dom_element(dom_element)\n\n\nclass Element:\n    # A lookup table to get an `Element` subclass by tag name. Used when wrapping an\n    # existing DOM element.\n    element_classes_by_tag_name = {}\n\n    @classmethod\n    def get_tag_name(cls):\n        """Return the HTML tag name for the class.\n\n        For classes that have a trailing underscore (because they clash with a Python\n        keyword or built-in), we remove it to get the tag name. e.g. for the `input_`\n        class, the tag name is `input`.\n\n        """\n        return cls.__name__.replace("_", "")\n\n    @classmethod\n    def register_element_classes(cls, element_classes):\n        """Register an iterable of element classes."""\n        for element_class in element_classes:\n            tag_name = element_class.get_tag_name()\n            cls.element_classes_by_tag_name[tag_name] = element_class\n\n    @classmethod\n    def unregister_element_classes(cls, element_classes):\n        """Unregister an iterable of element classes."""\n        for element_class in element_classes:\n            tag_name = element_class.get_tag_name()\n            cls.element_classes_by_tag_name.pop(tag_name, None)\n\n    @classmethod\n    def wrap_dom_element(cls, dom_element):\n        """Wrap an existing DOM element in an instance of a subclass of `Element`.\n\n        We look up the `Element` subclass by the DOM element\'s tag name. For any unknown\n        elements (custom tags etc.) use *this* class (`Element`).\n        """\n        element_cls = cls.element_classes_by_tag_name.get(\n            dom_element.tagName.lower(), cls\n        )\n\n        return element_cls(dom_element=dom_element)\n\n    def __init__(self, dom_element=None, classes=None, style=None, **kwargs):\n        """Create a new, or wrap an existing DOM element.\n\n        If `dom_element` is None we are being called to *create* a new element.\n        Otherwise, we are being called to *wrap* an existing DOM element.\n        """\n        self._dom_element = dom_element or document.createElement(\n            type(self).get_tag_name()\n        )\n\n        # A set-like interface to the element\'s `classList`.\n        self._classes = Classes(self)\n\n        # A dict-like interface to the element\'s `style` attribute.\n        self._style = Style(self)\n\n        # Set any specified classes, styles, and DOM properties.\n        self.update(classes=classes, style=style, **kwargs)\n\n    def __eq__(self, obj):\n        """Check for equality by comparing the underlying DOM element."""\n        return isinstance(obj, Element) and obj._dom_element == self._dom_element\n\n    def __getitem__(self, key):\n        """Get an item within the element\'s children.\n\n        If `key` is an integer or a slice we use it to index/slice the element\'s\n        children. Otherwise, we use `key` as a query selector.\n        """\n        if isinstance(key, int) or isinstance(key, slice):\n            return self.children[key]\n\n        return self.find(key)\n\n    def __getattr__(self, name):\n        # This allows us to get attributes on the underlying DOM element that clash\n        # with Python keywords or built-ins (e.g. the output element has an\n        # attribute `for` which is a Python keyword, so you can access it on the\n        # Element instance via `for_`).\n        if name.endswith("_"):\n            name = name[:-1]\n\n        return getattr(self._dom_element, name)\n\n    def __setattr__(self, name, value):\n        # This class overrides `__setattr__` to delegate "public" attributes to the\n        # underlying DOM element. BUT, we don\'t use the usual Python pattern where\n        # we set attributes on the element itself via `self.__dict__` as that is not\n        # yet supported in our build of MicroPython. Instead, we handle it here by\n        # using super for all "private" attributes (those starting with an underscore).\n        if name.startswith("_"):\n            super().__setattr__(name, value)\n\n        else:\n            # This allows us to set attributes on the underlying DOM element that clash\n            # with Python keywords or built-ins (e.g. the output element has an\n            # attribute `for` which is a Python keyword, so you can access it on the\n            # Element instance via `for_`).\n            if name.endswith("_"):\n                name = name[:-1]\n\n            setattr(self._dom_element, name, value)\n\n    @property\n    def children(self):\n        """Return the element\'s children as an `ElementCollection`."""\n        return ElementCollection.wrap_dom_elements(self._dom_element.children)\n\n    @property\n    def classes(self):\n        """Return the element\'s `classList` as a `Classes` instance."""\n        return self._classes\n\n    @property\n    def parent(self):\n        """Return the element\'s `parent `Element`."""\n        if self._dom_element.parentElement is None:\n            return None\n\n        return Element.wrap_dom_element(self._dom_element.parentElement)\n\n    @property\n    def style(self):\n        """Return the element\'s `style` attribute as a `Style` instance."""\n        return self._style\n\n    def append(self, *items):\n        """Append the specified items to the element."""\n        for item in items:\n            if isinstance(item, Element):\n                self._dom_element.appendChild(item._dom_element)\n\n            elif isinstance(item, ElementCollection):\n                for element in item:\n                    self._dom_element.appendChild(element._dom_element)\n\n            # We check for list/tuple here and NOT for any iterable as it will match\n            # a JS Nodelist which is handled explicitly below.\n            # NodeList.\n            elif isinstance(item, list) or isinstance(item, tuple):\n                for child in item:\n                    self.append(child)\n\n            else:\n                # In this case we know it\'s not an Element or an ElementCollection, so\n                # we guess that it\'s either a DOM element or NodeList returned via the\n                # ffi.\n                try:\n                    # First, we try to see if it\'s an element by accessing the \'tagName\'\n                    # attribute.\n                    item.tagName\n                    self._dom_element.appendChild(item)\n\n                except AttributeError:\n                    try:\n                        # Ok, it\'s not an element, so let\'s see if it\'s a NodeList by\n                        # accessing the \'length\' attribute.\n                        item.length\n                        for element_ in item:\n                            self._dom_element.appendChild(element_)\n\n                    except AttributeError:\n                        # Nope! This is not an element or a NodeList.\n                        raise TypeError(\n                            f\'Element "{item}" is a proxy object, "\'\n                            f"but not a valid element or a NodeList."\n                        )\n\n    def clone(self, clone_id=None):\n        """Make a clone of the element (clones the underlying DOM object too)."""\n        clone = Element.wrap_dom_element(self._dom_element.cloneNode(True))\n        clone.id = clone_id\n        return clone\n\n    def find(self, selector):\n        """Find all elements that match the specified selector.\n\n        Return the results as a (possibly empty) `ElementCollection`.\n        """\n        return ElementCollection.wrap_dom_elements(\n            self._dom_element.querySelectorAll(selector)\n        )\n\n    def show_me(self):\n        """Convenience method for \'element.scrollIntoView()\'."""\n        self._dom_element.scrollIntoView()\n\n    def update(self, classes=None, style=None, **kwargs):\n        """Update the element with the specified classes, styles, and DOM properties."""\n\n        if classes:\n            self.classes.add(classes)\n\n        if style:\n            self.style.set(**style)\n\n        for name, value in kwargs.items():\n            setattr(self, name, value)\n\n\nclass Classes:\n    """A set-like interface to an element\'s `classList`."""\n\n    def __init__(self, element: Element):\n        self._element = element\n        self._class_list = self._element._dom_element.classList\n\n    def __contains__(self, item):\n        return item in self._class_list\n\n    def __eq__(self, other):\n        # We allow comparison with either another `Classes` instance...\n        if isinstance(other, Classes):\n            compare_with = list(other._class_list)\n\n        # ...or iterables of strings.\n        else:\n            # TODO: Check MP for existence of better iterable test.\n            try:\n                compare_with = iter(other)\n\n            except TypeError:\n                return False\n\n        return set(self._class_list) == set(compare_with)\n\n    def __iter__(self):\n        return iter(self._class_list)\n\n    def __len__(self):\n        return self._class_list.length\n\n    def __repr__(self):\n        return f"Classes({\', \'.join(self._class_list)})"\n\n    def __str__(self):\n        return " ".join(self._class_list)\n\n    def add(self, *class_names):\n        """Add one or more classes to the element."""\n        for class_name in class_names:\n            if isinstance(class_name, list):\n                for item in class_name:\n                    self.add(item)\n\n            else:\n                self._class_list.add(class_name)\n\n    def contains(self, class_name):\n        """Check if the element has the specified class."""\n        return class_name in self\n\n    def remove(self, *class_names):\n        """Remove one or more classes from the element."""\n        for class_name in class_names:\n            if isinstance(class_name, list):\n                for item in class_name:\n                    self.remove(item)\n\n            else:\n                self._class_list.remove(class_name)\n\n    def replace(self, old_class, new_class):\n        """Replace one of the element\'s classes with another."""\n        self.remove(old_class)\n        self.add(new_class)\n\n    def toggle(self, *class_names):\n        """Toggle one or more of the element\'s classes."""\n        for class_name in class_names:\n            if class_name in self:\n                self.remove(class_name)\n\n            else:\n                self.add(class_name)\n\n\nclass HasOptions:\n    """Mix-in for elements that have an options attribute.\n\n    The elements that support options are: <datalist>, <optgroup>, and <select>.\n    """\n\n    @property\n    def options(self):\n        """Return the element\'s options as an `Options"""\n        if not hasattr(self, "_options"):\n            self._options = Options(self)\n\n        return self._options\n\n\nclass Options:\n    """This class represents the <option>s of a <datalist>, <optgroup> or <select>.\n\n    It allows access to add and remove <option>s by using the `add`, `remove` and\n    `clear` methods.\n    """\n\n    def __init__(self, element):\n        self._element = element\n\n    def __getitem__(self, key):\n        return self.options[key]\n\n    def __iter__(self):\n        yield from self.options\n\n    def __len__(self):\n        return len(self.options)\n\n    def __repr__(self):\n        return f"{self.__class__.__name__} (length: {len(self)}) {self.options}"\n\n    @property\n    def options(self):\n        """Return the list of options."""\n        return [Element.wrap_dom_element(o) for o in self._element._dom_element.options]\n\n    @property\n    def selected(self):\n        """Return the selected option."""\n        return self.options[self._element._dom_element.selectedIndex]\n\n    def add(self, value=None, html=None, text=None, before=None, **kwargs):\n        """Add a new option to the element"""\n        if value is not None:\n            kwargs["value"] = value\n\n        if html is not None:\n            kwargs["innerHTML"] = html\n\n        if text is not None:\n            kwargs["text"] = text\n\n        new_option = option(**kwargs)\n\n        if before:\n            if isinstance(before, Element):\n                before = before._dom_element\n\n        self._element._dom_element.add(new_option._dom_element, before)\n\n    def clear(self):\n        """Remove all options."""\n        while len(self) > 0:\n            self.remove(0)\n\n    def remove(self, index):\n        """Remove the option at the specified index."""\n        self._element._dom_element.remove(index)\n\n\nclass Style:\n    """A dict-like interface to an element\'s `style` attribute."""\n\n    def __init__(self, element: Element):\n        self._element = element\n        self._style = self._element._dom_element.style\n\n    def __getitem__(self, key):\n        return self._style.getPropertyValue(key)\n\n    def __setitem__(self, key, value):\n        self._style.setProperty(key, value)\n\n    def remove(self, key):\n        """Remove a CSS property from the element."""\n        self._style.removeProperty(key)\n\n    def set(self, **kwargs):\n        """Set one or more CSS properties on the element."""\n        for key, value in kwargs.items():\n            self._element._dom_element.style.setProperty(key, value)\n\n    # CSS Properties\n    # Reference: https://github.com/microsoft/TypeScript/blob/main/src/lib/dom.generated.d.ts#L3799C1-L5005C2\n    # Following properties automatically generated from the above reference using\n    # tools/codegen_css_proxy.py\n    @property\n    def visible(self):\n        return self._element._dom_element.style.visibility\n\n    @visible.setter\n    def visible(self, value):\n        self._element._dom_element.style.visibility = value\n\n\nclass ContainerElement(Element):\n    """Base class for elements that can contain other elements."""\n\n    def __init__(\n        self, *args, children=None, dom_element=None, style=None, classes=None, **kwargs\n    ):\n        super().__init__(\n            dom_element=dom_element, style=style, classes=classes, **kwargs\n        )\n\n        for child in list(args) + (children or []):\n            if isinstance(child, Element) or isinstance(child, ElementCollection):\n                self.append(child)\n\n            else:\n                self.innerHTML += child\n\n    def __iter__(self):\n        yield from self.children\n\n\nclass ClassesCollection:\n    """A set-like interface to the classes of the elements in a collection."""\n\n    def __init__(self, collection):\n        self._collection = collection\n\n    def __contains__(self, class_name):\n        for element in self._collection:\n            if class_name in element.classes:\n                return True\n\n        return False\n\n    def __eq__(self, other):\n        return (\n            isinstance(other, ClassesCollection)\n            and self._collection == other._collection\n        )\n\n    def __iter__(self):\n        for class_name in self._all_class_names():\n            yield class_name\n\n    def __len__(self):\n        return len(self._all_class_names())\n\n    def __repr__(self):\n        return f"ClassesCollection({repr(self._collection)})"\n\n    def __str__(self):\n        return " ".join(self._all_class_names())\n\n    def add(self, *class_names):\n        """Add one or more classes to the elements in the collection."""\n        for element in self._collection:\n            element.classes.add(*class_names)\n\n    def contains(self, class_name):\n        """Check if any element in the collection has the specified class."""\n        return class_name in self\n\n    def remove(self, *class_names):\n        """Remove one or more classes from the elements in the collection."""\n\n        for element in self._collection:\n            element.classes.remove(*class_names)\n\n    def replace(self, old_class, new_class):\n        """Replace one of the classes in the elements in the collection with another."""\n        for element in self._collection:\n            element.classes.replace(old_class, new_class)\n\n    def toggle(self, *class_names):\n        """Toggle one or more classes on the elements in the collection."""\n        for element in self._collection:\n            element.classes.toggle(*class_names)\n\n    def _all_class_names(self):\n        all_class_names = set()\n        for element in self._collection:\n            for class_name in element.classes:\n                all_class_names.add(class_name)\n\n        return all_class_names\n\n\nclass StyleCollection:\n    """A dict-like interface to the styles of the elements in a collection."""\n\n    def __init__(self, collection):\n        self._collection = collection\n\n    def __getitem__(self, key):\n        return [element.style[key] for element in self._collection._elements]\n\n    def __setitem__(self, key, value):\n        for element in self._collection._elements:\n            element.style[key] = value\n\n    def __repr__(self):\n        return f"StyleCollection({repr(self._collection)})"\n\n    def remove(self, key):\n        """Remove a CSS property from the elements in the collection."""\n        for element in self._collection._elements:\n            element.style.remove(key)\n\n\nclass ElementCollection:\n    @classmethod\n    def wrap_dom_elements(cls, dom_elements):\n        """Wrap an iterable of dom_elements in an `ElementCollection`."""\n\n        return cls(\n            [Element.wrap_dom_element(dom_element) for dom_element in dom_elements]\n        )\n\n    def __init__(self, elements: [Element]):\n        self._elements = elements\n        self._classes = ClassesCollection(self)\n        self._style = StyleCollection(self)\n\n    def __eq__(self, obj):\n        """Check for equality by comparing the underlying DOM elements."""\n        return isinstance(obj, ElementCollection) and obj._elements == self._elements\n\n    def __getitem__(self, key):\n        """Get an item in the collection.\n\n        If `key` is an integer or a slice we use it to index/slice the collection.\n        Otherwise, we use `key` as a query selector.\n        """\n        if isinstance(key, int):\n            return self._elements[key]\n\n        elif isinstance(key, slice):\n            return ElementCollection(self._elements[key])\n\n        return self.find(key)\n\n    def __iter__(self):\n        yield from self._elements\n\n    def __len__(self):\n        return len(self._elements)\n\n    def __repr__(self):\n        return (\n            f"{self.__class__.__name__} (length: {len(self._elements)}) "\n            f"{self._elements}"\n        )\n\n    def __getattr__(self, name):\n        return [getattr(element, name) for element in self._elements]\n\n    def __setattr__(self, name, value):\n        # This class overrides `__setattr__` to delegate "public" attributes to the\n        # elements in the collection. BUT, we don\'t use the usual Python pattern where\n        # we set attributes on the collection itself via `self.__dict__` as that is not\n        # yet supported in our build of MicroPython. Instead, we handle it here by\n        # using super for all "private" attributes (those starting with an underscore).\n        if name.startswith("_"):\n            super().__setattr__(name, value)\n\n        else:\n            for element in self._elements:\n                setattr(element, name, value)\n\n    @property\n    def classes(self):\n        """Return the classes of the elements in the collection as a `ClassesCollection`."""\n        return self._classes\n\n    @property\n    def elements(self):\n        """Return the elements in the collection as a list."""\n        return self._elements\n\n    @property\n    def style(self):\n        """"""\n        return self._style\n\n    def find(self, selector):\n        """Find all elements that match the specified selector.\n\n        Return the results as a (possibly empty) `ElementCollection`.\n        """\n        elements = []\n        for element in self._elements:\n            elements.extend(element.find(selector))\n\n        return ElementCollection(elements)\n\n\n# Classes for every HTML element. If the element tag name (e.g. "input") clashes with\n# either a Python keyword or common symbol, then we suffix the class name with an "_"\n# (e.g. the class for the "input" element is "input_").\n\n\nclass a(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a"""\n\n\nclass abbr(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr"""\n\n\nclass address(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address"""\n\n\nclass area(Element):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area"""\n\n\nclass article(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article"""\n\n\nclass aside(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside"""\n\n\nclass audio(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio"""\n\n\nclass b(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b"""\n\n\nclass base(Element):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base"""\n\n\nclass blockquote(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote"""\n\n\nclass body(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body"""\n\n\nclass br(Element):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br"""\n\n\nclass button(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button"""\n\n\nclass canvas(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas"""\n\n    def download(self, filename: str = "snapped.png"):\n        """Download the current element with the filename provided in input.\n\n        Inputs:\n            * filename (str): name of the file being downloaded\n\n        Output:\n            None\n        """\n        download_link = a(download=filename, href=self._dom_element.toDataURL())\n\n        # Adding the link to the DOM is recommended for browser compatibility to make\n        # sure that the click works.\n        self.append(download_link)\n\n        download_link._dom_element.click()\n\n    def draw(self, what, width=None, height=None):\n        """Draw `what` on the current element\n\n        Inputs:\n\n            * what (canvas image source): An element to draw into the context. The\n                specification permits any canvas image source, specifically, an\n                HTMLImageElement, an SVGImageElement, an HTMLVideoElement,\n                an HTMLCanvasElement, an ImageBitmap, an OffscreenCanvas, or a\n                VideoFrame.\n        """\n        if isinstance(what, Element):\n            what = what._dom_element\n\n        # https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage\n        ctx = self._dom_element.getContext("2d")\n        if width or height:\n            ctx.drawImage(what, 0, 0, width, height)\n\n        else:\n            ctx.drawImage(what, 0, 0)\n\n\nclass caption(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption"""\n\n\nclass cite(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite"""\n\n\nclass code(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code"""\n\n\nclass col(Element):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col"""\n\n\nclass colgroup(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup"""\n\n\nclass data(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/data"""\n\n\nclass datalist(ContainerElement, HasOptions):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist"""\n\n\nclass dd(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd"""\n\n\nclass del_(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del"""\n\n\nclass details(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details"""\n\n\nclass dialog(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog"""\n\n\nclass div(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"""\n\n\nclass dl(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl"""\n\n\nclass dt(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt"""\n\n\nclass em(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em"""\n\n\nclass embed(Element):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed"""\n\n\nclass fieldset(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset"""\n\n\nclass figcaption(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption"""\n\n\nclass figure(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure"""\n\n\nclass footer(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer"""\n\n\nclass form(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form"""\n\n\nclass h1(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h1"""\n\n\nclass h2(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2"""\n\n\nclass h3(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h3"""\n\n\nclass h4(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h4"""\n\n\nclass h5(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h5"""\n\n\nclass h6(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h6"""\n\n\nclass head(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head"""\n\n\nclass header(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header"""\n\n\nclass hgroup(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup"""\n\n\nclass hr(Element):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr"""\n\n\nclass html(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html"""\n\n\nclass i(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i"""\n\n\nclass iframe(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe"""\n\n\nclass img(Element):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img"""\n\n\nclass input_(Element):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"""\n\n\nclass ins(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins"""\n\n\nclass kbd(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd"""\n\n\nclass label(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label"""\n\n\nclass legend(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend"""\n\n\nclass li(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li"""\n\n\nclass link(Element):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link"""\n\n\nclass main(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main"""\n\n\nclass map_(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map"""\n\n\nclass mark(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark"""\n\n\nclass menu(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu"""\n\n\nclass meta(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta"""\n\n\nclass meter(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter"""\n\n\nclass nav(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav"""\n\n\nclass object_(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object"""\n\n\nclass ol(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol"""\n\n\nclass optgroup(ContainerElement, HasOptions):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup"""\n\n\nclass option(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option"""\n\n\nclass output(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output"""\n\n\nclass p(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p"""\n\n\nclass param(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/param"""\n\n\nclass picture(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture"""\n\n\nclass pre(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre"""\n\n\nclass progress(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress"""\n\n\nclass q(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q"""\n\n\nclass s(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s"""\n\n\nclass script(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script"""\n\n\nclass section(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section"""\n\n\nclass select(ContainerElement, HasOptions):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select"""\n\n\nclass small(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small"""\n\n\nclass source(Element):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source"""\n\n\nclass span(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span"""\n\n\nclass strong(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong"""\n\n\nclass style(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style"""\n\n\nclass sub(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub"""\n\n\nclass summary(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/summary"""\n\n\nclass sup(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup"""\n\n\nclass table(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table"""\n\n\nclass tbody(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody"""\n\n\nclass td(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td"""\n\n\nclass template(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template"""\n\n\nclass textarea(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea"""\n\n\nclass tfoot(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot"""\n\n\nclass th(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th"""\n\n\nclass thead(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead"""\n\n\nclass time(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time"""\n\n\nclass title(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title"""\n\n\nclass tr(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr"""\n\n\nclass track(Element):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track"""\n\n\nclass u(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u"""\n\n\nclass ul(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul"""\n\n\nclass var(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/var"""\n\n\nclass video(ContainerElement):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video"""\n\n    def snap(\n        self,\n        to: Element | str = None,\n        width: int | None = None,\n        height: int | None = None,\n    ):\n        """\n        Capture a snapshot (i.e. a single frame) of a video to a canvas.\n\n        Inputs:\n\n            * to: the canvas to save the video frame to (if None, one is created).\n            * width: width of the snapshot (defaults to the video width).\n            * height: height of the snapshot (defaults to the video height).\n\n        Output:\n            (Element) canvas element where the video frame snapshot was drawn into\n        """\n        width = width if width is not None else self.videoWidth\n        height = height if height is not None else self.videoHeight\n\n        if to is None:\n            to = canvas(width=width, height=height)\n\n        elif isinstance(to, Element):\n            if to.tag != "canvas":\n                raise TypeError("Element to snap to must be a canvas.")\n\n        elif getattr(to, "tagName", "") == "CANVAS":\n            to = canvas(dom_element=to)\n\n        # If \'to\' is a string, then assume it is a query selector.\n        elif isinstance(to, str):\n            nodelist = document.querySelectorAll(to)  # NOQA\n            if nodelist.length == 0:\n                raise TypeError("No element with selector {to} to snap to.")\n\n            if nodelist[0].tagName != "CANVAS":\n                raise TypeError("Element to snap to must be a canvas.")\n\n            to = canvas(dom_element=nodelist[0])\n\n        to.draw(self, width, height)\n\n        return to\n\n\nclass wbr(Element):\n    """Ref: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr"""\n\n\n# fmt: off\nELEMENT_CLASSES = [\n    a, abbr, address, area, article, aside, audio,\n    b, base, blockquote, body, br, button,\n    canvas, caption, cite, code, col, colgroup,\n    data, datalist, dd, del_, details, dialog, div, dl, dt,\n    em, embed,\n    fieldset, figcaption, figure, footer, form,\n    h1, h2, h3, h4, h5, h6, head, header, hgroup, hr, html,\n    i, iframe, img, input_, ins,\n    kbd,\n    label, legend, li, link,\n    main, map_, mark, menu, meta, meter,\n    nav,\n    object_, ol, optgroup, option, output,\n    p, param, picture, pre, progress,\n    q,\n    s, script, section, select, small, source, span, strong, style, sub, summary, sup,\n    table, tbody, td, template, textarea, tfoot, th, thead, time, title, tr, track,\n    u, ul,\n    var, video,\n    wbr,\n]\n# fmt: on\n\n\n# Register all the default (aka "built-in") Element classes.\nElement.register_element_classes(ELEMENT_CLASSES)\n\n\nclass Page:\n    """Represents the whole page."""\n\n    def __init__(self):\n        self.html = Element.wrap_dom_element(document.documentElement)\n        self.body = Element.wrap_dom_element(document.body)\n        self.head = Element.wrap_dom_element(document.head)\n\n    def __getitem__(self, selector):\n        """Get an item on the page.\n\n        We don\'t index/slice the page like we do with `Element` and `ElementCollection`\n        as it is a bit muddier what the ideal behavior should be. Instead, we simply\n        use this as a convenience method to `find` elements on the page.\n        """\n        return self.find(selector)\n\n    @property\n    def title(self):\n        """Return the page title."""\n        return document.title\n\n    @title.setter\n    def title(self, value):\n        """Set the page title."""\n        document.title = value\n\n    def append(self, *items):\n        """Shortcut for `page.body.append`."""\n        self.body.append(*items)\n\n    def find(self, selector):  # NOQA\n        """Find all elements that match the specified selector.\n\n        Return the results as a (possibly empty) `ElementCollection`.\n        """\n        return ElementCollection.wrap_dom_elements(document.querySelectorAll(selector))\n\n\npage = Page()\n',"websocket.py":'import js\nfrom pyscript.util import as_bytearray\n\ncode = "code"\nprotocols = "protocols"\nreason = "reason"\n\n\nclass EventMessage:\n    def __init__(self, event):\n        self._event = event\n\n    def __getattr__(self, attr):\n        value = getattr(self._event, attr)\n\n        if attr == "data" and not isinstance(value, str):\n            if hasattr(value, "to_py"):\n                return value.to_py()\n            # shims in MicroPython\n            return memoryview(as_bytearray(value))\n\n        return value\n\n\nclass WebSocket(object):\n    CONNECTING = 0\n    OPEN = 1\n    CLOSING = 2\n    CLOSED = 3\n\n    def __init__(self, **kw):\n        url = kw["url"]\n        if protocols in kw:\n            socket = js.WebSocket.new(url, kw[protocols])\n        else:\n            socket = js.WebSocket.new(url)\n        object.__setattr__(self, "_ws", socket)\n\n        for t in ["onclose", "onerror", "onmessage", "onopen"]:\n            if t in kw:\n                socket[t] = kw[t]\n\n    def __getattr__(self, attr):\n        return getattr(self._ws, attr)\n\n    def __setattr__(self, attr, value):\n        if attr == "onmessage":\n            self._ws[attr] = lambda e: value(EventMessage(e))\n        else:\n            self._ws[attr] = value\n\n    def close(self, **kw):\n        if code in kw and reason in kw:\n            self._ws.close(kw[code], kw[reason])\n        elif code in kw:\n            self._ws.close(kw[code])\n        else:\n            self._ws.close()\n\n    def send(self, data):\n        if isinstance(data, str):\n            self._ws.send(data)\n        else:\n            buffer = js.Uint8Array.new(len(data))\n            for pos, b in enumerate(data):\n                buffer[pos] = b\n            self._ws.send(buffer)\n',"workers.py":'import js as _js\nfrom polyscript import workers as _workers\n\n_get = _js.Reflect.get\n\n\ndef _set(script, name, value=""):\n    script.setAttribute(name, value)\n\n\n# this solves an inconsistency between Pyodide and MicroPython\n# @see https://github.com/pyscript/pyscript/issues/2106\nclass _ReadOnlyProxy:\n    def __getitem__(self, name):\n        return _get(_workers, name)\n\n    def __getattr__(self, name):\n        return _get(_workers, name)\n\n\nworkers = _ReadOnlyProxy()\n\n\nasync def create_named_worker(src="", name="", config=None, type="py"):\n    from json import dumps\n\n    if not src:\n        raise ValueError("Named workers require src")\n\n    if not name:\n        raise ValueError("Named workers require a name")\n\n    s = _js.document.createElement("script")\n    s.type = type\n    s.src = src\n    _set(s, "worker")\n    _set(s, "name", name)\n\n    if config:\n        _set(s, "config", isinstance(config, str) and config or dumps(config))\n\n    _js.document.body.append(s)\n    return await workers[name]\n'}}),Is.push("import pyscript as _pyscript"),Is.push(...["_Path","_path","_os","_pyscript"].map((e=>`del ${e}`))),Is.push("\n");const Us=Is.join("\n"),Fs=Ls.join("\n"),zs=e=>Vs.main[e],Ds=e=>Vs.worker[e],Bs=(e,n,t,s)=>{e[t]=()=>{const e=s?[s]:[];return e.push(...n(t)),e.map(Xe).join("\n")}},qs=(e,n)=>{const t="mpy"===n?Us.replace(Fs,""):Us,s={};return Bs(s,e,"codeBeforeRun",t),Bs(s,e,"codeBeforeRunAsync",t),Bs(s,e,"codeAfterRun"),Bs(s,e,"codeAfterRunAsync"),s},Js=(e,n)=>{const t=[...Ds(n)];if(t.length){const s=xt(e[`_${n}`]||(n.endsWith("Async")?async(e,n,...t)=>{for(const s of t)await s(e,n)}:(e,n,...t)=>{for(const s of t)s(e,n)})),r=t.map(xt).join(", ");return Function(`return(w,x)=>(${s})(w,x,...[${r}])`)()}},Gs=Ps({typeof:"function"}),Ys=Ps({typeof:"string"}),Ks='\n    import builtins\n    def input(prompt=""):\n        raise Exception("\\n           ".join([\n            "input() doesn\'t work when PyScript runs in the main thread.",\n            "Consider using the worker attribute: https://pyscript.github.io/docs/2023.11.2/user-guide/workers/"\n        ]))\n\n    builtins.input = input\n    del builtins\n    del input\n',Vs={main:{onWorker:new Gs,onReady:new Gs,onBeforeRun:new Gs,onBeforeRunAsync:new Gs,onAfterRun:new Gs,onAfterRunAsync:new Gs,codeBeforeRun:new Ys([Ks]),codeBeforeRunAsync:new Ys,codeAfterRun:new Ys,codeAfterRunAsync:new Ys},worker:{onReady:new Gs,onBeforeRun:new Gs,onBeforeRunAsync:new Gs,onAfterRun:new Gs,onAfterRunAsync:new Gs,codeBeforeRun:new Ys,codeBeforeRunAsync:new Ys,codeAfterRun:new Ys,codeAfterRunAsync:new Ys}},Xs=({tagName:e})=>"SCRIPT"===e,[Zs,Qs]=[...fs.entries()].map((([e,n])=>async function(t,s){await Ss.get(e).plugins;const r=ps.call(new cs(null,ir.get(e)),t,{...s,type:n});return en(r.sync,xs),r.ready})),[{PyWorker:er,MPWorker:nr,hooks:tr,config:sr,whenDefined:rr},or]=e("@pyscript/core",{PyWorker:Zs,MPWorker:Qs,hooks:Vs,config:{},whenDefined:is}),ar=e=>e?.interpreter&&Rs(e.interpreter),ir=new Map;for(const[e,n]of fs){if(or)break;const t=(n,t,s)=>{t?s.then((()=>un(n,e,"done"))):un(n,e,"done")},{config:s,configURL:r,plugins:o,error:a}=Ss.get(e);let i=0;const l=(n=e)=>`${n}-${i++}`,c=async(n,t,s)=>{if(n.hasAttribute("src"))try{return await ws(n.getAttribute("src")).then(gs)}catch(e){t.stderr(e)}if(s)return Xe(n.textContent);const r=Xe(Ze(n.innerHTML));return console.warn(`Deprecated: use <script type="${e}"> for an always safe content parsing:\n`,r),r};let p,u=!1;const f=({XWorker:e,interpreter:n,io:t})=>{u||(u=!0,n.registerJsModule("_pyscript",{PyWorker:function(...n){const s=e(...n);return s.onerror=({error:e})=>t.stderr(e),s},js_import:(...e)=>Promise.all(e.map((e=>import(e)))),get target(){return Xs(p)?p.target.id:p.id}}))};a||o.then((()=>{const o=new Map,a={main:{...qs(zs,e),async onReady(n,s){f(n);for(const e of zs("onReady"))await e(n,s);if(o.has(s)){let{message:e}=o.get(s);o.delete(s);const t=e===$t;return e=`(${hs.CONFLICTING_CODE}) ${e} for `,e+=s.cloneNode(t).outerHTML,void n.io.stderr(e)}if(Xs(s)){const{attributes:{async:r,target:o}}=s,a=!!o?.value,i=a?Lt(s,o.value):document.createElement("script-py");if(!a){const{head:e,body:n}=document;e.contains(s)?n.append(i):s.after(i)}i.id||(i.id=l()),sn(s,"target",{value:i}),un(s,e,"ready"),t(s,r,n["run"+(r?"Async":"")](await c(s,n.io,!0)))}else s._wrap.resolve(n);console.debug("[pyscript/main] PyScript Ready")},onWorker(e,n){en(n.sync,xs);for(const t of zs("onWorker"))t(e,n)},onBeforeRun(e,n){p=n,As(zs,e,n,"onBeforeRun")},onBeforeRunAsync:(e,n)=>(p=n,As(zs,e,n,"onBeforeRunAsync")),onAfterRun(e,n){As(zs,e,n,"onAfterRun")},onAfterRunAsync:(e,n)=>As(zs,e,n,"onAfterRunAsync")},worker:{...qs(Ds,e),get onReady(){return Js(this,"onReady")},get onBeforeRun(){return Js(this,"onBeforeRun")},get onBeforeRunAsync(){return Js(this,"onBeforeRunAsync")},get onAfterRun(){return Js(this,"onAfterRun")},get onAfterRunAsync(){return Js(this,"onAfterRunAsync")}}};ir.set(e,a),as(e,{config:s,configURL:r,interpreter:n,hooks:a,env:`${e}-script`,version:ar(s),onerror(e,n){o.set(n,e)}}),customElements.define(`${e}-script`,class extends HTMLElement{constructor(){en(super(),{_wrap:Promise.withResolvers(),srcCode:"",executed:!1})}get id(){return super.id||(super.id=l())}set id(e){super.id=e}async connectedCallback(){if(!this.executed){this.executed=!0;const n=this.hasAttribute("async"),{io:s,run:r,runAsync:o}=await this._wrap.promise;this.srcCode=await c(this,s,!this.childElementCount),this.replaceChildren(),this.style.display="block",un(this,e,"ready"),t(this,n,(n?o:r)(this.srcCode))}}})})),sr[e]=structuredClone(s)}export{cs as H,fs as T,ps as X,Xe as a,Fs as b,os as c,tn as d,tr as e,er as f,nr as g,sr as h,Ks as i,rr as j,ar as o,Rs as r,Us as s};
//# sourceMappingURL=core-XJOBvPX-.js.map